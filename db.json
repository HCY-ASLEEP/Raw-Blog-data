{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.14.49.png","path":"pictures/hexo-基本美化/2022.10.23.16.14.49.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.17.17.png","path":"pictures/hexo-基本美化/2022.10.23.16.17.17.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.19.21.png","path":"pictures/hexo-基本美化/2022.10.23.16.19.21.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.22.22.png","path":"pictures/hexo-基本美化/2022.10.23.16.22.22.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.25.30.png","path":"pictures/hexo-基本美化/2022.10.23.16.25.30.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.27.38.png","path":"pictures/hexo-基本美化/2022.10.23.16.27.38.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.29.42.png","path":"pictures/hexo-基本美化/2022.10.23.16.29.42.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.32.39.png","path":"pictures/hexo-基本美化/2022.10.23.16.32.39.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.33.18.png","path":"pictures/hexo-基本美化/2022.10.23.16.33.18.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.35.28.png","path":"pictures/hexo-基本美化/2022.10.23.16.35.28.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.36.27.png","path":"pictures/hexo-基本美化/2022.10.23.16.36.27.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.38.27.png","path":"pictures/hexo-基本美化/2022.10.23.16.38.27.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.41.32.png","path":"pictures/hexo-基本美化/2022.10.23.16.41.32.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/2022.10.23.14.48.30.png","path":"pictures/github-pages-hexo/2022.10.23.14.48.30.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png","path":"pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png","path":"pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png","path":"pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png","path":"pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png","path":"pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg","path":"pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg","modified":0,"renderable":0},{"_id":"source/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png","path":"pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-文档分类-图片存储/20191220164252492.png","path":"pictures/hexo-文档分类-图片存储/20191220164252492.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.19.31.09.png","path":"pictures/hexo-文档分类-图片存储/2022.10.23.19.31.09.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.19.50.12.png","path":"pictures/hexo-文档分类-图片存储/2022.10.23.19.50.12.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.19.55.54.png","path":"pictures/hexo-文档分类-图片存储/2022.10.23.19.55.54.png","modified":0,"renderable":0},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.20.00.11.png","path":"pictures/hexo-文档分类-图片存储/2022.10.23.20.00.11.png","modified":0,"renderable":0},{"_id":"source/pictures/初识MARO/cim.container_flow.svg","path":"pictures/初识MARO/cim.container_flow.svg","modified":0,"renderable":0},{"_id":"source/pictures/初识MARO/cim.global_trade.svg","path":"pictures/初识MARO/cim.global_trade.svg","modified":0,"renderable":0},{"_id":"source/pictures/初识MARO/cim.toys.svg","path":"pictures/初识MARO/cim.toys.svg","modified":0,"renderable":0},{"_id":"source/pictures/初识MARO/maro_overview.svg","path":"pictures/初识MARO/maro_overview.svg","modified":0,"renderable":0},{"_id":"source/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png","path":"pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png","modified":0,"renderable":0},{"_id":"source/pictures/maro-vm-调度/2022.10.27.20.00.43.png","path":"pictures/maro-vm-调度/2022.10.27.20.00.43.png","modified":0,"renderable":0},{"_id":"source/pictures/maro-vm-调度/2022.10.28.15.14.52.png","path":"pictures/maro-vm-调度/2022.10.28.15.14.52.png","modified":0,"renderable":0},{"_id":"source/pictures/maro-vm-调度/vm.energy_curve.svg","path":"pictures/maro-vm-调度/vm.energy_curve.svg","modified":0,"renderable":0}],"Cache":[{"_id":"source/categories/index.md","hash":"0d6d55c110d631865e0de6874472dcd80a540dc1","modified":1666526846725},{"_id":"source/_posts/Github-Pages+Hexo.md","hash":"ca655a20c65502671201771e024ffbb59c4440e8","modified":1666837323141},{"_id":"source/_posts/Hexo-基本美化.md","hash":"3240392efefb4914746d065ab23ebfefe2ca9194","modified":1666517264865},{"_id":"source/_posts/The-First-Blog.md","hash":"444ca34af0aa4804e045297b705f6f29c598e910","modified":1666444618706},{"_id":"source/_posts/Hexo-文档分类-图片存储.md","hash":"552108fc1b5448085d0b5cd343e96efd0c994029","modified":1666578535634},{"_id":"source/tags/index.md","hash":"37014f94e07549ee313b57cded12695dae943e51","modified":1666503496617},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.17.17.png","hash":"91b7f05e1d750839cef5e6a0c3adcb8303337c4d","modified":1666513043042},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.19.21.png","hash":"38a1b75eb36b68f1adff146fb584e98391e328f5","modified":1666513172037},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.22.22.png","hash":"c46eec025b7d9ffac0eab732b81fc5ca58c64ec9","modified":1666513349221},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.25.30.png","hash":"b1afb2c4d3b8b51fdb53ab65013a8253dc78df6a","modified":1666513536273},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.27.38.png","hash":"fbf2d785aa4fe1df44ccce9fea77ce6375c78fbd","modified":1666513665593},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.29.42.png","hash":"5b6da52454cd3d315559d496c9dc2473b0923b89","modified":1666513791441},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.32.39.png","hash":"0e1555e013c4f92031382129512dfeeeb6369b80","modified":1666513964364},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.33.18.png","hash":"ea48e67bc63e67d7e1d2a5c8811bfddd355e4bbb","modified":1666514004788},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.35.28.png","hash":"6d9f2604fd7581231717599a739ffccfce6d5c03","modified":1666514140316},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.36.27.png","hash":"685bf6ebf2bdd00abb8a62ad34e9963811e526f9","modified":1666514199500},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.38.27.png","hash":"9964bd3d7506844711c1af95880e5f5710d854ab","modified":1666514311792},{"_id":"source/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png","hash":"0554e5bfb9ab1ebf20c59f7873d0ee906c6dfadd","modified":1666509665442},{"_id":"source/pictures/hexo-文档分类-图片存储/20191220164252492.png","hash":"ee43cde544033da23da1d35adb3c219e29b9c2bf","modified":1666526699574},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.19.50.12.png","hash":"c66ef07b7afce0110928a7ddb5b9fc400c987e96","modified":1666525816618},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.19.55.54.png","hash":"5bfb170d9ebb4b5119d96e4578adbe100c30521f","modified":1666526160196},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.20.00.11.png","hash":"849f447cf80ea5b59d7c54e70c565343d3788cbe","modified":1666526417827},{"_id":"source/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg","hash":"d33ced84f6b9071a0e545d982523db604152f9d2","modified":1666509657470},{"_id":"source/pictures/hexo-文档分类-图片存储/2022.10.23.19.31.09.png","hash":"0bf9c351e2a0b1841ec89a4169fb91ec6973b683","modified":1666524886526},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.41.32.png","hash":"aa30b2752ab906bb2a654fda449c4c828fceaa1e","modified":1666514503508},{"_id":"source/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png","hash":"b982b6ba8875331f124b92547c8e56a1b576e423","modified":1666506354935},{"_id":"source/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png","hash":"db24dcae76df101d7d7ba3cd546e24eec3564ebf","modified":1666506502102},{"_id":"source/pictures/hexo-基本美化/2022.10.23.16.14.49.png","hash":"a77cd356a29de10852cb6e289e62731cf98187d3","modified":1666512895718},{"_id":"source/pictures/github-pages-hexo/2022.10.23.14.48.30.png","hash":"7915c2596f14d29608a15ae998df23095b287de2","modified":1666507725796},{"_id":"source/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png","hash":"04fe446157d97b72e4f12c53376272ab9b234ff1","modified":1666506401987},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/README.md","hash":"56638e4978154a2f2a3f03ba84047b77b4a499cc","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"618ea653d36f4444a0768513788a3f11beaddd16","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/package.json","hash":"4cdf28232ac2e9f5aca6aac62edb7569a5a2905b","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"66d8d7c5d4fe4458b0f1ce7e22b039198aa7eb1b","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1666572684217},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"fccbf2855392186e11daa8590121073594037b7b","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"b813da5aed9d73b809133db4dfb08f90ec56afd9","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1666572684217},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"819c19eb9d142e5411f77cf3821d90f740ee114a","modified":1666572684265},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"8c2b6361f2de17561c1a3eede2bf47b4e2ba6ce5","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"519239e35c3bda7b62b00ff5d34644f45b16fe6a","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1666572684269},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"6c40aa438c658eb7f0cd0f6a759f18b43e7e8f93","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"6c82bfd2ec8248c248da701f091b548a7a133580","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1666572684217},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"ccf27b9249524b9fec1c15497b4353c8d1748c6c","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"434b3e76a040a816169e1929657e4176e7b8164c","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"3ce10d4cce94e3d4c482c2e18bb6f0f0ca380d3d","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"f160e39943e39d7276da86adb47c3f08e5f22c7a","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"30e03a1d4828259f82d46e64cbfe2955b6cff9a9","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1666572684185},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1666572684185},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"263eddabfae40e54c0591e7baa8403ade8cdd56d","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1666572684181},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"32d31cb5a155681c19f5ad0bb56dcb08429f93ef","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1666572684185},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"0ba2bf0266f1fcb8edbd961869f8521b29685c56","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"aff4613756456be26415febc668860fdab8d33c5","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"57eca76cfbbe9a65bc2a77f1deebf003ed335673","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"3d8591bb92df77ceb9d5b07bc76da1ca89e5bd76","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"314805f0186e9f6208c845f0757fdb7891c540f6","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1666572684221},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1666572684225},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"c8b59b404f5d2a0b3b5cd1a6c9a10af5f30e43b5","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1666572684229},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"ec996d0673f766167c86df0966e9da1ae036e103","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1666572684233},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"62faf6b0b0020066a0dec1f0123cf1fee3198e7e","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":1666572684241},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1666572684241},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"163c7441d777bee87042d475e6ce0fde199add28","modified":1666572684241},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"be6cf377ae8f4a01ee76f9b3014e74161d4d5d17","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1666572684237},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1666572684185},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"33a82207a15aad9d1c8fb2251f9e3eba50452932","modified":1666572684189},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1666572684201},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1666572684185},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1666572684197},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1666572684193},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"c2326ee3e8b724d99c24a818ddee32813ea5bf89","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"979486a41a81f2a9fd8b0b87c4f87d6416c68c7d","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1666572684241},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"ff642130354a0b3be0d708c43044ed4d710b5e83","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"759e582d34d08e3386c55d87a835a9523608619f","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1666572684253},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1666572684257},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":1666572684261},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"f2328caa94645836e06fb39a6a9c9a84ed68a8b5","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1666572684241},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1666572684245},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":1666572684249},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1666572684261},{"_id":"source/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png","hash":"74a69d0a59da65edf58eb15698b0f730e3c104f0","modified":1666506260803},{"_id":"source/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png","hash":"2e141a4aa28e3177ea5e5b0ba9fbf91fa4232db2","modified":1666506597618},{"_id":"public/search.xml","hash":"b479f3a22f7fae4df2830b499180afb2622190b5","modified":1667099256130},{"_id":"public/tags/index.html","hash":"a2fe7640e152aa73cfb45d3d82cfefe955f9028b","modified":1667029777798},{"_id":"public/categories/index.html","hash":"7d6187705160c4c8ea97ad9bacf20dbad79ee68c","modified":1666578820165},{"_id":"public/2022/10/23/Hexo-基本美化/index.html","hash":"c5bcf455443bdfacc919ba94b7e18b4636114040","modified":1666837340778},{"_id":"public/2022/10/22/The-First-Blog/index.html","hash":"67198a564ddae8a64c8073aeef733d8798c9ab4c","modified":1667029777798},{"_id":"public/categories/Hexo-Usage/index.html","hash":"e8bb56a6e0aa9ddc22dee007fae6eae5a0fd2491","modified":1666837340778},{"_id":"public/archives/index.html","hash":"c6032d93ae1b9a1c3ecc2e0ef63a928d6fc5b647","modified":1667029777798},{"_id":"public/archives/2022/index.html","hash":"68b29e4687526df6730c5bc32c36feea351d6709","modified":1667029777798},{"_id":"public/archives/2022/10/index.html","hash":"457961150f54740ebd41b1f5c8da653927ae1eee","modified":1667029777798},{"_id":"public/tags/Hexo/index.html","hash":"d275429c66c13d104aa944e1eede47c5746403bd","modified":1666837340778},{"_id":"public/tags/Github/index.html","hash":"24ae1207fceb773522c2ee0cebd95a3d37406e4f","modified":1666837340778},{"_id":"public/2022/10/23/Hexo-文档分类-图片存储/index.html","hash":"b88a2e5844e3cec690c0ed1a67bcbfd1162530dd","modified":1666837340778},{"_id":"public/2022/10/23/Github-Pages+Hexo/index.html","hash":"7276cb882d47956e0b42e6cabec5e182ad496038","modified":1667029777798},{"_id":"public/index.html","hash":"eead77a62580d5efc5b4d4b4034b87d8f0ef128f","modified":1667029777798},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1666578820165},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1666578820165},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1666578820165},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1666578820165},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1666578820165},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.17.17.png","hash":"91b7f05e1d750839cef5e6a0c3adcb8303337c4d","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.19.21.png","hash":"38a1b75eb36b68f1adff146fb584e98391e328f5","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.22.22.png","hash":"c46eec025b7d9ffac0eab732b81fc5ca58c64ec9","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.25.30.png","hash":"b1afb2c4d3b8b51fdb53ab65013a8253dc78df6a","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.27.38.png","hash":"fbf2d785aa4fe1df44ccce9fea77ce6375c78fbd","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.29.42.png","hash":"5b6da52454cd3d315559d496c9dc2473b0923b89","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.32.39.png","hash":"0e1555e013c4f92031382129512dfeeeb6369b80","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.33.18.png","hash":"ea48e67bc63e67d7e1d2a5c8811bfddd355e4bbb","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.35.28.png","hash":"6d9f2604fd7581231717599a739ffccfce6d5c03","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.36.27.png","hash":"685bf6ebf2bdd00abb8a62ad34e9963811e526f9","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.38.27.png","hash":"9964bd3d7506844711c1af95880e5f5710d854ab","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png","hash":"0554e5bfb9ab1ebf20c59f7873d0ee906c6dfadd","modified":1666578820165},{"_id":"public/pictures/hexo-文档分类-图片存储/2022.10.23.19.50.12.png","hash":"c66ef07b7afce0110928a7ddb5b9fc400c987e96","modified":1666578820165},{"_id":"public/pictures/hexo-文档分类-图片存储/20191220164252492.png","hash":"ee43cde544033da23da1d35adb3c219e29b9c2bf","modified":1666578820165},{"_id":"public/pictures/hexo-文档分类-图片存储/2022.10.23.19.55.54.png","hash":"5bfb170d9ebb4b5119d96e4578adbe100c30521f","modified":1666578820165},{"_id":"public/pictures/hexo-文档分类-图片存储/2022.10.23.20.00.11.png","hash":"849f447cf80ea5b59d7c54e70c565343d3788cbe","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg","hash":"d33ced84f6b9071a0e545d982523db604152f9d2","modified":1666578820165},{"_id":"public/pictures/hexo-文档分类-图片存储/2022.10.23.19.31.09.png","hash":"0bf9c351e2a0b1841ec89a4169fb91ec6973b683","modified":1666578820165},{"_id":"public/css/noscript.css","hash":"ec89b3425fbce20863d554c6fd495ea29c3c303d","modified":1666578820165},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1666578820165},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1666578820165},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1666578820165},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1666578820165},{"_id":"public/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1666578820165},{"_id":"public/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1666578820165},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1666578820165},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1666578820165},{"_id":"public/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1666578820165},{"_id":"public/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1666578820165},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1666578820165},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1666578820165},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1666578820165},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1666578820165},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1666578820165},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1666578820165},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1666578820165},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1666578820165},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1666578820165},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1666578820165},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1666578820165},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1666578820165},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1666578820165},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"33a82207a15aad9d1c8fb2251f9e3eba50452932","modified":1666578820165},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1666578820165},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1666578820165},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1666578820165},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1666578820165},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1666578820165},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1666578820165},{"_id":"public/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1666578820165},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1666578820165},{"_id":"public/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1666578820165},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1666578820165},{"_id":"public/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1666578820165},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1666578820165},{"_id":"public/css/main.css","hash":"b9b26188141b46c14ae7181bcf68ca5f49aea812","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.41.32.png","hash":"aa30b2752ab906bb2a654fda449c4c828fceaa1e","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png","hash":"b982b6ba8875331f124b92547c8e56a1b576e423","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png","hash":"db24dcae76df101d7d7ba3cd546e24eec3564ebf","modified":1666578820165},{"_id":"public/pictures/hexo-基本美化/2022.10.23.16.14.49.png","hash":"a77cd356a29de10852cb6e289e62731cf98187d3","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/2022.10.23.14.48.30.png","hash":"7915c2596f14d29608a15ae998df23095b287de2","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png","hash":"04fe446157d97b72e4f12c53376272ab9b234ff1","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png","hash":"74a69d0a59da65edf58eb15698b0f730e3c104f0","modified":1666578820165},{"_id":"public/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png","hash":"2e141a4aa28e3177ea5e5b0ba9fbf91fa4232db2","modified":1666578820165},{"_id":"source/_posts/初识MARO.md","hash":"1c5f47e0fabf7e2055cb6de2cecc0e99b7674666","modified":1666751691551},{"_id":"source/pictures/初识MARO/cim.container_flow.svg","hash":"95e2731c5436947ba8892d92ffac3f2240bf77ee","modified":1666336862537},{"_id":"source/pictures/初识MARO/maro_overview.svg","hash":"1de4616a1023908e84ecfe480127d8a763cb66a5","modified":1666342513748},{"_id":"source/pictures/初识MARO/cim.toys.svg","hash":"06515e0001777c60b58e20e42a42b26c05ad4666","modified":1666339482413},{"_id":"source/pictures/初识MARO/cim.global_trade.svg","hash":"12a9d667d63a83d889760069d9dfb09a949f02ab","modified":1666341600970},{"_id":"public/2022/10/26/初识MARO/index.html","hash":"dcfbb088e459ea66e7de8d7bf79e1309098f6b07","modified":1666763391068},{"_id":"public/pictures/初识MARO/cim.container_flow.svg","hash":"95e2731c5436947ba8892d92ffac3f2240bf77ee","modified":1666751322501},{"_id":"public/pictures/初识MARO/maro_overview.svg","hash":"1de4616a1023908e84ecfe480127d8a763cb66a5","modified":1666751322501},{"_id":"public/pictures/初识MARO/cim.toys.svg","hash":"06515e0001777c60b58e20e42a42b26c05ad4666","modified":1666751322501},{"_id":"public/pictures/初识MARO/cim.global_trade.svg","hash":"12a9d667d63a83d889760069d9dfb09a949f02ab","modified":1666751322501},{"_id":"public/tags/MARO/index.html","hash":"e4571d85bb59241d2d5e9c33c2d78c6f0f67c017","modified":1666859935730},{"_id":"source/_posts/Hexo-加强-Next-Theme-美化.md","hash":"759a1891df87913de50bab8eafc885af9ccce8f6","modified":1666763634030},{"_id":"source/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png","hash":"e1441b97e385c56e98eca57b0880aaad9640cb60","modified":1666761864162},{"_id":"public/2022/10/26/Hexo-加强-Next-Theme-美化/index.html","hash":"dcf5921292ec96d5ec6e38b412c32350543c049f","modified":1666837340778},{"_id":"public/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png","hash":"e1441b97e385c56e98eca57b0880aaad9640cb60","modified":1666763391068},{"_id":"source/_posts/工作面试.md","hash":"04a5e4bdbe10ed9efaf88e8675df1bdeefe3eaa9","modified":1666925190019},{"_id":"public/2022/10/26/工作面试/index.html","hash":"1a32d517f49b86360f6d6d4ffae932e0f7c2e46a","modified":1666951437930},{"_id":"public/tags/工作面试/index.html","hash":"f7fffd50d9376b88de8075f6cde3e05480f6d532","modified":1666837340778},{"_id":"source/_posts/初识-MARO.md","hash":"f073807ecedb0a0417208cddd95fcf1ae3e02f95","modified":1666769756121},{"_id":"public/2022/10/26/初识-MARO/index.html","hash":"12c3ea0cd2354482bb2550d6bb24b882024b9f3c","modified":1666837340778},{"_id":"source/_posts/MARO-VM-调度.md","hash":"2310e30907e19e6842cfef3173c273beda14ce2f","modified":1666952347630},{"_id":"public/2022/10/27/MARO-VM-调度/index.html","hash":"bb8b08cc6ef94cdc1b5bb0f674e35cf938e62e99","modified":1667025520019},{"_id":"source/pictures/maro-vm-调度/2022.10.27.20.00.43.png","hash":"f402be5249286bcdb595b8c2fdd1123fe0490d2c","modified":1666872054619},{"_id":"public/pictures/maro-vm-调度/2022.10.27.20.00.43.png","hash":"f402be5249286bcdb595b8c2fdd1123fe0490d2c","modified":1666875504851},{"_id":"source/pictures/maro-vm-调度/2022.10.28.15.14.52.png","hash":"b6c762d02986b8824b18d1b233be16f76b3afaea","modified":1666941299943},{"_id":"source/pictures/maro-vm-调度/vm.energy_curve.svg","hash":"92098c53d8c1960426a4c1a98fedb7d48cebc7a8","modified":1666942188814},{"_id":"public/pictures/maro-vm-调度/vm.energy_curve.svg","hash":"92098c53d8c1960426a4c1a98fedb7d48cebc7a8","modified":1666951437930},{"_id":"public/pictures/maro-vm-调度/2022.10.28.15.14.52.png","hash":"b6c762d02986b8824b18d1b233be16f76b3afaea","modified":1666951437930},{"_id":"source/_posts/VIM-配置.md","hash":"86ac9703f4d4bb25591c4363f1eb337b7d50faaa","modified":1667027996352},{"_id":"public/tags/VIM/index.html","hash":"3018c662f3c8eac328df9754aa09713d4c54c764","modified":1667029777798},{"_id":"public/2022/10/29/VIM-配置/index.html","hash":"d792a1c63c4f8a9ea5eef0c0abb40efc70c9e6fa","modified":1667028004406},{"_id":"source/_posts/debian-bashrc.md","hash":"e1616a7a27a88a3bfed5fe8c9a610ba8d00abd07","modified":1667029448658},{"_id":"source/_posts/debian-fcitx-中文输入法.md","hash":"6eb2f488b229cc54609e7aa229eca073ec1c7a74","modified":1667029266190},{"_id":"source/_posts/debian-gnome-default-browser.md","hash":"71a803f9aa4c8c445b7da56cb88af8d6caa5c424","modified":1667029290490},{"_id":"source/_posts/debian-nvidia.md","hash":"bb8d71b3a2f528c68f8ef2d2bc0eba859fae332e","modified":1667029311154},{"_id":"source/_posts/linux-bash-powerline-arrow.md","hash":"a19f15a358ea23fde750b8bacaecb63aecb457e9","modified":1667029431470},{"_id":"source/_posts/linux-command-not-found-bash.md","hash":"d20b7a29ef6d42d47b407c49f7aa1e6caab49dab","modified":1667029508517},{"_id":"source/_posts/linux-debian-gnome-desktop-launch.md","hash":"d21caff82ee1397a8e2584f4643e01533b5eada8","modified":1667029563957},{"_id":"source/_posts/linux-debian-vscode-fonts-firacode.md","hash":"ea5a2a523b4dd6b66ba1e63f2a7a15b0d44c8c8f","modified":1667029612933},{"_id":"source/_posts/node 换源 阿里.md","hash":"7f08964bf94ee9d7166c9d5ffcaffed61bd6675c","modified":1667029648473},{"_id":"source/_posts/path.sh gopath alias.md","hash":"1447518215e484bc2f116f71ccb0cfc9cd7391e6","modified":1667029707700},{"_id":"source/_posts/vim-nvim-replace-批量查找替换.md","hash":"28dbf8c0efa593fd984e26cbf2d528b80a3bc656","modified":1667099241148},{"_id":"public/2022/10/23/debian-fcitx-中文输入法/index.html","hash":"8d6d61c91c3f8eb939611e9cb5505f437cc6e446","modified":1667029777798},{"_id":"public/2022/10/23/debian-gnome-default-browser/index.html","hash":"cd2d517f5d18815a8cf1c183c75dede31212a0b2","modified":1667029777798},{"_id":"public/2022/10/23/debian-bashrc/index.html","hash":"d1e99bf1ae4a41cbfd6653165c53794fa4fb2828","modified":1667029777798},{"_id":"public/2022/10/23/debian-nvidia/index.html","hash":"1307f1a9240f7ca69aa8672a5f55010e9971aec3","modified":1667029777798},{"_id":"public/2022/10/23/linux-bash-powerline-arrow/index.html","hash":"f7a51cff23635588d81bf23c8d9000fe7e113ad6","modified":1667029777798},{"_id":"public/2022/10/23/linux-command-not-found-bash/index.html","hash":"efdd20966a479ed52bc0715eafa054919619cb8c","modified":1667029777798},{"_id":"public/2022/10/23/linux-debian-gnome-desktop-launch/index.html","hash":"5822cfe422f07354c9cc06137f6db9e2dc4fd34d","modified":1667029777798},{"_id":"public/2022/10/23/linux-debian-vscode-fonts-firacode/index.html","hash":"b0ea80916f9df56510e37791300882a4c14cdd96","modified":1667029777798},{"_id":"public/2022/10/23/node 换源 阿里/index.html","hash":"ffc6b2a71d3169e8a377d9cb2f7efb7419188d62","modified":1667029777798},{"_id":"public/2022/10/23/path.sh gopath alias/index.html","hash":"644ced2509935bb938ec98eeb88cd19d44b02861","modified":1667029777798},{"_id":"public/2022/10/23/vim-nvim-replace-批量查找替换/index.html","hash":"4e1d1e139cd187750d293eb2daf79075b4d8a3ff","modified":1667099256130},{"_id":"public/archives/page/2/index.html","hash":"a66a88ba457f9708d307d4e49344d2c05ab6ad03","modified":1667029777798},{"_id":"public/archives/2022/page/2/index.html","hash":"71b9d2561590bf0d2bbe3bc724b99b0aac476718","modified":1667029777798},{"_id":"public/archives/2022/10/page/2/index.html","hash":"9d8b7aacc4c1aeef137285951fa4adc5c34acc6c","modified":1667029777798},{"_id":"public/tags/Debian/index.html","hash":"8d23a7a8bcc971aa96101512649edc3c1edfee87","modified":1667029777798},{"_id":"public/tags/Fcitx/index.html","hash":"77efaf2b1f56d43fc61912bbed6e7cee6be37cb2","modified":1667029777798},{"_id":"public/tags/Linux/index.html","hash":"bd89eb4a19bec6dc9b6af509bb1ded50b0ae4fd2","modified":1667029777798},{"_id":"public/tags/Gnome/index.html","hash":"4c3ae020fa78908b9fa6b5e3c127bab6d9f72d93","modified":1667029777798},{"_id":"public/tags/Bash/index.html","hash":"8732bd84770d1130c8c03bc98d699090709f2c64","modified":1667029777798},{"_id":"public/tags/Nvidia/index.html","hash":"17e10f8f517c95f722f06be83d94ee1e4e6b9759","modified":1667029777798},{"_id":"public/tags/Powerline/index.html","hash":"009632a10f58c4a4f8f72c8704792a0dab7e8836","modified":1667029777798},{"_id":"public/tags/VScode/index.html","hash":"114fe58abdf497c4562a9ca47fc8fbf47e0caf99","modified":1667029777798},{"_id":"public/tags/Nodejs/index.html","hash":"8250adb24243988c634e2e087c5941ede18572f8","modified":1667029777798},{"_id":"public/page/2/index.html","hash":"79d7a4c6eceaee4ba4052f77b20c788ddadf073d","modified":1667099256130}],"Category":[{"name":"Hexo-Usage","_id":"cl9m5zzx80004xni5hevk4mc3"}],"Data":[],"Page":[{"title":"tags","date":"2022-10-23T05:35:49.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-10-23 13:35:49\ntype: \"tags\"\n---\n","updated":"2022-10-23T05:38:16.617Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl9m5zzx10000xni53fame8my","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo 基本美化","date":"2022-10-23T08:08:56.000Z","_content":"**首先是顶部背景**，下面是原背景\n\n![](/pictures/hexo-基本美化/2022.10.23.16.14.49.png)\n\n在 blogs 文件夹（顶层工程文件目录）里面搜索 banner.jpg\n\n![](/pictures/hexo-基本美化/2022.10.23.16.17.17.png)\n\n把这两个 banner.jpg 替换成自己图片，替换之后名字还得是 banner.jpg\n\n![](/pictures/hexo-基本美化/2022.10.23.16.19.21.png)\n\n###### \n![](/pictures/hexo-基本美化/2022.10.23.16.22.22.png)\n\n######\n**定义自己的信息**，定义在顶层工程目录的 \"_config.yml\" 里面\n\n![](/pictures/hexo-基本美化/2022.10.23.16.25.30.png)\n\n###### \n![](/pictures/hexo-基本美化/2022.10.23.16.27.38.png)\n\n######\n**美化代码块**，原本的代码块没有 margin-left 和 margin-right ，不好看\n![](/pictures/hexo-基本美化/2022.10.23.16.29.42.png)\n\n在顶层工程文件目录里面，搜索 highlight.styl\n\n![](/pictures/hexo-基本美化/2022.10.23.16.32.39.png)\n\n###### \n![](/pictures/hexo-基本美化/2022.10.23.16.33.18.png)\n\n这两个 css 文件是一样的，要修改的地方也一样\n\n![](/pictures/hexo-基本美化/2022.10.23.16.35.28.png)\n\n注释掉原来的 margin ，换成 \"margin:1px\" 就可以\n\n![](/pictures/hexo-基本美化/2022.10.23.16.36.27.png)\n\n效果很 nice\n\n![](/pictures/hexo-基本美化/2022.10.23.16.38.27.png)\n\n######\n**最终效果**\n\n![](/pictures/hexo-基本美化/2022.10.23.16.41.32.png)\n","source":"_posts/Hexo-基本美化.md","raw":"---\ntitle: Hexo 基本美化\ndate: 2022-10-23 16:08:56\ncategories: Hexo-Usage\ntags:\n\t- Hexo\n---\n**首先是顶部背景**，下面是原背景\n\n![](/pictures/hexo-基本美化/2022.10.23.16.14.49.png)\n\n在 blogs 文件夹（顶层工程文件目录）里面搜索 banner.jpg\n\n![](/pictures/hexo-基本美化/2022.10.23.16.17.17.png)\n\n把这两个 banner.jpg 替换成自己图片，替换之后名字还得是 banner.jpg\n\n![](/pictures/hexo-基本美化/2022.10.23.16.19.21.png)\n\n###### \n![](/pictures/hexo-基本美化/2022.10.23.16.22.22.png)\n\n######\n**定义自己的信息**，定义在顶层工程目录的 \"_config.yml\" 里面\n\n![](/pictures/hexo-基本美化/2022.10.23.16.25.30.png)\n\n###### \n![](/pictures/hexo-基本美化/2022.10.23.16.27.38.png)\n\n######\n**美化代码块**，原本的代码块没有 margin-left 和 margin-right ，不好看\n![](/pictures/hexo-基本美化/2022.10.23.16.29.42.png)\n\n在顶层工程文件目录里面，搜索 highlight.styl\n\n![](/pictures/hexo-基本美化/2022.10.23.16.32.39.png)\n\n###### \n![](/pictures/hexo-基本美化/2022.10.23.16.33.18.png)\n\n这两个 css 文件是一样的，要修改的地方也一样\n\n![](/pictures/hexo-基本美化/2022.10.23.16.35.28.png)\n\n注释掉原来的 margin ，换成 \"margin:1px\" 就可以\n\n![](/pictures/hexo-基本美化/2022.10.23.16.36.27.png)\n\n效果很 nice\n\n![](/pictures/hexo-基本美化/2022.10.23.16.38.27.png)\n\n######\n**最终效果**\n\n![](/pictures/hexo-基本美化/2022.10.23.16.41.32.png)\n","slug":"Hexo-基本美化","published":1,"updated":"2022-10-23T09:27:44.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m5zzx40002xni5grqa00lo","content":"<p><strong>首先是顶部背景</strong>，下面是原背景</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.14.49.png\"></p>\n<p>在 blogs 文件夹（顶层工程文件目录）里面搜索 banner.jpg</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.17.17.png\"></p>\n<p>把这两个 banner.jpg 替换成自己图片，替换之后名字还得是 banner.jpg</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.19.21.png\"></p>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.22.22.png\"></p>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><p><strong>定义自己的信息</strong>，定义在顶层工程目录的 “_config.yml” 里面</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.25.30.png\"></p>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.27.38.png\"></p>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><p><strong>美化代码块</strong>，原本的代码块没有 margin-left 和 margin-right ，不好看<br><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.29.42.png\"></p>\n<p>在顶层工程文件目录里面，搜索 highlight.styl</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.32.39.png\"></p>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.33.18.png\"></p>\n<p>这两个 css 文件是一样的，要修改的地方也一样</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.35.28.png\"></p>\n<p>注释掉原来的 margin ，换成 “margin:1px” 就可以</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.36.27.png\"></p>\n<p>效果很 nice</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.38.27.png\"></p>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><p><strong>最终效果</strong></p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.41.32.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>首先是顶部背景</strong>，下面是原背景</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.14.49.png\"></p>\n<p>在 blogs 文件夹（顶层工程文件目录）里面搜索 banner.jpg</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.17.17.png\"></p>\n<p>把这两个 banner.jpg 替换成自己图片，替换之后名字还得是 banner.jpg</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.19.21.png\"></p>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.22.22.png\"></p>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><p><strong>定义自己的信息</strong>，定义在顶层工程目录的 “_config.yml” 里面</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.25.30.png\"></p>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.27.38.png\"></p>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><p><strong>美化代码块</strong>，原本的代码块没有 margin-left 和 margin-right ，不好看<br><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.29.42.png\"></p>\n<p>在顶层工程文件目录里面，搜索 highlight.styl</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.32.39.png\"></p>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.33.18.png\"></p>\n<p>这两个 css 文件是一样的，要修改的地方也一样</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.35.28.png\"></p>\n<p>注释掉原来的 margin ，换成 “margin:1px” 就可以</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.36.27.png\"></p>\n<p>效果很 nice</p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.38.27.png\"></p>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><p><strong>最终效果</strong></p>\n<p><img src=\"/pictures/hexo-%E5%9F%BA%E6%9C%AC%E7%BE%8E%E5%8C%96/2022.10.23.16.41.32.png\"></p>\n"},{"title":"Github Pages + Hexo","date":"2022-10-23T05:25:51.000Z","_content":"**Github Pages 可以为个人博客提供支持，Hexo 可以让 Github Pages 更加美观和提供本地预览，而不需要上传到 Github Pages 之后再看到效果**\n###### \n**安装准备**（本地）：\n- git\n- npm\n###### \n**配置 Git**\n```bash\ngit config --global user.name \"github 用户名\"\ngit config --global user.email \"github 注册邮箱\"\n```\nGithub 已经不支持密码登录，需要复杂一点的步骤去验证\n###### \n1. 到个人中心-设置-setting\n2. ![](/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png)\n3. ![](/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png)\n   ![](/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png)\n4. 选 classic 的 token 而不是 beta 的，因为 classic 可以永久\n5. ![](/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png)\n   ![](/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png)\n6. 点击 generate token按钮\n\n###### \n然后 生成了token 一定要复制，不然刷新浏览器就没了\n###### \n拿到token以后再去git push/clone ，password就是输入刚才复制的token\n###### \n**Hexo 安装（本地全局）**\n```bash\nnpm i hexo-cli -g\n```\n新建一个文件夹（我的是blogs）用于存放你的博客，然后进入该文件夹，并用如下命令进行初始化并安装必备组件\n```bash\ngit init \nhexo init .\n```\n初始化后，目录结构如下\n```\n.\n ├── _config.yml \t# 网站配置信息\n ├── package.json \t# 应用程序信息\n ├── scaffolds\t\t# 模板文件夹\n ├── source \t\t# 存放用户资源\n |   ├── _drafts\n |   └── _posts\t\t# 存放个人博客\n └── themes \t\t# 主题文件夹\n```\n然后输入如下命令，然后在浏览器中打开 http://localhost:4000 ，就可以预览原始网站\n```\nhexo new '博客名' \t\t# 新建博客\nhexo g \t\t\t\t# 生成静态网页\nhexo s \t\t\t\t# 打开本地服务器\n```\n然后就可以看到如下的界面\n![](/pictures/github-pages-hexo/2022.10.23.14.48.30.png)\n###### \n**发布到 Github Pages 上面**\n###### \n注册 Github 帐号，有帐号了不用注册\n###### \n新建一个空仓库，暂时不要创建 README.md ，而且得确保你的仓库是 public 同时，仓库名一定要是 **用户名.github.io**\n###### \n在上文提到的 blogs 文件夹下面安装 hexo-deployer-git\n```bash\nnpm install --save hexo-deployer-git\n```\n###### \n在刚才的博客根目录中的站点配置文件 \"_config.yml\" ，设置为你的个人仓库名，branch 与你的 git 主分支对应\n![](/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg)\n![](/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png)\n###### \n开始推送内容到 Github 上去\n```\nhexo clean \t\t\t\t\t# 清理缓存\nhexo g     \t\t\t\t\t# 将 md 生成 html\ngit add -A \t\t\t\t\t# 添加到 git 缓冲区\ngit commit -m \"first time\"\t\t\t# 提交所有更改\nhexo d     \t\t\t\t\t# 推送到远程\n```\n稍等片刻，就可以访问 https://用户名.github.io 了\n\n","source":"_posts/Github-Pages+Hexo.md","raw":"---\ntitle: Github Pages + Hexo\ndate: 2022-10-23 13:25:51\ntags:\n\t- Hexo\n\t- Github\n---\n**Github Pages 可以为个人博客提供支持，Hexo 可以让 Github Pages 更加美观和提供本地预览，而不需要上传到 Github Pages 之后再看到效果**\n###### \n**安装准备**（本地）：\n- git\n- npm\n###### \n**配置 Git**\n```bash\ngit config --global user.name \"github 用户名\"\ngit config --global user.email \"github 注册邮箱\"\n```\nGithub 已经不支持密码登录，需要复杂一点的步骤去验证\n###### \n1. 到个人中心-设置-setting\n2. ![](/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png)\n3. ![](/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png)\n   ![](/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png)\n4. 选 classic 的 token 而不是 beta 的，因为 classic 可以永久\n5. ![](/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png)\n   ![](/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png)\n6. 点击 generate token按钮\n\n###### \n然后 生成了token 一定要复制，不然刷新浏览器就没了\n###### \n拿到token以后再去git push/clone ，password就是输入刚才复制的token\n###### \n**Hexo 安装（本地全局）**\n```bash\nnpm i hexo-cli -g\n```\n新建一个文件夹（我的是blogs）用于存放你的博客，然后进入该文件夹，并用如下命令进行初始化并安装必备组件\n```bash\ngit init \nhexo init .\n```\n初始化后，目录结构如下\n```\n.\n ├── _config.yml \t# 网站配置信息\n ├── package.json \t# 应用程序信息\n ├── scaffolds\t\t# 模板文件夹\n ├── source \t\t# 存放用户资源\n |   ├── _drafts\n |   └── _posts\t\t# 存放个人博客\n └── themes \t\t# 主题文件夹\n```\n然后输入如下命令，然后在浏览器中打开 http://localhost:4000 ，就可以预览原始网站\n```\nhexo new '博客名' \t\t# 新建博客\nhexo g \t\t\t\t# 生成静态网页\nhexo s \t\t\t\t# 打开本地服务器\n```\n然后就可以看到如下的界面\n![](/pictures/github-pages-hexo/2022.10.23.14.48.30.png)\n###### \n**发布到 Github Pages 上面**\n###### \n注册 Github 帐号，有帐号了不用注册\n###### \n新建一个空仓库，暂时不要创建 README.md ，而且得确保你的仓库是 public 同时，仓库名一定要是 **用户名.github.io**\n###### \n在上文提到的 blogs 文件夹下面安装 hexo-deployer-git\n```bash\nnpm install --save hexo-deployer-git\n```\n###### \n在刚才的博客根目录中的站点配置文件 \"_config.yml\" ，设置为你的个人仓库名，branch 与你的 git 主分支对应\n![](/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg)\n![](/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png)\n###### \n开始推送内容到 Github 上去\n```\nhexo clean \t\t\t\t\t# 清理缓存\nhexo g     \t\t\t\t\t# 将 md 生成 html\ngit add -A \t\t\t\t\t# 添加到 git 缓冲区\ngit commit -m \"first time\"\t\t\t# 提交所有更改\nhexo d     \t\t\t\t\t# 推送到远程\n```\n稍等片刻，就可以访问 https://用户名.github.io 了\n\n","slug":"Github-Pages+Hexo","published":1,"updated":"2022-10-27T02:22:03.141Z","_id":"cl9m5zzx60003xni57f1i3inc","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>Github Pages 可以为个人博客提供支持，Hexo 可以让 Github Pages 更加美观和提供本地预览，而不需要上传到 Github Pages 之后再看到效果</strong></p>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><p><strong>安装准备</strong>（本地）：</p>\n<ul>\n<li>git</li>\n<li>npm</li>\n</ul>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><p><strong>配置 Git</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;github 用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;github 注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>Github 已经不支持密码登录，需要复杂一点的步骤去验证</p>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><ol>\n<li>到个人中心-设置-setting</li>\n<li><img src=\"/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png\"></li>\n<li><img src=\"/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png\"><br><img src=\"/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png\"></li>\n<li>选 classic 的 token 而不是 beta 的，因为 classic 可以永久</li>\n<li><img src=\"/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png\"><br><img src=\"/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png\"></li>\n<li>点击 generate token按钮</li>\n</ol>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><p>然后 生成了token 一定要复制，不然刷新浏览器就没了</p>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><p>拿到token以后再去git push&#x2F;clone ，password就是输入刚才复制的token</p>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><p><strong>Hexo 安装（本地全局）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p>新建一个文件夹（我的是blogs）用于存放你的博客，然后进入该文件夹，并用如下命令进行初始化并安装必备组件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init </span><br><span class=\"line\">hexo init .</span><br></pre></td></tr></table></figure>\n<p>初始化后，目录结构如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\"> ├── _config.yml \t# 网站配置信息</span><br><span class=\"line\"> ├── package.json \t# 应用程序信息</span><br><span class=\"line\"> ├── scaffolds\t\t# 模板文件夹</span><br><span class=\"line\"> ├── source \t\t# 存放用户资源</span><br><span class=\"line\"> |   ├── _drafts</span><br><span class=\"line\"> |   └── _posts\t\t# 存放个人博客</span><br><span class=\"line\"> └── themes \t\t# 主题文件夹</span><br></pre></td></tr></table></figure>\n<p>然后输入如下命令，然后在浏览器中打开 <a href=\"http://localhost:4000/\">http://localhost:4000</a> ，就可以预览原始网站</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &#x27;博客名&#x27; \t\t# 新建博客</span><br><span class=\"line\">hexo g \t\t\t\t# 生成静态网页</span><br><span class=\"line\">hexo s \t\t\t\t# 打开本地服务器</span><br></pre></td></tr></table></figure>\n<p>然后就可以看到如下的界面<br><img src=\"/pictures/github-pages-hexo/2022.10.23.14.48.30.png\"></p>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><p><strong>发布到 Github Pages 上面</strong></p>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><p>注册 Github 帐号，有帐号了不用注册</p>\n<h6 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"\"></a></h6><p>新建一个空仓库，暂时不要创建 README.md ，而且得确保你的仓库是 public 同时，仓库名一定要是 <strong>用户名.github.io</strong></p>\n<h6 id=\"-9\"><a href=\"#-9\" class=\"headerlink\" title=\"\"></a></h6><p>在上文提到的 blogs 文件夹下面安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<h6 id=\"-10\"><a href=\"#-10\" class=\"headerlink\" title=\"\"></a></h6><p>在刚才的博客根目录中的站点配置文件 “_config.yml” ，设置为你的个人仓库名，branch 与你的 git 主分支对应<br><img src=\"/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg\"><br><img src=\"/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png\"></p>\n<h6 id=\"-11\"><a href=\"#-11\" class=\"headerlink\" title=\"\"></a></h6><p>开始推送内容到 Github 上去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean \t\t\t\t\t# 清理缓存</span><br><span class=\"line\">hexo g     \t\t\t\t\t# 将 md 生成 html</span><br><span class=\"line\">git add -A \t\t\t\t\t# 添加到 git 缓冲区</span><br><span class=\"line\">git commit -m &quot;first time&quot;\t\t\t# 提交所有更改</span><br><span class=\"line\">hexo d     \t\t\t\t\t# 推送到远程</span><br></pre></td></tr></table></figure>\n<p>稍等片刻，就可以访问 https:&#x2F;&#x2F;用户名.github.io 了</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>Github Pages 可以为个人博客提供支持，Hexo 可以让 Github Pages 更加美观和提供本地预览，而不需要上传到 Github Pages 之后再看到效果</strong></p>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><p><strong>安装准备</strong>（本地）：</p>\n<ul>\n<li>git</li>\n<li>npm</li>\n</ul>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><p><strong>配置 Git</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;github 用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;github 注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n<p>Github 已经不支持密码登录，需要复杂一点的步骤去验证</p>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><ol>\n<li>到个人中心-设置-setting</li>\n<li><img src=\"/pictures/github-pages-hexo/75e96721a3344ed5b397ec8adfeedb98.png\"></li>\n<li><img src=\"/pictures/github-pages-hexo/4eb29e6a9b2c4bf6b2b5db9299b1a393.png\"><br><img src=\"/pictures/github-pages-hexo/3def5390d66a40eab1305013f28383d1.png\"></li>\n<li>选 classic 的 token 而不是 beta 的，因为 classic 可以永久</li>\n<li><img src=\"/pictures/github-pages-hexo/de366346ddf443fba27a2cda84d9593f.png\"><br><img src=\"/pictures/github-pages-hexo/852ef46dcc3d4018bc79fdac2ed8c917.png\"></li>\n<li>点击 generate token按钮</li>\n</ol>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><p>然后 生成了token 一定要复制，不然刷新浏览器就没了</p>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><p>拿到token以后再去git push&#x2F;clone ，password就是输入刚才复制的token</p>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><p><strong>Hexo 安装（本地全局）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-cli -g</span><br></pre></td></tr></table></figure>\n<p>新建一个文件夹（我的是blogs）用于存放你的博客，然后进入该文件夹，并用如下命令进行初始化并安装必备组件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init </span><br><span class=\"line\">hexo init .</span><br></pre></td></tr></table></figure>\n<p>初始化后，目录结构如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\"> ├── _config.yml \t# 网站配置信息</span><br><span class=\"line\"> ├── package.json \t# 应用程序信息</span><br><span class=\"line\"> ├── scaffolds\t\t# 模板文件夹</span><br><span class=\"line\"> ├── source \t\t# 存放用户资源</span><br><span class=\"line\"> |   ├── _drafts</span><br><span class=\"line\"> |   └── _posts\t\t# 存放个人博客</span><br><span class=\"line\"> └── themes \t\t# 主题文件夹</span><br></pre></td></tr></table></figure>\n<p>然后输入如下命令，然后在浏览器中打开 <a href=\"http://localhost:4000/\">http://localhost:4000</a> ，就可以预览原始网站</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &#x27;博客名&#x27; \t\t# 新建博客</span><br><span class=\"line\">hexo g \t\t\t\t# 生成静态网页</span><br><span class=\"line\">hexo s \t\t\t\t# 打开本地服务器</span><br></pre></td></tr></table></figure>\n<p>然后就可以看到如下的界面<br><img src=\"/pictures/github-pages-hexo/2022.10.23.14.48.30.png\"></p>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><p><strong>发布到 Github Pages 上面</strong></p>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><p>注册 Github 帐号，有帐号了不用注册</p>\n<h6 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"\"></a></h6><p>新建一个空仓库，暂时不要创建 README.md ，而且得确保你的仓库是 public 同时，仓库名一定要是 <strong>用户名.github.io</strong></p>\n<h6 id=\"-9\"><a href=\"#-9\" class=\"headerlink\" title=\"\"></a></h6><p>在上文提到的 blogs 文件夹下面安装 hexo-deployer-git</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<h6 id=\"-10\"><a href=\"#-10\" class=\"headerlink\" title=\"\"></a></h6><p>在刚才的博客根目录中的站点配置文件 “_config.yml” ，设置为你的个人仓库名，branch 与你的 git 主分支对应<br><img src=\"/pictures/github-pages-hexo/v2-376b7a40b8e6a310cc31bd3522ea9a7a_r.jpg\"><br><img src=\"/pictures/github-pages-hexo/v2-d15b384267cf4fa326c2e2febb1b2b62_r.png\"></p>\n<h6 id=\"-11\"><a href=\"#-11\" class=\"headerlink\" title=\"\"></a></h6><p>开始推送内容到 Github 上去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean \t\t\t\t\t# 清理缓存</span><br><span class=\"line\">hexo g     \t\t\t\t\t# 将 md 生成 html</span><br><span class=\"line\">git add -A \t\t\t\t\t# 添加到 git 缓冲区</span><br><span class=\"line\">git commit -m &quot;first time&quot;\t\t\t# 提交所有更改</span><br><span class=\"line\">hexo d     \t\t\t\t\t# 推送到远程</span><br></pre></td></tr></table></figure>\n<p>稍等片刻，就可以访问 https:&#x2F;&#x2F;用户名.github.io 了</p>\n"},{"title":"The First Blog","date":"2022-10-22T13:16:22.000Z","_content":"\n\n\"开始记录进步与欢乐！\"\n","source":"_posts/The-First-Blog.md","raw":"---\ntitle: The First Blog\ndate: 2022-10-22 21:16:22\ntags:\n---\n\n\n\"开始记录进步与欢乐！\"\n","slug":"The-First-Blog","published":1,"updated":"2022-10-22T13:16:58.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m5zzx90006xni5300h8xpo","content":"<p>“开始记录进步与欢乐！”</p>\n","site":{"data":{}},"excerpt":"","more":"<p>“开始记录进步与欢乐！”</p>\n"},{"title":"Hexo 文档分类 图片存储","date":"2022-10-23T11:16:39.000Z","_content":"\n**建立分类**\n1. 输入 hexo new page 'categories'\n######  \n2. 在顶层工程目录的 source 目录中會看到 categories 文件夹\n######   \n3. 修改 categories 中的 index.md 开头，增加一些东西使得变成如下内容\n\n\t```\n\t---\n\ttitle: categories\n\tdate: 2022-10-23 13:30:15\n\ttype: \"categories\"\n\t---\n\t```\n4. 若要把 \"_post\" 內的其中一份文档添加到 \"Hexo-Usage\" categories 里面，在这个文档头部插入 categories: Hexo-Usage\n\n\t```\n\t---\n\ttitle: Hexo 基本美化\n\tdate: 2022-10-23 16:08:56\n\tcategories: Hexo-Usage\n\t---\n\t```\n5. 重新生成静态网页，可以看到导航栏多了一个分类选项\n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.19.31.09.png)\n\n######   \n\n**建立标签**\n\n和建立分类一样，只不过内容改变一点\n######   \n1. 输入 hexo new page 'tags'\n######   \n2. 在顶层工程目录的 source 目录中會看到 tags 文件夹\n######   \n3. 修改 tags 中的 index.md 开头，增加一些东西使得变成如下内容\n\t```\n\t---\n\ttitle: tags\n\tdate: 2022-10-23 13:35:49\n\ttype: \"tags\"\n\t---\n\t```\n4. 若要把 \"_post\" 內的其中一份文档添加到 \"Hexo\" tag 里面，在这个文档头部插入 tags: Hexo\n\t```\n\t---\n\ttitle: Hexo 文档分类 图片存储\n\tdate: 2022-10-23 19:16:39\n\tcategories: Hexo-Usage\n\ttags: Hexo\n\t---\n\t\n\t```\n5. 插入多个 tags ，记得 tab 缩进\n\t```\n\t---\n\ttitle: Hexo 文档分类 图片存储\n\tdate: 2022-10-23 19:16:39\n\tcategories: Hexo-Usage\n\ttags:\n\t\t- Hexo\n\t\t- Github\n\t---\n\t```\n6. 重新生成静态网页，可以看到导航栏多了一个标签选项\n###### \n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.19.50.12.png)\n\n**文档里面插入图片**\n\n使用Hexo创建文件搭建博客时，会遇到图片插图，以及插入的图片无法显示的问题\n######  \n\n1. 在 Hexo 的目录（也就是顶层工程目录） source 中创建一个图片文件夹，例如 pictures\n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.19.55.54.png)\n\n######  \n2. 把要插入的图片文件放到该目录下面，在文档中正常使用 markdown 的语法插入图片即可，例如\n\n\t```\n\t![img](ictures/xxx.png)\n\t```\n\n3. 当然，你还可以在 pictures 再创建目录以区分不同文章的图片\n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.20.00.11.png)\n\n4. 这个时候在文章里面引用的方式就是\n\n\t```\n\t![img](ictures/hexo-文档分类-图片存储/xxx.png)\n\t```\n\n记住在 \"pictures\" 前面有一个 \"/\" ，表示根目录的意思，因为对于 hexo 来说它的资源文件的根目录就是 source ，当然也可以修改 \"_config.yml\" 改变这个配置，下图是 hexo 框架文件夹描述\n\n![](/pictures/hexo-文档分类-图片存储/20191220164252492.png)\n\n\n","source":"_posts/Hexo-文档分类-图片存储.md","raw":"---\ntitle: Hexo 文档分类 图片存储\ndate: 2022-10-23 19:16:39\ncategories: Hexo-Usage\ntags:\n\t- Hexo\n---\n\n**建立分类**\n1. 输入 hexo new page 'categories'\n######  \n2. 在顶层工程目录的 source 目录中會看到 categories 文件夹\n######   \n3. 修改 categories 中的 index.md 开头，增加一些东西使得变成如下内容\n\n\t```\n\t---\n\ttitle: categories\n\tdate: 2022-10-23 13:30:15\n\ttype: \"categories\"\n\t---\n\t```\n4. 若要把 \"_post\" 內的其中一份文档添加到 \"Hexo-Usage\" categories 里面，在这个文档头部插入 categories: Hexo-Usage\n\n\t```\n\t---\n\ttitle: Hexo 基本美化\n\tdate: 2022-10-23 16:08:56\n\tcategories: Hexo-Usage\n\t---\n\t```\n5. 重新生成静态网页，可以看到导航栏多了一个分类选项\n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.19.31.09.png)\n\n######   \n\n**建立标签**\n\n和建立分类一样，只不过内容改变一点\n######   \n1. 输入 hexo new page 'tags'\n######   \n2. 在顶层工程目录的 source 目录中會看到 tags 文件夹\n######   \n3. 修改 tags 中的 index.md 开头，增加一些东西使得变成如下内容\n\t```\n\t---\n\ttitle: tags\n\tdate: 2022-10-23 13:35:49\n\ttype: \"tags\"\n\t---\n\t```\n4. 若要把 \"_post\" 內的其中一份文档添加到 \"Hexo\" tag 里面，在这个文档头部插入 tags: Hexo\n\t```\n\t---\n\ttitle: Hexo 文档分类 图片存储\n\tdate: 2022-10-23 19:16:39\n\tcategories: Hexo-Usage\n\ttags: Hexo\n\t---\n\t\n\t```\n5. 插入多个 tags ，记得 tab 缩进\n\t```\n\t---\n\ttitle: Hexo 文档分类 图片存储\n\tdate: 2022-10-23 19:16:39\n\tcategories: Hexo-Usage\n\ttags:\n\t\t- Hexo\n\t\t- Github\n\t---\n\t```\n6. 重新生成静态网页，可以看到导航栏多了一个标签选项\n###### \n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.19.50.12.png)\n\n**文档里面插入图片**\n\n使用Hexo创建文件搭建博客时，会遇到图片插图，以及插入的图片无法显示的问题\n######  \n\n1. 在 Hexo 的目录（也就是顶层工程目录） source 中创建一个图片文件夹，例如 pictures\n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.19.55.54.png)\n\n######  \n2. 把要插入的图片文件放到该目录下面，在文档中正常使用 markdown 的语法插入图片即可，例如\n\n\t```\n\t![img](ictures/xxx.png)\n\t```\n\n3. 当然，你还可以在 pictures 再创建目录以区分不同文章的图片\n\n![](/pictures/hexo-文档分类-图片存储/2022.10.23.20.00.11.png)\n\n4. 这个时候在文章里面引用的方式就是\n\n\t```\n\t![img](ictures/hexo-文档分类-图片存储/xxx.png)\n\t```\n\n记住在 \"pictures\" 前面有一个 \"/\" ，表示根目录的意思，因为对于 hexo 来说它的资源文件的根目录就是 source ，当然也可以修改 \"_config.yml\" 改变这个配置，下图是 hexo 框架文件夹描述\n\n![](/pictures/hexo-文档分类-图片存储/20191220164252492.png)\n\n\n","slug":"Hexo-文档分类-图片存储","published":1,"updated":"2022-10-24T02:28:55.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9m5zzxa0007xni57bro9fzn","content":"<p><strong>建立分类</strong></p>\n<ol>\n<li>输入 hexo new page ‘categories’</li>\n</ol>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"2\">\n<li>在顶层工程目录的 source 目录中會看到 categories 文件夹</li>\n</ol>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"3\">\n<li><p>修改 categories 中的 index.md 开头，增加一些东西使得变成如下内容</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2022-10-23 13:30:15</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li><p>若要把 “_post” 內的其中一份文档添加到 “Hexo-Usage” categories 里面，在这个文档头部插入 categories: Hexo-Usage</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo 基本美化</span><br><span class=\"line\">date: 2022-10-23 16:08:56</span><br><span class=\"line\">categories: Hexo-Usage</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li><p>重新生成静态网页，可以看到导航栏多了一个分类选项</p>\n</li>\n</ol>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.19.31.09.png\"></p>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><p><strong>建立标签</strong></p>\n<p>和建立分类一样，只不过内容改变一点</p>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><ol>\n<li>输入 hexo new page ‘tags’</li>\n</ol>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"2\">\n<li>在顶层工程目录的 source 目录中會看到 tags 文件夹</li>\n</ol>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"3\">\n<li>修改 tags 中的 index.md 开头，增加一些东西使得变成如下内容 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2022-10-23 13:35:49</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li>若要把 “_post” 內的其中一份文档添加到 “Hexo” tag 里面，在这个文档头部插入 tags: Hexo <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo 文档分类 图片存储</span><br><span class=\"line\">date: 2022-10-23 19:16:39</span><br><span class=\"line\">categories: Hexo-Usage</span><br><span class=\"line\">tags: Hexo</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li>插入多个 tags ，记得 tab 缩进 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo 文档分类 图片存储</span><br><span class=\"line\">date: 2022-10-23 19:16:39</span><br><span class=\"line\">categories: Hexo-Usage</span><br><span class=\"line\">tags:</span><br><span class=\"line\">\t- Hexo</span><br><span class=\"line\">\t- Github</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li>重新生成静态网页，可以看到导航栏多了一个标签选项</li>\n</ol>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.19.50.12.png\"></p>\n<p><strong>文档里面插入图片</strong></p>\n<p>使用Hexo创建文件搭建博客时，会遇到图片插图，以及插入的图片无法显示的问题</p>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><ol>\n<li>在 Hexo 的目录（也就是顶层工程目录） source 中创建一个图片文件夹，例如 pictures</li>\n</ol>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.19.55.54.png\"></p>\n<h6 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"2\">\n<li><p>把要插入的图片文件放到该目录下面，在文档中正常使用 markdown 的语法插入图片即可，例如</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![img](ictures/xxx.png)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当然，你还可以在 pictures 再创建目录以区分不同文章的图片</p>\n</li>\n</ol>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.20.00.11.png\"></p>\n<ol start=\"4\">\n<li><p>这个时候在文章里面引用的方式就是</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![img](ictures/hexo-文档分类-图片存储/xxx.png)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>记住在 “pictures” 前面有一个 “&#x2F;“ ，表示根目录的意思，因为对于 hexo 来说它的资源文件的根目录就是 source ，当然也可以修改 “_config.yml” 改变这个配置，下图是 hexo 框架文件夹描述</p>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/20191220164252492.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>建立分类</strong></p>\n<ol>\n<li>输入 hexo new page ‘categories’</li>\n</ol>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"2\">\n<li>在顶层工程目录的 source 目录中會看到 categories 文件夹</li>\n</ol>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"3\">\n<li><p>修改 categories 中的 index.md 开头，增加一些东西使得变成如下内容</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2022-10-23 13:30:15</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li><p>若要把 “_post” 內的其中一份文档添加到 “Hexo-Usage” categories 里面，在这个文档头部插入 categories: Hexo-Usage</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo 基本美化</span><br><span class=\"line\">date: 2022-10-23 16:08:56</span><br><span class=\"line\">categories: Hexo-Usage</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li><p>重新生成静态网页，可以看到导航栏多了一个分类选项</p>\n</li>\n</ol>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.19.31.09.png\"></p>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><p><strong>建立标签</strong></p>\n<p>和建立分类一样，只不过内容改变一点</p>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><ol>\n<li>输入 hexo new page ‘tags’</li>\n</ol>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"2\">\n<li>在顶层工程目录的 source 目录中會看到 tags 文件夹</li>\n</ol>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"3\">\n<li>修改 tags 中的 index.md 开头，增加一些东西使得变成如下内容 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2022-10-23 13:35:49</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li>若要把 “_post” 內的其中一份文档添加到 “Hexo” tag 里面，在这个文档头部插入 tags: Hexo <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo 文档分类 图片存储</span><br><span class=\"line\">date: 2022-10-23 19:16:39</span><br><span class=\"line\">categories: Hexo-Usage</span><br><span class=\"line\">tags: Hexo</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li>插入多个 tags ，记得 tab 缩进 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo 文档分类 图片存储</span><br><span class=\"line\">date: 2022-10-23 19:16:39</span><br><span class=\"line\">categories: Hexo-Usage</span><br><span class=\"line\">tags:</span><br><span class=\"line\">\t- Hexo</span><br><span class=\"line\">\t- Github</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n<li>重新生成静态网页，可以看到导航栏多了一个标签选项</li>\n</ol>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.19.50.12.png\"></p>\n<p><strong>文档里面插入图片</strong></p>\n<p>使用Hexo创建文件搭建博客时，会遇到图片插图，以及插入的图片无法显示的问题</p>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><ol>\n<li>在 Hexo 的目录（也就是顶层工程目录） source 中创建一个图片文件夹，例如 pictures</li>\n</ol>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.19.55.54.png\"></p>\n<h6 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"\"></a></h6><ol start=\"2\">\n<li><p>把要插入的图片文件放到该目录下面，在文档中正常使用 markdown 的语法插入图片即可，例如</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![img](ictures/xxx.png)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当然，你还可以在 pictures 再创建目录以区分不同文章的图片</p>\n</li>\n</ol>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/2022.10.23.20.00.11.png\"></p>\n<ol start=\"4\">\n<li><p>这个时候在文章里面引用的方式就是</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![img](ictures/hexo-文档分类-图片存储/xxx.png)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>记住在 “pictures” 前面有一个 “&#x2F;“ ，表示根目录的意思，因为对于 hexo 来说它的资源文件的根目录就是 source ，当然也可以修改 “_config.yml” 改变这个配置，下图是 hexo 框架文件夹描述</p>\n<p><img src=\"/pictures/hexo-%E6%96%87%E6%A1%A3%E5%88%86%E7%B1%BB-%E5%9B%BE%E7%89%87%E5%AD%98%E5%82%A8/20191220164252492.png\"></p>\n"},{"title":"Hexo 加强 Next Theme 美化","date":"2022-10-26T03:27:15.000Z","_content":"#### Hexo-Next 主题\nhexo-theme-next 应该是目前最广泛使用的hexo主题\n\n#### 安装 Hexo-Next 主题\n切换到你的博客顶级工程目录，npm 安装\n\n```\nnpm install hexo-theme-next\n```\n\n#### 切换到 Next 主题\n在你的博客顶层工程目录下打开 \"_config.yml\"\n\n<img src=\"/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png\"/>\n\n搜索themes，将里面的值改为next\n\n```\ntheme: next\n```\n#### 配置 Next 主题\n将 node_modules/hexo-theme-next/_config.yml 复制到博客顶层文件目录，重命名为 \"_config.next.yml\"\n\n```\ncd your_site_dir\ncp node_modules/hexo-theme-next/_config.yml  _config.next.yml\n```\n- ##### 选择 Schemes\n\t打开 \"_config.next.yml\" ，首先可以看到 Scheme Settings ，里面提供了四种模式，本站使用 Mist 主题\n\n\t```\n\t# Schemes\n\t#scheme: Muse\n\tscheme: Mist\n\t#scheme: Pisces\n\t#scheme: Gemini\n\t```\n- ##### 设置站点 icon\n\t在 favicon 中，可以设置侧边栏头像以及站点 icon ，需要把你的 icon 放在主题目录的 source/img/ 目录下\n\t```\n\tfavicon:\n      small: /img/avatar.jfif\n      medium: /img/avatar.jfif\n      apple_touch_icon: /img/avatar.jfif\n      safari_pinned_tab: /images/logo.svg\n\t```\n- ##### 还有其余的很多配置，可以参考 \"_config.next.yml\" 里面的提示来配置\n\n\n\n","source":"_posts/Hexo-加强-Next-Theme-美化.md","raw":"---\ntitle: Hexo 加强 Next Theme 美化\ndate: 2022-10-26 11:27:15\ntags:\n\t- Hexo\n---\n#### Hexo-Next 主题\nhexo-theme-next 应该是目前最广泛使用的hexo主题\n\n#### 安装 Hexo-Next 主题\n切换到你的博客顶级工程目录，npm 安装\n\n```\nnpm install hexo-theme-next\n```\n\n#### 切换到 Next 主题\n在你的博客顶层工程目录下打开 \"_config.yml\"\n\n<img src=\"/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png\"/>\n\n搜索themes，将里面的值改为next\n\n```\ntheme: next\n```\n#### 配置 Next 主题\n将 node_modules/hexo-theme-next/_config.yml 复制到博客顶层文件目录，重命名为 \"_config.next.yml\"\n\n```\ncd your_site_dir\ncp node_modules/hexo-theme-next/_config.yml  _config.next.yml\n```\n- ##### 选择 Schemes\n\t打开 \"_config.next.yml\" ，首先可以看到 Scheme Settings ，里面提供了四种模式，本站使用 Mist 主题\n\n\t```\n\t# Schemes\n\t#scheme: Muse\n\tscheme: Mist\n\t#scheme: Pisces\n\t#scheme: Gemini\n\t```\n- ##### 设置站点 icon\n\t在 favicon 中，可以设置侧边栏头像以及站点 icon ，需要把你的 icon 放在主题目录的 source/img/ 目录下\n\t```\n\tfavicon:\n      small: /img/avatar.jfif\n      medium: /img/avatar.jfif\n      apple_touch_icon: /img/avatar.jfif\n      safari_pinned_tab: /images/logo.svg\n\t```\n- ##### 还有其余的很多配置，可以参考 \"_config.next.yml\" 里面的提示来配置\n\n\n\n","slug":"Hexo-加强-Next-Theme-美化","published":1,"updated":"2022-10-26T05:53:54.030Z","_id":"cl9p7vzom00006bi5gknmejmd","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"Hexo-Next-主题\"><a href=\"#Hexo-Next-主题\" class=\"headerlink\" title=\"Hexo-Next 主题\"></a>Hexo-Next 主题</h4><p>hexo-theme-next 应该是目前最广泛使用的hexo主题</p>\n<h4 id=\"安装-Hexo-Next-主题\"><a href=\"#安装-Hexo-Next-主题\" class=\"headerlink\" title=\"安装 Hexo-Next 主题\"></a>安装 Hexo-Next 主题</h4><p>切换到你的博客顶级工程目录，npm 安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"切换到-Next-主题\"><a href=\"#切换到-Next-主题\" class=\"headerlink\" title=\"切换到 Next 主题\"></a>切换到 Next 主题</h4><p>在你的博客顶层工程目录下打开 “_config.yml”</p>\n<img src=\"/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png\"/>\n\n<p>搜索themes，将里面的值改为next</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置-Next-主题\"><a href=\"#配置-Next-主题\" class=\"headerlink\" title=\"配置 Next 主题\"></a>配置 Next 主题</h4><p>将 node_modules&#x2F;hexo-theme-next&#x2F;_config.yml 复制到博客顶层文件目录，重命名为 “_config.next.yml”</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd your_site_dir</span><br><span class=\"line\">cp node_modules/hexo-theme-next/_config.yml  _config.next.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h5 id=\"选择-Schemes\"><a href=\"#选择-Schemes\" class=\"headerlink\" title=\"选择 Schemes\"></a>选择 Schemes</h5><p>  打开 “_config.next.yml” ，首先可以看到 Scheme Settings ，里面提供了四种模式，本站使用 Mist 主题</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">#scheme: Gemini</span><br></pre></td></tr></table></figure></li>\n<li><h5 id=\"设置站点-icon\"><a href=\"#设置站点-icon\" class=\"headerlink\" title=\"设置站点 icon\"></a>设置站点 icon</h5><p>  在 favicon 中，可以设置侧边栏头像以及站点 icon ，需要把你的 icon 放在主题目录的 source&#x2F;img&#x2F; 目录下</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">     small: /img/avatar.jfif</span><br><span class=\"line\">     medium: /img/avatar.jfif</span><br><span class=\"line\">     apple_touch_icon: /img/avatar.jfif</span><br><span class=\"line\">     safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure></li>\n<li><h5 id=\"还有其余的很多配置，可以参考-“-config-next-yml”-里面的提示来配置\"><a href=\"#还有其余的很多配置，可以参考-“-config-next-yml”-里面的提示来配置\" class=\"headerlink\" title=\"还有其余的很多配置，可以参考 “_config.next.yml” 里面的提示来配置\"></a>还有其余的很多配置，可以参考 “_config.next.yml” 里面的提示来配置</h5></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"Hexo-Next-主题\"><a href=\"#Hexo-Next-主题\" class=\"headerlink\" title=\"Hexo-Next 主题\"></a>Hexo-Next 主题</h4><p>hexo-theme-next 应该是目前最广泛使用的hexo主题</p>\n<h4 id=\"安装-Hexo-Next-主题\"><a href=\"#安装-Hexo-Next-主题\" class=\"headerlink\" title=\"安装 Hexo-Next 主题\"></a>安装 Hexo-Next 主题</h4><p>切换到你的博客顶级工程目录，npm 安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"切换到-Next-主题\"><a href=\"#切换到-Next-主题\" class=\"headerlink\" title=\"切换到 Next 主题\"></a>切换到 Next 主题</h4><p>在你的博客顶层工程目录下打开 “_config.yml”</p>\n<img src=\"/pictures/hexo-next-theme 美化/2022.10.26.13.24.11.png\"/>\n\n<p>搜索themes，将里面的值改为next</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置-Next-主题\"><a href=\"#配置-Next-主题\" class=\"headerlink\" title=\"配置 Next 主题\"></a>配置 Next 主题</h4><p>将 node_modules&#x2F;hexo-theme-next&#x2F;_config.yml 复制到博客顶层文件目录，重命名为 “_config.next.yml”</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd your_site_dir</span><br><span class=\"line\">cp node_modules/hexo-theme-next/_config.yml  _config.next.yml</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h5 id=\"选择-Schemes\"><a href=\"#选择-Schemes\" class=\"headerlink\" title=\"选择 Schemes\"></a>选择 Schemes</h5><p>  打开 “_config.next.yml” ，首先可以看到 Scheme Settings ，里面提供了四种模式，本站使用 Mist 主题</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Schemes</span><br><span class=\"line\">#scheme: Muse</span><br><span class=\"line\">scheme: Mist</span><br><span class=\"line\">#scheme: Pisces</span><br><span class=\"line\">#scheme: Gemini</span><br></pre></td></tr></table></figure></li>\n<li><h5 id=\"设置站点-icon\"><a href=\"#设置站点-icon\" class=\"headerlink\" title=\"设置站点 icon\"></a>设置站点 icon</h5><p>  在 favicon 中，可以设置侧边栏头像以及站点 icon ，需要把你的 icon 放在主题目录的 source&#x2F;img&#x2F; 目录下</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favicon:</span><br><span class=\"line\">     small: /img/avatar.jfif</span><br><span class=\"line\">     medium: /img/avatar.jfif</span><br><span class=\"line\">     apple_touch_icon: /img/avatar.jfif</span><br><span class=\"line\">     safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure></li>\n<li><h5 id=\"还有其余的很多配置，可以参考-“-config-next-yml”-里面的提示来配置\"><a href=\"#还有其余的很多配置，可以参考-“-config-next-yml”-里面的提示来配置\" class=\"headerlink\" title=\"还有其余的很多配置，可以参考 “_config.next.yml” 里面的提示来配置\"></a>还有其余的很多配置，可以参考 “_config.next.yml” 里面的提示来配置</h5></li>\n</ul>\n"},{"title":"工作面试","date":"2022-10-26T06:11:21.000Z","_content":"#### 深信服 Go 后端笔试(实习) 2022.9.29\n- 牛客，要求录屏\n- Go 语言基本语法（非常细节）\n- 算法 编辑距离 \n\n\n#### 字节飞书搜索后端一面(实习) 2022.10.11\n- 飞书浏览器或者客户端面试\n- 自我介绍\n- 简历内容（项目过程里面遇到什么问题，如何解决)\n- 为什么选择字节\n- 为什么选择 Go 语言\n- Python 为什么比 Go 效率低下\n- Go 语言 sync 包的数据结构以及函数用过哪些\n- Go 语言逃逸分析\n- Go 内存管理\n- redis 实现原理\n- 算法 对称二叉树（感觉有点羞辱）\n- C++ 现在最新标准，有什么新特性\n\n#### 海能达 Go 后端笔试一面(实习) 2022.10.18\n- 腾讯会议\n- 自我介绍\n- Go 的切片数组区别\n- 为什么大三就来面试\n- 简历内容（项目过程里面遇到什么问题，如何解决)\n- 软件工程\n- 软件开发流程\n- 软件设计模式\n- 影响数据库查询速率的因素\n \n#### 腾讯游戏技术运营一面(实习) 2022.10.25\n- 腾讯会议面试，要求录屏\n- 先来做几条题目，很简单，主要看思路，但是基本语法不能错误，任意语言\n\n\t- 使用 js/php/python 自行实现函数方法 去掉一个数组的重复元素，例如：let arr = [1 ,1 ,2, 3, 3, 2, 1] (若是百亿数据，要求时间O(n)，空间O(1)，有什么思路)\n\t- 使用 js/php/python 实现一个函数，将字符串 “hello_world” 转换成 \"HelloWorld\" , \"hello_hang_zhou\" 转换成 “HelloHangZhou” (注意：通用性)\n\t- 使用 js/php/python 实现一个函数方法，参数为输入一个整数，然后输出这个数所有的因数以及总的个数，比如参数传 48 ，此时输出 1、2、3、4、6、8、12、16、24、48 共 10 个数字，比如参数传 21 ，此时输出 1、3、7、21 共 4 个数字\n\t- 使用 js/php/python 函数遍历以下 json 数据，输出指定格式结果（考虑 children 层次会无限嵌套）\t\n\t- 数据库操作，建一个表学生 student (id,name,sex,birth) (编号、姓名、性别、出生年月)\n\t\t- 写下建表语句：\n\t\t- student 表新增一个字段“班级编号”（class_no），写出对应的执行 sql 语句\n\t\t- 统计每个班级有多少个学生，根据班级编号统计，写下统计 sql\n- 自我介绍\n- 问简历的内容\n- redis 五种数据类型\n- 平时喜欢看什么书（简历有写）\n- bash 基本知识\n- 面向对象三大特性\n- 数据库三大特性深入理解\n- sql 备份主从一致\n\n\n","source":"_posts/工作面试.md","raw":"---\ntitle: 工作面试\ndate: 2022-10-26 14:11:21\ntags:\n\t- 工作面试\n---\n#### 深信服 Go 后端笔试(实习) 2022.9.29\n- 牛客，要求录屏\n- Go 语言基本语法（非常细节）\n- 算法 编辑距离 \n\n\n#### 字节飞书搜索后端一面(实习) 2022.10.11\n- 飞书浏览器或者客户端面试\n- 自我介绍\n- 简历内容（项目过程里面遇到什么问题，如何解决)\n- 为什么选择字节\n- 为什么选择 Go 语言\n- Python 为什么比 Go 效率低下\n- Go 语言 sync 包的数据结构以及函数用过哪些\n- Go 语言逃逸分析\n- Go 内存管理\n- redis 实现原理\n- 算法 对称二叉树（感觉有点羞辱）\n- C++ 现在最新标准，有什么新特性\n\n#### 海能达 Go 后端笔试一面(实习) 2022.10.18\n- 腾讯会议\n- 自我介绍\n- Go 的切片数组区别\n- 为什么大三就来面试\n- 简历内容（项目过程里面遇到什么问题，如何解决)\n- 软件工程\n- 软件开发流程\n- 软件设计模式\n- 影响数据库查询速率的因素\n \n#### 腾讯游戏技术运营一面(实习) 2022.10.25\n- 腾讯会议面试，要求录屏\n- 先来做几条题目，很简单，主要看思路，但是基本语法不能错误，任意语言\n\n\t- 使用 js/php/python 自行实现函数方法 去掉一个数组的重复元素，例如：let arr = [1 ,1 ,2, 3, 3, 2, 1] (若是百亿数据，要求时间O(n)，空间O(1)，有什么思路)\n\t- 使用 js/php/python 实现一个函数，将字符串 “hello_world” 转换成 \"HelloWorld\" , \"hello_hang_zhou\" 转换成 “HelloHangZhou” (注意：通用性)\n\t- 使用 js/php/python 实现一个函数方法，参数为输入一个整数，然后输出这个数所有的因数以及总的个数，比如参数传 48 ，此时输出 1、2、3、4、6、8、12、16、24、48 共 10 个数字，比如参数传 21 ，此时输出 1、3、7、21 共 4 个数字\n\t- 使用 js/php/python 函数遍历以下 json 数据，输出指定格式结果（考虑 children 层次会无限嵌套）\t\n\t- 数据库操作，建一个表学生 student (id,name,sex,birth) (编号、姓名、性别、出生年月)\n\t\t- 写下建表语句：\n\t\t- student 表新增一个字段“班级编号”（class_no），写出对应的执行 sql 语句\n\t\t- 统计每个班级有多少个学生，根据班级编号统计，写下统计 sql\n- 自我介绍\n- 问简历的内容\n- redis 五种数据类型\n- 平时喜欢看什么书（简历有写）\n- bash 基本知识\n- 面向对象三大特性\n- 数据库三大特性深入理解\n- sql 备份主从一致\n\n\n","slug":"工作面试","published":1,"updated":"2022-10-28T02:46:30.019Z","_id":"cl9pakkk300006qi53cq52tm9","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"深信服-Go-后端笔试-实习-2022-9-29\"><a href=\"#深信服-Go-后端笔试-实习-2022-9-29\" class=\"headerlink\" title=\"深信服 Go 后端笔试(实习) 2022.9.29\"></a>深信服 Go 后端笔试(实习) 2022.9.29</h4><ul>\n<li>牛客，要求录屏</li>\n<li>Go 语言基本语法（非常细节）</li>\n<li>算法 编辑距离</li>\n</ul>\n<h4 id=\"字节飞书搜索后端一面-实习-2022-10-11\"><a href=\"#字节飞书搜索后端一面-实习-2022-10-11\" class=\"headerlink\" title=\"字节飞书搜索后端一面(实习) 2022.10.11\"></a>字节飞书搜索后端一面(实习) 2022.10.11</h4><ul>\n<li>飞书浏览器或者客户端面试</li>\n<li>自我介绍</li>\n<li>简历内容（项目过程里面遇到什么问题，如何解决)</li>\n<li>为什么选择字节</li>\n<li>为什么选择 Go 语言</li>\n<li>Python 为什么比 Go 效率低下</li>\n<li>Go 语言 sync 包的数据结构以及函数用过哪些</li>\n<li>Go 语言逃逸分析</li>\n<li>Go 内存管理</li>\n<li>redis 实现原理</li>\n<li>算法 对称二叉树（感觉有点羞辱）</li>\n<li>C++ 现在最新标准，有什么新特性</li>\n</ul>\n<h4 id=\"海能达-Go-后端笔试一面-实习-2022-10-18\"><a href=\"#海能达-Go-后端笔试一面-实习-2022-10-18\" class=\"headerlink\" title=\"海能达 Go 后端笔试一面(实习) 2022.10.18\"></a>海能达 Go 后端笔试一面(实习) 2022.10.18</h4><ul>\n<li>腾讯会议</li>\n<li>自我介绍</li>\n<li>Go 的切片数组区别</li>\n<li>为什么大三就来面试</li>\n<li>简历内容（项目过程里面遇到什么问题，如何解决)</li>\n<li>软件工程</li>\n<li>软件开发流程</li>\n<li>软件设计模式</li>\n<li>影响数据库查询速率的因素</li>\n</ul>\n<h4 id=\"腾讯游戏技术运营一面-实习-2022-10-25\"><a href=\"#腾讯游戏技术运营一面-实习-2022-10-25\" class=\"headerlink\" title=\"腾讯游戏技术运营一面(实习) 2022.10.25\"></a>腾讯游戏技术运营一面(实习) 2022.10.25</h4><ul>\n<li><p>腾讯会议面试，要求录屏</p>\n</li>\n<li><p>先来做几条题目，很简单，主要看思路，但是基本语法不能错误，任意语言</p>\n<ul>\n<li>使用 js&#x2F;php&#x2F;python 自行实现函数方法 去掉一个数组的重复元素，例如：let arr &#x3D; [1 ,1 ,2, 3, 3, 2, 1] (若是百亿数据，要求时间O(n)，空间O(1)，有什么思路)</li>\n<li>使用 js&#x2F;php&#x2F;python 实现一个函数，将字符串 “hello_world” 转换成 “HelloWorld” , “hello_hang_zhou” 转换成 “HelloHangZhou” (注意：通用性)</li>\n<li>使用 js&#x2F;php&#x2F;python 实现一个函数方法，参数为输入一个整数，然后输出这个数所有的因数以及总的个数，比如参数传 48 ，此时输出 1、2、3、4、6、8、12、16、24、48 共 10 个数字，比如参数传 21 ，此时输出 1、3、7、21 共 4 个数字</li>\n<li>使用 js&#x2F;php&#x2F;python 函数遍历以下 json 数据，输出指定格式结果（考虑 children 层次会无限嵌套）\t</li>\n<li>数据库操作，建一个表学生 student (id,name,sex,birth) (编号、姓名、性别、出生年月)<ul>\n<li>写下建表语句：</li>\n<li>student 表新增一个字段“班级编号”（class_no），写出对应的执行 sql 语句</li>\n<li>统计每个班级有多少个学生，根据班级编号统计，写下统计 sql</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>自我介绍</p>\n</li>\n<li><p>问简历的内容</p>\n</li>\n<li><p>redis 五种数据类型</p>\n</li>\n<li><p>平时喜欢看什么书（简历有写）</p>\n</li>\n<li><p>bash 基本知识</p>\n</li>\n<li><p>面向对象三大特性</p>\n</li>\n<li><p>数据库三大特性深入理解</p>\n</li>\n<li><p>sql 备份主从一致</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"深信服-Go-后端笔试-实习-2022-9-29\"><a href=\"#深信服-Go-后端笔试-实习-2022-9-29\" class=\"headerlink\" title=\"深信服 Go 后端笔试(实习) 2022.9.29\"></a>深信服 Go 后端笔试(实习) 2022.9.29</h4><ul>\n<li>牛客，要求录屏</li>\n<li>Go 语言基本语法（非常细节）</li>\n<li>算法 编辑距离</li>\n</ul>\n<h4 id=\"字节飞书搜索后端一面-实习-2022-10-11\"><a href=\"#字节飞书搜索后端一面-实习-2022-10-11\" class=\"headerlink\" title=\"字节飞书搜索后端一面(实习) 2022.10.11\"></a>字节飞书搜索后端一面(实习) 2022.10.11</h4><ul>\n<li>飞书浏览器或者客户端面试</li>\n<li>自我介绍</li>\n<li>简历内容（项目过程里面遇到什么问题，如何解决)</li>\n<li>为什么选择字节</li>\n<li>为什么选择 Go 语言</li>\n<li>Python 为什么比 Go 效率低下</li>\n<li>Go 语言 sync 包的数据结构以及函数用过哪些</li>\n<li>Go 语言逃逸分析</li>\n<li>Go 内存管理</li>\n<li>redis 实现原理</li>\n<li>算法 对称二叉树（感觉有点羞辱）</li>\n<li>C++ 现在最新标准，有什么新特性</li>\n</ul>\n<h4 id=\"海能达-Go-后端笔试一面-实习-2022-10-18\"><a href=\"#海能达-Go-后端笔试一面-实习-2022-10-18\" class=\"headerlink\" title=\"海能达 Go 后端笔试一面(实习) 2022.10.18\"></a>海能达 Go 后端笔试一面(实习) 2022.10.18</h4><ul>\n<li>腾讯会议</li>\n<li>自我介绍</li>\n<li>Go 的切片数组区别</li>\n<li>为什么大三就来面试</li>\n<li>简历内容（项目过程里面遇到什么问题，如何解决)</li>\n<li>软件工程</li>\n<li>软件开发流程</li>\n<li>软件设计模式</li>\n<li>影响数据库查询速率的因素</li>\n</ul>\n<h4 id=\"腾讯游戏技术运营一面-实习-2022-10-25\"><a href=\"#腾讯游戏技术运营一面-实习-2022-10-25\" class=\"headerlink\" title=\"腾讯游戏技术运营一面(实习) 2022.10.25\"></a>腾讯游戏技术运营一面(实习) 2022.10.25</h4><ul>\n<li><p>腾讯会议面试，要求录屏</p>\n</li>\n<li><p>先来做几条题目，很简单，主要看思路，但是基本语法不能错误，任意语言</p>\n<ul>\n<li>使用 js&#x2F;php&#x2F;python 自行实现函数方法 去掉一个数组的重复元素，例如：let arr &#x3D; [1 ,1 ,2, 3, 3, 2, 1] (若是百亿数据，要求时间O(n)，空间O(1)，有什么思路)</li>\n<li>使用 js&#x2F;php&#x2F;python 实现一个函数，将字符串 “hello_world” 转换成 “HelloWorld” , “hello_hang_zhou” 转换成 “HelloHangZhou” (注意：通用性)</li>\n<li>使用 js&#x2F;php&#x2F;python 实现一个函数方法，参数为输入一个整数，然后输出这个数所有的因数以及总的个数，比如参数传 48 ，此时输出 1、2、3、4、6、8、12、16、24、48 共 10 个数字，比如参数传 21 ，此时输出 1、3、7、21 共 4 个数字</li>\n<li>使用 js&#x2F;php&#x2F;python 函数遍历以下 json 数据，输出指定格式结果（考虑 children 层次会无限嵌套）\t</li>\n<li>数据库操作，建一个表学生 student (id,name,sex,birth) (编号、姓名、性别、出生年月)<ul>\n<li>写下建表语句：</li>\n<li>student 表新增一个字段“班级编号”（class_no），写出对应的执行 sql 语句</li>\n<li>统计每个班级有多少个学生，根据班级编号统计，写下统计 sql</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>自我介绍</p>\n</li>\n<li><p>问简历的内容</p>\n</li>\n<li><p>redis 五种数据类型</p>\n</li>\n<li><p>平时喜欢看什么书（简历有写）</p>\n</li>\n<li><p>bash 基本知识</p>\n</li>\n<li><p>面向对象三大特性</p>\n</li>\n<li><p>数据库三大特性深入理解</p>\n</li>\n<li><p>sql 备份主从一致</p>\n</li>\n</ul>\n"},{"title":"初识 MARO","date":"2022-10-26T02:20:02.000Z","_content":"### [MARO ，“Multi-Agent-Resource Optimization” ](https://github.com/microsoft/maro)，中文是“多代理资源优化” ，使用强化学习来解决资源调度的一个平台\n######\n#### 可以应用 MARO 的实际例子：\n\n- ##### CIM,\"Container Inventory Management\",中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\n\t- 而使用 MARO 可以解决这个问题，使得每个港口尽可能分配到恰当的空集装箱资源，不多不少。\n\t- 在这个场景里面，空集装箱是中心资源，导致资源数量改变的事件有两个：\n\t\t- 第一个是 Order ，即订单，订单会导致货物从 source port 运到 destination port ， 这个时候 source port 出货，empty container 会减少，destination port 进货，empty container 会增加\n\t\t- 第二个是 repositioning，使用 MARO 重定位空集装箱，平衡全球空集装箱分布。\n######\n\n![](/pictures/初识MARO/cim.container_flow.svg)\n\n- ##### 对上面这个流程图的解释\n\t- 托运人（shipper）生成订单（send order）后，相应源端口（source port）的空容器将被释放（release empty）给托运人（shipper）\n\t- 托运人（shipper）将用货物装满集装箱，将其变成满载货物，然后在将满载货物的集装箱运回到（return laden）源港口（source port）\n\t- 船（vessel）到港口（source port）之后被装载满载货物的集装箱（load laden）\n\t- 船航行到进口港（source port），卸货（discharge laden）\n\t- 满载货物将被释放（release laden）给收货人（consignee），收货人将取出其中的货物，集装箱再次变空返回港口（return empty）\n######\n- ##### 这个时候我们发现，整个过程我们还有五个部分没有提到，分别是 agent ，operate empty ，load/discharge empty \n\t- 为了为了重新平衡集装箱分布，每个港口（port）的代理商（agent）将决定每次船舶（vessel）到达港口时如何重新分配（repostioning）空集装箱\n\t\t- 船只（vessel）到达港口时，是往船上装载空集装箱（load empty），还是消费船上原有的空集装箱（discharge empty）\n\t\t- 分配 load/discharge empty 的数量\n######\n- ##### MARO 就是帮助 agent 调整 load/discharge empty 的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\n\t- 出口导向型港口（例如中国的港口）显示出明显的高需求特征，通常需要额外的空集装箱供应，这些港口将倾向于从船上卸载空集装箱\n\t- 虽然以进口为导向的港口具有显著的盈余特征，但通常从收货人那里收到许多空集装箱，因此，如果存在空闲容量，面向进口的港口将倾向于将多余的空集装箱装入船舶\n######\n- #### 简单拓扑结构\n![](/pictures/初识MARO/cim.toys.svg)\n- ##### 这里要特别注意上面这个图里面，这里的 S 和 D 并不是 source 和 destination，而是 empty containers 的 supplier 和 demander，这里 order 也并不是货物订单，而是 empty containers 的订单\n- ##### 上图实线表示货物流向，虚线表示订单流向，S 与 D 由订单（Order）决定，订单发起方为 D，订单收到方为 S\n\t- **拓扑（1）** 有四个 port ，D1 和 D2 是简单的需求者（需要额外 empty container 的端口），而 S2 是简单的供应商（具有剩余空容器的端口），尽管 S1 是一个简单的目标端口，但它位于两个服务路由的交点，这使其成为此拓扑中的特殊端口，为了实现全局最优，S1 必须学会区分服务路由并执行特定于服务路由的重新定位操作\n\t- **拓扑（2）** 中有五个端口，根据订单，D1 和 D2 是简单的需求者，而 S1 和 S2 是简单的供应商，作为服务航线交汇处的港口，T1港口虽然可以达到自平衡状态，但仍对全局最优起着重要作用，T1 的最佳重新定位策略是将多余的空容器从左侧服务路由转移到右侧服务路由，此外，D1 和 D2 应该学会只卸载它们需要的 empty 数量，并将多余的 empty 留给其他端口\n\t- **拓扑（3）** 中有六个端口，简单的需求者 D1 和 D2 ，简单的供应商 S1 和 S2 ，以及自平衡端口 T1 和 T2 ，比拓扑（2）更困难的是，应该采取更多的转移来将多余的空集装箱从最左边的服务路线重新定位到最右边的航线，这意味着需要一个涉及更多港口的多步骤解决方案\n######\n![](/pictures/初识MARO/cim.global_trade.svg)\n- 这是基于真实世界数据设计的拓扑,大多数港口不再具有简单的供需功能。港口之间的合作要复杂得多，很难手动找到有效的重新定位策略\n######\n- #### 入门\n- ##### 安装\n```python\npip install pymaro\n```\n- ##### MARO 算法有两个关键步骤\n- ###### 算法决策事件 DecisionEventDecisionEvent\n\t- tick (int)：相应的刻度\n\t- port_idx（int）：需要响应环境的端口/代理的 ID\n\t- vessel_idx（int）：港口/代理人的船舶/操作对象的 ID\n\t- action_scope（操作范围）：操作范围有两个属性，load表示可以从船舶港口装载的最大数量，discharge表示从船舶到港口可以卸货的最大数量\n\t- early_discharge（int）：当船上的可用容量不足以装载满载物时，船上的一些空容器将被提前卸货以释放空间，由于满载而提前卸货的空容器数量记录在该字段中\n- ###### 行动 Action\n\t- none，这意味着什么都不做\n\t- a valid instance，有效实例：\n\t- vessel_idx（int）：港口/代理人的船舶/操作对象的 ID\n\t- port_idx（int）：执行此操作的端口/代理的 ID\n\t- action_type（操作类型）：在此操作中是装载还是卸载空容器\n\t- 数量（int）：要装载/卸载的空容器的（非负）数量\n######\n![](/pictures/初识MARO/maro_overview.svg)\n- #### 上图是 MARO 框架图\n\t- Simulation toolkit：它提供了一些预定义的场景，以及用于构建新场景的可重用轮子\n\t- RL toolkit：它为 RL 提供了全栈抽象，例如代理管理器、代理、RL 算法、学习器、参与者和各种塑造者\n\t- Distributed toolkit：提供分布式通信组件、消息自动处理、集群配置、作业编排等用户定义功能的接口\n\n\n","source":"_posts/初识-MARO.md","raw":"---\ntitle: 初识 MARO\ndate: 2022-10-26 10:20:02\ntags:\n\t- MARO\n---\n### [MARO ，“Multi-Agent-Resource Optimization” ](https://github.com/microsoft/maro)，中文是“多代理资源优化” ，使用强化学习来解决资源调度的一个平台\n######\n#### 可以应用 MARO 的实际例子：\n\n- ##### CIM,\"Container Inventory Management\",中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\n\t- 而使用 MARO 可以解决这个问题，使得每个港口尽可能分配到恰当的空集装箱资源，不多不少。\n\t- 在这个场景里面，空集装箱是中心资源，导致资源数量改变的事件有两个：\n\t\t- 第一个是 Order ，即订单，订单会导致货物从 source port 运到 destination port ， 这个时候 source port 出货，empty container 会减少，destination port 进货，empty container 会增加\n\t\t- 第二个是 repositioning，使用 MARO 重定位空集装箱，平衡全球空集装箱分布。\n######\n\n![](/pictures/初识MARO/cim.container_flow.svg)\n\n- ##### 对上面这个流程图的解释\n\t- 托运人（shipper）生成订单（send order）后，相应源端口（source port）的空容器将被释放（release empty）给托运人（shipper）\n\t- 托运人（shipper）将用货物装满集装箱，将其变成满载货物，然后在将满载货物的集装箱运回到（return laden）源港口（source port）\n\t- 船（vessel）到港口（source port）之后被装载满载货物的集装箱（load laden）\n\t- 船航行到进口港（source port），卸货（discharge laden）\n\t- 满载货物将被释放（release laden）给收货人（consignee），收货人将取出其中的货物，集装箱再次变空返回港口（return empty）\n######\n- ##### 这个时候我们发现，整个过程我们还有五个部分没有提到，分别是 agent ，operate empty ，load/discharge empty \n\t- 为了为了重新平衡集装箱分布，每个港口（port）的代理商（agent）将决定每次船舶（vessel）到达港口时如何重新分配（repostioning）空集装箱\n\t\t- 船只（vessel）到达港口时，是往船上装载空集装箱（load empty），还是消费船上原有的空集装箱（discharge empty）\n\t\t- 分配 load/discharge empty 的数量\n######\n- ##### MARO 就是帮助 agent 调整 load/discharge empty 的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\n\t- 出口导向型港口（例如中国的港口）显示出明显的高需求特征，通常需要额外的空集装箱供应，这些港口将倾向于从船上卸载空集装箱\n\t- 虽然以进口为导向的港口具有显著的盈余特征，但通常从收货人那里收到许多空集装箱，因此，如果存在空闲容量，面向进口的港口将倾向于将多余的空集装箱装入船舶\n######\n- #### 简单拓扑结构\n![](/pictures/初识MARO/cim.toys.svg)\n- ##### 这里要特别注意上面这个图里面，这里的 S 和 D 并不是 source 和 destination，而是 empty containers 的 supplier 和 demander，这里 order 也并不是货物订单，而是 empty containers 的订单\n- ##### 上图实线表示货物流向，虚线表示订单流向，S 与 D 由订单（Order）决定，订单发起方为 D，订单收到方为 S\n\t- **拓扑（1）** 有四个 port ，D1 和 D2 是简单的需求者（需要额外 empty container 的端口），而 S2 是简单的供应商（具有剩余空容器的端口），尽管 S1 是一个简单的目标端口，但它位于两个服务路由的交点，这使其成为此拓扑中的特殊端口，为了实现全局最优，S1 必须学会区分服务路由并执行特定于服务路由的重新定位操作\n\t- **拓扑（2）** 中有五个端口，根据订单，D1 和 D2 是简单的需求者，而 S1 和 S2 是简单的供应商，作为服务航线交汇处的港口，T1港口虽然可以达到自平衡状态，但仍对全局最优起着重要作用，T1 的最佳重新定位策略是将多余的空容器从左侧服务路由转移到右侧服务路由，此外，D1 和 D2 应该学会只卸载它们需要的 empty 数量，并将多余的 empty 留给其他端口\n\t- **拓扑（3）** 中有六个端口，简单的需求者 D1 和 D2 ，简单的供应商 S1 和 S2 ，以及自平衡端口 T1 和 T2 ，比拓扑（2）更困难的是，应该采取更多的转移来将多余的空集装箱从最左边的服务路线重新定位到最右边的航线，这意味着需要一个涉及更多港口的多步骤解决方案\n######\n![](/pictures/初识MARO/cim.global_trade.svg)\n- 这是基于真实世界数据设计的拓扑,大多数港口不再具有简单的供需功能。港口之间的合作要复杂得多，很难手动找到有效的重新定位策略\n######\n- #### 入门\n- ##### 安装\n```python\npip install pymaro\n```\n- ##### MARO 算法有两个关键步骤\n- ###### 算法决策事件 DecisionEventDecisionEvent\n\t- tick (int)：相应的刻度\n\t- port_idx（int）：需要响应环境的端口/代理的 ID\n\t- vessel_idx（int）：港口/代理人的船舶/操作对象的 ID\n\t- action_scope（操作范围）：操作范围有两个属性，load表示可以从船舶港口装载的最大数量，discharge表示从船舶到港口可以卸货的最大数量\n\t- early_discharge（int）：当船上的可用容量不足以装载满载物时，船上的一些空容器将被提前卸货以释放空间，由于满载而提前卸货的空容器数量记录在该字段中\n- ###### 行动 Action\n\t- none，这意味着什么都不做\n\t- a valid instance，有效实例：\n\t- vessel_idx（int）：港口/代理人的船舶/操作对象的 ID\n\t- port_idx（int）：执行此操作的端口/代理的 ID\n\t- action_type（操作类型）：在此操作中是装载还是卸载空容器\n\t- 数量（int）：要装载/卸载的空容器的（非负）数量\n######\n![](/pictures/初识MARO/maro_overview.svg)\n- #### 上图是 MARO 框架图\n\t- Simulation toolkit：它提供了一些预定义的场景，以及用于构建新场景的可重用轮子\n\t- RL toolkit：它为 RL 提供了全栈抽象，例如代理管理器、代理、RL 算法、学习器、参与者和各种塑造者\n\t- Distributed toolkit：提供分布式通信组件、消息自动处理、集群配置、作业编排等用户定义功能的接口\n\n\n","slug":"初识-MARO","published":1,"updated":"2022-10-26T07:35:56.121Z","_id":"cl9pbbk8x000036i570ym3cm8","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"MARO-，“Multi-Agent-Resource-Optimization”-，中文是“多代理资源优化”-，使用强化学习来解决资源调度的一个平台\"><a href=\"#MARO-，“Multi-Agent-Resource-Optimization”-，中文是“多代理资源优化”-，使用强化学习来解决资源调度的一个平台\" class=\"headerlink\" title=\"MARO ，“Multi-Agent-Resource Optimization” ，中文是“多代理资源优化” ，使用强化学习来解决资源调度的一个平台\"></a><a href=\"https://github.com/microsoft/maro\">MARO ，“Multi-Agent-Resource Optimization” </a>，中文是“多代理资源优化” ，使用强化学习来解决资源调度的一个平台</h3><h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><h4 id=\"可以应用-MARO-的实际例子：\"><a href=\"#可以应用-MARO-的实际例子：\" class=\"headerlink\" title=\"可以应用 MARO 的实际例子：\"></a>可以应用 MARO 的实际例子：</h4><ul>\n<li><h5 id=\"CIM-”Container-Inventory-Management”-中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\"><a href=\"#CIM-”Container-Inventory-Management”-中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\" class=\"headerlink\" title=\"CIM,”Container Inventory Management”,中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\"></a>CIM,”Container Inventory Management”,中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）</h5><ul>\n<li>而使用 MARO 可以解决这个问题，使得每个港口尽可能分配到恰当的空集装箱资源，不多不少。</li>\n<li>在这个场景里面，空集装箱是中心资源，导致资源数量改变的事件有两个：<ul>\n<li>第一个是 Order ，即订单，订单会导致货物从 source port 运到 destination port ， 这个时候 source port 出货，empty container 会减少，destination port 进货，empty container 会增加</li>\n<li>第二个是 repositioning，使用 MARO 重定位空集装箱，平衡全球空集装箱分布。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/cim.container_flow.svg\"></p>\n<ul>\n<li><h5 id=\"对上面这个流程图的解释\"><a href=\"#对上面这个流程图的解释\" class=\"headerlink\" title=\"对上面这个流程图的解释\"></a>对上面这个流程图的解释</h5><ul>\n<li>托运人（shipper）生成订单（send order）后，相应源端口（source port）的空容器将被释放（release empty）给托运人（shipper）</li>\n<li>托运人（shipper）将用货物装满集装箱，将其变成满载货物，然后在将满载货物的集装箱运回到（return laden）源港口（source port）</li>\n<li>船（vessel）到港口（source port）之后被装载满载货物的集装箱（load laden）</li>\n<li>船航行到进口港（source port），卸货（discharge laden）</li>\n<li>满载货物将被释放（release laden）给收货人（consignee），收货人将取出其中的货物，集装箱再次变空返回港口（return empty）</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h5 id=\"这个时候我们发现，整个过程我们还有五个部分没有提到，分别是-agent-，operate-empty-，load-x2F-discharge-empty\"><a href=\"#这个时候我们发现，整个过程我们还有五个部分没有提到，分别是-agent-，operate-empty-，load-x2F-discharge-empty\" class=\"headerlink\" title=\"这个时候我们发现，整个过程我们还有五个部分没有提到，分别是 agent ，operate empty ，load&#x2F;discharge empty\"></a>这个时候我们发现，整个过程我们还有五个部分没有提到，分别是 agent ，operate empty ，load&#x2F;discharge empty</h5><ul>\n<li>为了为了重新平衡集装箱分布，每个港口（port）的代理商（agent）将决定每次船舶（vessel）到达港口时如何重新分配（repostioning）空集装箱<ul>\n<li>船只（vessel）到达港口时，是往船上装载空集装箱（load empty），还是消费船上原有的空集装箱（discharge empty）</li>\n<li>分配 load&#x2F;discharge empty 的数量</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h5 id=\"MARO-就是帮助-agent-调整-load-x2F-discharge-empty-的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\"><a href=\"#MARO-就是帮助-agent-调整-load-x2F-discharge-empty-的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\" class=\"headerlink\" title=\"MARO 就是帮助 agent 调整 load&#x2F;discharge empty 的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\"></a>MARO 就是帮助 agent 调整 load&#x2F;discharge empty 的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况</h5><ul>\n<li>出口导向型港口（例如中国的港口）显示出明显的高需求特征，通常需要额外的空集装箱供应，这些港口将倾向于从船上卸载空集装箱</li>\n<li>虽然以进口为导向的港口具有显著的盈余特征，但通常从收货人那里收到许多空集装箱，因此，如果存在空闲容量，面向进口的港口将倾向于将多余的空集装箱装入船舶</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h4 id=\"简单拓扑结构\"><a href=\"#简单拓扑结构\" class=\"headerlink\" title=\"简单拓扑结构\"></a>简单拓扑结构</h4><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/cim.toys.svg\"></li>\n<li><h5 id=\"这里要特别注意上面这个图里面，这里的-S-和-D-并不是-source-和-destination，而是-empty-containers-的-supplier-和-demander，这里-order-也并不是货物订单，而是-empty-containers-的订单\"><a href=\"#这里要特别注意上面这个图里面，这里的-S-和-D-并不是-source-和-destination，而是-empty-containers-的-supplier-和-demander，这里-order-也并不是货物订单，而是-empty-containers-的订单\" class=\"headerlink\" title=\"这里要特别注意上面这个图里面，这里的 S 和 D 并不是 source 和 destination，而是 empty containers 的 supplier 和 demander，这里 order 也并不是货物订单，而是 empty containers 的订单\"></a>这里要特别注意上面这个图里面，这里的 S 和 D 并不是 source 和 destination，而是 empty containers 的 supplier 和 demander，这里 order 也并不是货物订单，而是 empty containers 的订单</h5></li>\n<li><h5 id=\"上图实线表示货物流向，虚线表示订单流向，S-与-D-由订单（Order）决定，订单发起方为-D，订单收到方为-S\"><a href=\"#上图实线表示货物流向，虚线表示订单流向，S-与-D-由订单（Order）决定，订单发起方为-D，订单收到方为-S\" class=\"headerlink\" title=\"上图实线表示货物流向，虚线表示订单流向，S 与 D 由订单（Order）决定，订单发起方为 D，订单收到方为 S\"></a>上图实线表示货物流向，虚线表示订单流向，S 与 D 由订单（Order）决定，订单发起方为 D，订单收到方为 S</h5><ul>\n<li><strong>拓扑（1）</strong> 有四个 port ，D1 和 D2 是简单的需求者（需要额外 empty container 的端口），而 S2 是简单的供应商（具有剩余空容器的端口），尽管 S1 是一个简单的目标端口，但它位于两个服务路由的交点，这使其成为此拓扑中的特殊端口，为了实现全局最优，S1 必须学会区分服务路由并执行特定于服务路由的重新定位操作</li>\n<li><strong>拓扑（2）</strong> 中有五个端口，根据订单，D1 和 D2 是简单的需求者，而 S1 和 S2 是简单的供应商，作为服务航线交汇处的港口，T1港口虽然可以达到自平衡状态，但仍对全局最优起着重要作用，T1 的最佳重新定位策略是将多余的空容器从左侧服务路由转移到右侧服务路由，此外，D1 和 D2 应该学会只卸载它们需要的 empty 数量，并将多余的 empty 留给其他端口</li>\n<li><strong>拓扑（3）</strong> 中有六个端口，简单的需求者 D1 和 D2 ，简单的供应商 S1 和 S2 ，以及自平衡端口 T1 和 T2 ，比拓扑（2）更困难的是，应该采取更多的转移来将多余的空集装箱从最左边的服务路线重新定位到最右边的航线，这意味着需要一个涉及更多港口的多步骤解决方案</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/cim.global_trade.svg\"></p>\n<ul>\n<li>这是基于真实世界数据设计的拓扑,大多数港口不再具有简单的供需功能。港口之间的合作要复杂得多，很难手动找到有效的重新定位策略</li>\n</ul>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h4 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h4></li>\n<li><h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pymaro</span><br></pre></td></tr></table></figure></li>\n<li><h5 id=\"MARO-算法有两个关键步骤\"><a href=\"#MARO-算法有两个关键步骤\" class=\"headerlink\" title=\"MARO 算法有两个关键步骤\"></a>MARO 算法有两个关键步骤</h5></li>\n<li><h6 id=\"算法决策事件-DecisionEventDecisionEvent\"><a href=\"#算法决策事件-DecisionEventDecisionEvent\" class=\"headerlink\" title=\"算法决策事件 DecisionEventDecisionEvent\"></a>算法决策事件 DecisionEventDecisionEvent</h6><ul>\n<li>tick (int)：相应的刻度</li>\n<li>port_idx（int）：需要响应环境的端口&#x2F;代理的 ID</li>\n<li>vessel_idx（int）：港口&#x2F;代理人的船舶&#x2F;操作对象的 ID</li>\n<li>action_scope（操作范围）：操作范围有两个属性，load表示可以从船舶港口装载的最大数量，discharge表示从船舶到港口可以卸货的最大数量</li>\n<li>early_discharge（int）：当船上的可用容量不足以装载满载物时，船上的一些空容器将被提前卸货以释放空间，由于满载而提前卸货的空容器数量记录在该字段中</li>\n</ul>\n</li>\n<li><h6 id=\"行动-Action\"><a href=\"#行动-Action\" class=\"headerlink\" title=\"行动 Action\"></a>行动 Action</h6><ul>\n<li>none，这意味着什么都不做</li>\n<li>a valid instance，有效实例：</li>\n<li>vessel_idx（int）：港口&#x2F;代理人的船舶&#x2F;操作对象的 ID</li>\n<li>port_idx（int）：执行此操作的端口&#x2F;代理的 ID</li>\n<li>action_type（操作类型）：在此操作中是装载还是卸载空容器</li>\n<li>数量（int）：要装载&#x2F;卸载的空容器的（非负）数量</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/maro_overview.svg\"></p>\n<ul>\n<li><h4 id=\"上图是-MARO-框架图\"><a href=\"#上图是-MARO-框架图\" class=\"headerlink\" title=\"上图是 MARO 框架图\"></a>上图是 MARO 框架图</h4><ul>\n<li>Simulation toolkit：它提供了一些预定义的场景，以及用于构建新场景的可重用轮子</li>\n<li>RL toolkit：它为 RL 提供了全栈抽象，例如代理管理器、代理、RL 算法、学习器、参与者和各种塑造者</li>\n<li>Distributed toolkit：提供分布式通信组件、消息自动处理、集群配置、作业编排等用户定义功能的接口</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"MARO-，“Multi-Agent-Resource-Optimization”-，中文是“多代理资源优化”-，使用强化学习来解决资源调度的一个平台\"><a href=\"#MARO-，“Multi-Agent-Resource-Optimization”-，中文是“多代理资源优化”-，使用强化学习来解决资源调度的一个平台\" class=\"headerlink\" title=\"MARO ，“Multi-Agent-Resource Optimization” ，中文是“多代理资源优化” ，使用强化学习来解决资源调度的一个平台\"></a><a href=\"https://github.com/microsoft/maro\">MARO ，“Multi-Agent-Resource Optimization” </a>，中文是“多代理资源优化” ，使用强化学习来解决资源调度的一个平台</h3><h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><h4 id=\"可以应用-MARO-的实际例子：\"><a href=\"#可以应用-MARO-的实际例子：\" class=\"headerlink\" title=\"可以应用 MARO 的实际例子：\"></a>可以应用 MARO 的实际例子：</h4><ul>\n<li><h5 id=\"CIM-”Container-Inventory-Management”-中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\"><a href=\"#CIM-”Container-Inventory-Management”-中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\" class=\"headerlink\" title=\"CIM,”Container Inventory Management”,中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）\"></a>CIM,”Container Inventory Management”,中文是“集装箱库存管理”。全球贸易里面会有很多港口，但是每个港口需要的空集装箱都不一样，有的港口可能空集装箱是剩余的（比如进口向港口），有的港口可能空集装箱不够（比如出口向港口）</h5><ul>\n<li>而使用 MARO 可以解决这个问题，使得每个港口尽可能分配到恰当的空集装箱资源，不多不少。</li>\n<li>在这个场景里面，空集装箱是中心资源，导致资源数量改变的事件有两个：<ul>\n<li>第一个是 Order ，即订单，订单会导致货物从 source port 运到 destination port ， 这个时候 source port 出货，empty container 会减少，destination port 进货，empty container 会增加</li>\n<li>第二个是 repositioning，使用 MARO 重定位空集装箱，平衡全球空集装箱分布。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/cim.container_flow.svg\"></p>\n<ul>\n<li><h5 id=\"对上面这个流程图的解释\"><a href=\"#对上面这个流程图的解释\" class=\"headerlink\" title=\"对上面这个流程图的解释\"></a>对上面这个流程图的解释</h5><ul>\n<li>托运人（shipper）生成订单（send order）后，相应源端口（source port）的空容器将被释放（release empty）给托运人（shipper）</li>\n<li>托运人（shipper）将用货物装满集装箱，将其变成满载货物，然后在将满载货物的集装箱运回到（return laden）源港口（source port）</li>\n<li>船（vessel）到港口（source port）之后被装载满载货物的集装箱（load laden）</li>\n<li>船航行到进口港（source port），卸货（discharge laden）</li>\n<li>满载货物将被释放（release laden）给收货人（consignee），收货人将取出其中的货物，集装箱再次变空返回港口（return empty）</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h5 id=\"这个时候我们发现，整个过程我们还有五个部分没有提到，分别是-agent-，operate-empty-，load-x2F-discharge-empty\"><a href=\"#这个时候我们发现，整个过程我们还有五个部分没有提到，分别是-agent-，operate-empty-，load-x2F-discharge-empty\" class=\"headerlink\" title=\"这个时候我们发现，整个过程我们还有五个部分没有提到，分别是 agent ，operate empty ，load&#x2F;discharge empty\"></a>这个时候我们发现，整个过程我们还有五个部分没有提到，分别是 agent ，operate empty ，load&#x2F;discharge empty</h5><ul>\n<li>为了为了重新平衡集装箱分布，每个港口（port）的代理商（agent）将决定每次船舶（vessel）到达港口时如何重新分配（repostioning）空集装箱<ul>\n<li>船只（vessel）到达港口时，是往船上装载空集装箱（load empty），还是消费船上原有的空集装箱（discharge empty）</li>\n<li>分配 load&#x2F;discharge empty 的数量</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h5 id=\"MARO-就是帮助-agent-调整-load-x2F-discharge-empty-的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\"><a href=\"#MARO-就是帮助-agent-调整-load-x2F-discharge-empty-的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\" class=\"headerlink\" title=\"MARO 就是帮助 agent 调整 load&#x2F;discharge empty 的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况\"></a>MARO 就是帮助 agent 调整 load&#x2F;discharge empty 的数量，决策目标不仅要考虑自身未来的供需情况，还要考虑上下游港口的需求和情况</h5><ul>\n<li>出口导向型港口（例如中国的港口）显示出明显的高需求特征，通常需要额外的空集装箱供应，这些港口将倾向于从船上卸载空集装箱</li>\n<li>虽然以进口为导向的港口具有显著的盈余特征，但通常从收货人那里收到许多空集装箱，因此，如果存在空闲容量，面向进口的港口将倾向于将多余的空集装箱装入船舶</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h4 id=\"简单拓扑结构\"><a href=\"#简单拓扑结构\" class=\"headerlink\" title=\"简单拓扑结构\"></a>简单拓扑结构</h4><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/cim.toys.svg\"></li>\n<li><h5 id=\"这里要特别注意上面这个图里面，这里的-S-和-D-并不是-source-和-destination，而是-empty-containers-的-supplier-和-demander，这里-order-也并不是货物订单，而是-empty-containers-的订单\"><a href=\"#这里要特别注意上面这个图里面，这里的-S-和-D-并不是-source-和-destination，而是-empty-containers-的-supplier-和-demander，这里-order-也并不是货物订单，而是-empty-containers-的订单\" class=\"headerlink\" title=\"这里要特别注意上面这个图里面，这里的 S 和 D 并不是 source 和 destination，而是 empty containers 的 supplier 和 demander，这里 order 也并不是货物订单，而是 empty containers 的订单\"></a>这里要特别注意上面这个图里面，这里的 S 和 D 并不是 source 和 destination，而是 empty containers 的 supplier 和 demander，这里 order 也并不是货物订单，而是 empty containers 的订单</h5></li>\n<li><h5 id=\"上图实线表示货物流向，虚线表示订单流向，S-与-D-由订单（Order）决定，订单发起方为-D，订单收到方为-S\"><a href=\"#上图实线表示货物流向，虚线表示订单流向，S-与-D-由订单（Order）决定，订单发起方为-D，订单收到方为-S\" class=\"headerlink\" title=\"上图实线表示货物流向，虚线表示订单流向，S 与 D 由订单（Order）决定，订单发起方为 D，订单收到方为 S\"></a>上图实线表示货物流向，虚线表示订单流向，S 与 D 由订单（Order）决定，订单发起方为 D，订单收到方为 S</h5><ul>\n<li><strong>拓扑（1）</strong> 有四个 port ，D1 和 D2 是简单的需求者（需要额外 empty container 的端口），而 S2 是简单的供应商（具有剩余空容器的端口），尽管 S1 是一个简单的目标端口，但它位于两个服务路由的交点，这使其成为此拓扑中的特殊端口，为了实现全局最优，S1 必须学会区分服务路由并执行特定于服务路由的重新定位操作</li>\n<li><strong>拓扑（2）</strong> 中有五个端口，根据订单，D1 和 D2 是简单的需求者，而 S1 和 S2 是简单的供应商，作为服务航线交汇处的港口，T1港口虽然可以达到自平衡状态，但仍对全局最优起着重要作用，T1 的最佳重新定位策略是将多余的空容器从左侧服务路由转移到右侧服务路由，此外，D1 和 D2 应该学会只卸载它们需要的 empty 数量，并将多余的 empty 留给其他端口</li>\n<li><strong>拓扑（3）</strong> 中有六个端口，简单的需求者 D1 和 D2 ，简单的供应商 S1 和 S2 ，以及自平衡端口 T1 和 T2 ，比拓扑（2）更困难的是，应该采取更多的转移来将多余的空集装箱从最左边的服务路线重新定位到最右边的航线，这意味着需要一个涉及更多港口的多步骤解决方案</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/cim.global_trade.svg\"></p>\n<ul>\n<li>这是基于真实世界数据设计的拓扑,大多数港口不再具有简单的供需功能。港口之间的合作要复杂得多，很难手动找到有效的重新定位策略</li>\n</ul>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><h4 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h4></li>\n<li><h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pymaro</span><br></pre></td></tr></table></figure></li>\n<li><h5 id=\"MARO-算法有两个关键步骤\"><a href=\"#MARO-算法有两个关键步骤\" class=\"headerlink\" title=\"MARO 算法有两个关键步骤\"></a>MARO 算法有两个关键步骤</h5></li>\n<li><h6 id=\"算法决策事件-DecisionEventDecisionEvent\"><a href=\"#算法决策事件-DecisionEventDecisionEvent\" class=\"headerlink\" title=\"算法决策事件 DecisionEventDecisionEvent\"></a>算法决策事件 DecisionEventDecisionEvent</h6><ul>\n<li>tick (int)：相应的刻度</li>\n<li>port_idx（int）：需要响应环境的端口&#x2F;代理的 ID</li>\n<li>vessel_idx（int）：港口&#x2F;代理人的船舶&#x2F;操作对象的 ID</li>\n<li>action_scope（操作范围）：操作范围有两个属性，load表示可以从船舶港口装载的最大数量，discharge表示从船舶到港口可以卸货的最大数量</li>\n<li>early_discharge（int）：当船上的可用容量不足以装载满载物时，船上的一些空容器将被提前卸货以释放空间，由于满载而提前卸货的空容器数量记录在该字段中</li>\n</ul>\n</li>\n<li><h6 id=\"行动-Action\"><a href=\"#行动-Action\" class=\"headerlink\" title=\"行动 Action\"></a>行动 Action</h6><ul>\n<li>none，这意味着什么都不做</li>\n<li>a valid instance，有效实例：</li>\n<li>vessel_idx（int）：港口&#x2F;代理人的船舶&#x2F;操作对象的 ID</li>\n<li>port_idx（int）：执行此操作的端口&#x2F;代理的 ID</li>\n<li>action_type（操作类型）：在此操作中是装载还是卸载空容器</li>\n<li>数量（int）：要装载&#x2F;卸载的空容器的（非负）数量</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><p><img src=\"/pictures/%E5%88%9D%E8%AF%86MARO/maro_overview.svg\"></p>\n<ul>\n<li><h4 id=\"上图是-MARO-框架图\"><a href=\"#上图是-MARO-框架图\" class=\"headerlink\" title=\"上图是 MARO 框架图\"></a>上图是 MARO 框架图</h4><ul>\n<li>Simulation toolkit：它提供了一些预定义的场景，以及用于构建新场景的可重用轮子</li>\n<li>RL toolkit：它为 RL 提供了全栈抽象，例如代理管理器、代理、RL 算法、学习器、参与者和各种塑造者</li>\n<li>Distributed toolkit：提供分布式通信组件、消息自动处理、集群配置、作业编排等用户定义功能的接口</li>\n</ul>\n</li>\n</ul>\n"},{"title":"MARO VM 调度","date":"2022-10-27T03:01:57.000Z","_content":"### 背景\n- 在云服务期间，用户请求具有一定数量资源的 **虚拟机（VM）（Virtual Mechine）**，例如中央处理器、内存等\n- 假设一个特定的时间，VM 请求的数量和到达模式是固定的，给定一个物理资源有限的 **物理机（PM）（Physical Mechine）** 集群\n- 不同的 VM 分配策略导致数据中心的成功完成量不同，运营成本也不同\n- 对于云提供商，一个好的 VM 分配策略可以最大限度地提高资源利用率，从而可以通过向用户提供更多的 VM 来增加利润\n- 对于云用户，良好的 VM 分配策略可以最大程度地缩短 VM 响应时间，并提供更好的使用体验\n\n###### \n\n### 资源供需\n<img src=\"/pictures/maro-vm-调度/2022.10.27.20.00.43.png\"/>\n\n- 每个 **PM** 中的物理资源是中心资源，包括 **物理内核** 和 **内存**\n\t\n\t- VM 请求需要一定数量的 **物理资源** ，资源要求因不同的 VM 请求而异 \n\t- 只要指定的 PM 的剩余资源足够，**模拟器** 就会将 VM 分配到指定 PM ，VM 会在指定 PM 中创建 \n\t- VM 的资源利用率动态变化，PM 的实时能耗将在 **Runtime-Simulation（模拟器）** 中被模拟出来\n\t- VM 执行一段时间后完成其任务，**模拟器** 将释放分配给此 VM 的资源，并从 PM 中解除分配此 VM ，物理资源被释放，可以处理下一个 VM 请求 \n\n<img src=\"/pictures/maro-vm-调度/2022.10.28.15.14.52.png\"/>\n\n\n###### \n\n### VM Request\n\n- MARO 和机器学习算法原理类似，需要 **样本数据** 训练出 **模型（找出当前场景的规律）**，再通过模型去 **预测** 怎样的行为更加正确符合实际\n- VM scheduling 场景里面，**样本数据** 是 VM Request**s** ，样本数据从实际工作负荷中统一采样\n- 只要原始数据集足够大，采样率不太小，采样的 VM Requests**（复数名词）** 就可以被认为遵循与原始请求类似的分布\n- 一个 VM Request 包含 **VM 信息**（如 订阅 ID、部署 ID 和 VM 类别）、**VM 的所需资源**（包括所需的 CPU 核心数和内存）以及 **剩余缓冲时间（remaining buffer time）**\n\n###### \n\n### VM 类型\n- 交互式\n\n\t- 交互式 VM 通常需要较低的响应时间，因此设置此类 VM 只能分配给不可超额订阅的 PM 服务器  \n###### \n- 延迟不敏感\n\n\t- 不区分延迟的 VM 通常用于批处理任务或开发工作负荷，可以将此类 VM 分配给可过度订阅的 PM 服务器\n\n###### \n\n### VM 分配\n\n- 根据 **有效的 PM 列表** ，**模拟器记录的历史信息** 以及 **VM 的详细所需资源** ，**VM 调度器（决策代理）** 将根据其分配策略做出决策\n- 两种有意义的操作\n\n\t- 将 **有效的 PM ID** 传送到模拟器\n\t- 推迟如果 **剩余缓冲区时间** 足够，则可以稍后将处理的 VM Request\n\t\n###### \n\n### Oversubscription 超额订阅\n\n- 考虑到各种服务级别，将物理机分为可超额订阅和非超额订阅的\n- 所谓超额，就比如 10 个 VM 实际上只使用 7 个 PM （就是厂商为了省钱）\n- 对于超额订阅，可以在 **config.yml** 中设置参数\n- 在此场景，有两个资源可能被超额订阅，CPU 和 内存，因可以设置这两个的最大超额订阅率\n\n\t- **MAX_CPU_OVERSUBSCRIPTION_RATE** ，CPU 的超额订阅率，默认设置为 1.15 ，意味着每个 PM 最多可以分配其资源容量的 1.15 倍 \n\t\n\t- **MAX_MEM_OVERSUBSCRIPTION_RATE** ，内存的超额订阅率，与 CPU 的类似\n\n- 为了保护 PM 免受过载的影响，需要考虑 CPU 利用率 ，MAX_UTILIZATION_RATE 被用作安全机制\n\n\t- **MAX_UTILIZATION_RATE** ，默认设置为 1，这意味着在筛选有效 PM 时，允许的最大物理 CPU 使用率为 100% \n\n###### \n\n### Runtime Simulation\n\n- #### 动态利用率\n\n\t- 为了使模拟环境最接近真实情况，MARO 模拟每个 VM 的资源利用率（当前仅为 CPU 利用率）\n\t- **模拟的** VM CPU 利用率根据**实际的** VM 工作负载读数而变化\n\t- MARO 还将根据每个 PM 中的**实时** VM 定期更新**实时**资源利用率\n\t\n- #### 实时能耗\n\n\t- 不同的 VM 分配会导致 PM 集群的能耗不同，MARO 还根据 CPU 利用率模拟（计算）能耗\n\t\t\n\t\t- 能耗曲线\n\t\t\t\n\t\t\t- 这个非线性曲线反映了 CPU 利用率 与 能耗 的关系，用于模拟（计算）能耗\n\t<img src=\"/pictures/maro-vm-调度/vm.energy_curve.svg\"/>\n\n###### \n\n### Overload\n\n- 由于 VM 的 CPU 使用率随时间而变化，因此在启用超额订阅时，VM 的 CPU 使用率之和可能会超过物理资源的容量，这种情况称为过载\n\t\n\t- 目前对于过载的情况，MARO 只支持**静默（杀死）所有虚拟机** 或 **仅记录过载时间**，在 config.yml 里面设置\n\t\n\t\t- **KILL_ALL_VMS_IF_OVERLOAD** \n\n\t\t\t- 如果启用此操作，则一旦发生重载，将解除分配位于重载 PM 的**所有** VM\n\t\t\t- 考虑到过载的影响，MARO 仍然会计算高利用率的能耗，静默行动对 PM 利用率的影响将反映在下一次 tick 中 \n\n###### \n- 无论是否启用终止所有 VM，过载 PM 的数量和过载 VM 的数量都会被计算\n- 这两个指标是累积值，将被记录为环境指标\n\n###### \n\n### VM 解除分配\n\n- MARO 模拟器会定期检查每次 tick 中完成任务的虚拟机\n- 完成的 VM 意味着它经历了一个完整的生命周期，已准备好终止，它所占用的资源最终将再次可用\n- 然后，模拟器将释放已完成的 VM 的资源，并最终从 PM 中删除 VM\n\n###### \n\n### Quick Start\n\n- 准备两个 csv 文件 vm_table 和 cpu_readings_file\n\t\n\t- vm_table\n\t\t\n\t\t- **vm_id**:       int, 每个 vm 的id\n\t\t- **sub_id**:      int, subscription id（每个 vm 的订阅 id）\n\t\t- **deploy_id**:   int, 每个 vm 的部署 id\n\t\t- **timestamp**:   int, 每个 vm 的创建时间\n\t\t- **vm_deleted**:  int. 每个 vm 的删除时间\n\t\t- **vm_lifetime**: int, 每个 vm 的生存时间，Lifetime = deletion time - creation time (timestamp) + 1\n\t\t- **vm_category**: int, 目前有三种类型\n\t\t\t\n\t\t\t- Delay-Insensitive\n\t\t\t\n\t\t\t\t- 可能延迟的 VM 工作负荷，例如批处理任务或测试工作负荷\n\t\t\t\t- 可以将此类 VM 分配给可过度订阅的 PM \n\n\t\t\t- Interactive\n\n\t\t\t\t- 交互式 VM 工作负荷，需要用户及时响应\n\t\t\t\t- 此类 VM 只能分配给不可超额订阅的 PM \n\n\t\t\t- Unknown\n\t\t\t\t\n\t\t\t\t- 未知类型\n\t\t\t\t- 为避免过载，此类 VM 被视为交互式 VM，只能分配给不可超额订阅的 PM\n\t\n\t- cpu_readings_file \n\t\t\n\t\t- **timestamp**:   int, 与 vm_table 中的 timestamp 匹配\n\t\t- **vm_id**: int, 与 vm_table 中的 vm_id 匹配\n\t\t- **cpu_utilization**: float, VM CPU 的利用率，以百分比单位 （%）存储\n\n\n###### \n\n### 构建命令\n\n- 将 CSV 数据集构建为 MARO 模拟器可以使用的二进制文件\n\n\t```\n\t# maro data build --meta $PATH_TO_META_FILE --file $PATH_TO_CSV_FILE  --output $PATH_TO_OUTPUT_FILE\n\tmaro data build --meta ~/.maro/data/vm_scheduling/meta/vmtable.yml  --file ~/.maro/data/vm_scheduling/.build/azure.2019.10k/vmtable.bin --output $PWD/vmtable.bin\n\t```\n\t- --meta：必需，用于指定 meta file 的路径。默认情况下，meta file 位于\n\t\n\t\t```\n\t\t~/.maro/data/vm_scheduling/meta/\n\t\t```\n\t- --file：必需，用于指定源 CSV 数据文件的路径，如果需要多个源 CSV 数据文件，则可以在特定文件中列出源文件的所有完整路径，并使用 @ 符号指定这个特定文件\n\t- --output：必需，用于指定目标二进制文件的路径 \n\n- 生成二进制文件之后，在 topologies 目录下的 config.yml 中指定 VM_TABLE 和 CPU_READINGS 的直接路径\n\n###### \n\n### Environment Interface\n\n- #### DecisionPayload\n\t\n\t- 一旦环境需要代理的响应来促进模拟，它就会抛出一个带有 DecisionPayload 的 PendingDecision 事件\n\t- DecisionPayload 包含以下信息\n\t\t\n\t\t- **valid_pms (List[int])** ：被视为有效的 PM ID 列表（其 CPU 和内存资源足以满足传入的 VM 请求） \n\t\t- **vm_id (int)** ：传入的 VM Request（正在等待分配的 VM Request）的 vm_id ，\n\t\t- **vm_cpu_cores_requirement (int)** ：传入的 VM Request 的 CPU 内核数量\n\t\t- **vm_memory_requirement (int)** ：传入的 VM Request 请求的内存资源大小\n\t\t- **remaining_buffer_time（int）** ：当使用 remaining_buffer_time 时，VM Request 将被视为失败，可以在 config.yml 里面设置\n\n- #### Action\n\t\n\t- 从环境中获取 PendingDecisionAction 事件后，代理应使用 Action 进行响应，以下是有效的 Action\n\t\t\n\t\t- **None**：除了忽略此 VM Request 之外什么都不执行\n\t\t- **AllocateAction**：VM 的创建时间将固定在它收到这个 Request 的 tick 处，模拟器将更新目标 PM 的工作负载（CPU 核心数量，内存和能耗），这个 Action 包括:\n\t\t\t\n\t\t\t- **vm_id(int)**：等待分配资源的 VM 的 ID\n\t\t\t- **pm_id(int)**：计划将 VM 分配到的 PM 的 ID\n\t\t\n\t\t- **PostponeAction**：计算 remaining buffer time，这个 Action 包括：\n\t\t\t\n\t\t\t- **vm_id (int)** ：等待分配的 VM 的 ID\n\t\t\t- **postpone_step（int）**：分配要推迟的次数，单位是 DELAY_DURATION ，1 表示延迟 1 DELAY_DURATION ，可以在 config.yml 中设置\n\t\t\t- 如果时间仍然足够，模拟器将重新生成一个新的请求事件，新需求事件的 仅在剩余缓冲时间上与旧事件不同\n\t\t\t- 如果时间用完，模拟器会将其记录为失败的分配\n\t\t\t \n###### \n\n### Example\n\n```\nimport random\n\nfrom maro.simulator import Env\nfrom maro.simulator.scenarios.vm_scheduling import AllocateAction, DecisionPayload, PostponeAction\n\n# Initialize an Env for vm_scheduling scenario\n# 初始化环境\nenv = Env(\n  scenario=\"vm_scheduling\",     \n  topology=\"azure.2019.10k\",    \n  start_tick=0,                \n  durations=8638,              \n  snapshot_resolution=1\n)\n\n# 初始化变量，声明类型，\":\"用于声明类型\nmetrics: object = None\ndecision_event: DecisionPayload = None\nis_done: bool = False\naction: AllocateAction = None\n\n# Start the env with a None Action\n# 开始模拟\nmetrics, decision_event, is_done = env.step(None)\n\nwhile not is_done:\n    valid_pm_num: int = len(decision_event.valid_pms)\n\t# 作出决策\n    if valid_pm_num <= 0:\n        # No valid PM now, postpone.\n\t\t# 没有可用的 PM ，推迟分配\n        action: PostponeAction = PostponeAction(\n            vm_id=decision_event.vm_id,\n            postpone_step=1\n        )\n    else:\n        # Randomly choose an available PM.\n\t\t# 有可用的 PM ，随机选一个 PM 与 VM 绑定\n        random_idx = random.randint(0, valid_pm_num - 1)\n        pm_id = decision_event.valid_pms[random_idx]\n        action: AllocateAction = AllocateAction(\n            vm_id=decision_event.vm_id,\n            pm_id=pm_id\n        )\n\t\n\t# 采取行动\n    metrics, decision_event, is_done = env.step(action)\n\nprint(f\"[Random] Topology: azure.2019.10k. Total ticks: 8638. Start tick: 0\")\nprint(metrics)\n```\n","source":"_posts/MARO-VM-调度.md","raw":"---\ntitle: MARO VM 调度\ndate: 2022-10-27 11:01:57\ntags:\n\t- MARO\n---\n### 背景\n- 在云服务期间，用户请求具有一定数量资源的 **虚拟机（VM）（Virtual Mechine）**，例如中央处理器、内存等\n- 假设一个特定的时间，VM 请求的数量和到达模式是固定的，给定一个物理资源有限的 **物理机（PM）（Physical Mechine）** 集群\n- 不同的 VM 分配策略导致数据中心的成功完成量不同，运营成本也不同\n- 对于云提供商，一个好的 VM 分配策略可以最大限度地提高资源利用率，从而可以通过向用户提供更多的 VM 来增加利润\n- 对于云用户，良好的 VM 分配策略可以最大程度地缩短 VM 响应时间，并提供更好的使用体验\n\n###### \n\n### 资源供需\n<img src=\"/pictures/maro-vm-调度/2022.10.27.20.00.43.png\"/>\n\n- 每个 **PM** 中的物理资源是中心资源，包括 **物理内核** 和 **内存**\n\t\n\t- VM 请求需要一定数量的 **物理资源** ，资源要求因不同的 VM 请求而异 \n\t- 只要指定的 PM 的剩余资源足够，**模拟器** 就会将 VM 分配到指定 PM ，VM 会在指定 PM 中创建 \n\t- VM 的资源利用率动态变化，PM 的实时能耗将在 **Runtime-Simulation（模拟器）** 中被模拟出来\n\t- VM 执行一段时间后完成其任务，**模拟器** 将释放分配给此 VM 的资源，并从 PM 中解除分配此 VM ，物理资源被释放，可以处理下一个 VM 请求 \n\n<img src=\"/pictures/maro-vm-调度/2022.10.28.15.14.52.png\"/>\n\n\n###### \n\n### VM Request\n\n- MARO 和机器学习算法原理类似，需要 **样本数据** 训练出 **模型（找出当前场景的规律）**，再通过模型去 **预测** 怎样的行为更加正确符合实际\n- VM scheduling 场景里面，**样本数据** 是 VM Request**s** ，样本数据从实际工作负荷中统一采样\n- 只要原始数据集足够大，采样率不太小，采样的 VM Requests**（复数名词）** 就可以被认为遵循与原始请求类似的分布\n- 一个 VM Request 包含 **VM 信息**（如 订阅 ID、部署 ID 和 VM 类别）、**VM 的所需资源**（包括所需的 CPU 核心数和内存）以及 **剩余缓冲时间（remaining buffer time）**\n\n###### \n\n### VM 类型\n- 交互式\n\n\t- 交互式 VM 通常需要较低的响应时间，因此设置此类 VM 只能分配给不可超额订阅的 PM 服务器  \n###### \n- 延迟不敏感\n\n\t- 不区分延迟的 VM 通常用于批处理任务或开发工作负荷，可以将此类 VM 分配给可过度订阅的 PM 服务器\n\n###### \n\n### VM 分配\n\n- 根据 **有效的 PM 列表** ，**模拟器记录的历史信息** 以及 **VM 的详细所需资源** ，**VM 调度器（决策代理）** 将根据其分配策略做出决策\n- 两种有意义的操作\n\n\t- 将 **有效的 PM ID** 传送到模拟器\n\t- 推迟如果 **剩余缓冲区时间** 足够，则可以稍后将处理的 VM Request\n\t\n###### \n\n### Oversubscription 超额订阅\n\n- 考虑到各种服务级别，将物理机分为可超额订阅和非超额订阅的\n- 所谓超额，就比如 10 个 VM 实际上只使用 7 个 PM （就是厂商为了省钱）\n- 对于超额订阅，可以在 **config.yml** 中设置参数\n- 在此场景，有两个资源可能被超额订阅，CPU 和 内存，因可以设置这两个的最大超额订阅率\n\n\t- **MAX_CPU_OVERSUBSCRIPTION_RATE** ，CPU 的超额订阅率，默认设置为 1.15 ，意味着每个 PM 最多可以分配其资源容量的 1.15 倍 \n\t\n\t- **MAX_MEM_OVERSUBSCRIPTION_RATE** ，内存的超额订阅率，与 CPU 的类似\n\n- 为了保护 PM 免受过载的影响，需要考虑 CPU 利用率 ，MAX_UTILIZATION_RATE 被用作安全机制\n\n\t- **MAX_UTILIZATION_RATE** ，默认设置为 1，这意味着在筛选有效 PM 时，允许的最大物理 CPU 使用率为 100% \n\n###### \n\n### Runtime Simulation\n\n- #### 动态利用率\n\n\t- 为了使模拟环境最接近真实情况，MARO 模拟每个 VM 的资源利用率（当前仅为 CPU 利用率）\n\t- **模拟的** VM CPU 利用率根据**实际的** VM 工作负载读数而变化\n\t- MARO 还将根据每个 PM 中的**实时** VM 定期更新**实时**资源利用率\n\t\n- #### 实时能耗\n\n\t- 不同的 VM 分配会导致 PM 集群的能耗不同，MARO 还根据 CPU 利用率模拟（计算）能耗\n\t\t\n\t\t- 能耗曲线\n\t\t\t\n\t\t\t- 这个非线性曲线反映了 CPU 利用率 与 能耗 的关系，用于模拟（计算）能耗\n\t<img src=\"/pictures/maro-vm-调度/vm.energy_curve.svg\"/>\n\n###### \n\n### Overload\n\n- 由于 VM 的 CPU 使用率随时间而变化，因此在启用超额订阅时，VM 的 CPU 使用率之和可能会超过物理资源的容量，这种情况称为过载\n\t\n\t- 目前对于过载的情况，MARO 只支持**静默（杀死）所有虚拟机** 或 **仅记录过载时间**，在 config.yml 里面设置\n\t\n\t\t- **KILL_ALL_VMS_IF_OVERLOAD** \n\n\t\t\t- 如果启用此操作，则一旦发生重载，将解除分配位于重载 PM 的**所有** VM\n\t\t\t- 考虑到过载的影响，MARO 仍然会计算高利用率的能耗，静默行动对 PM 利用率的影响将反映在下一次 tick 中 \n\n###### \n- 无论是否启用终止所有 VM，过载 PM 的数量和过载 VM 的数量都会被计算\n- 这两个指标是累积值，将被记录为环境指标\n\n###### \n\n### VM 解除分配\n\n- MARO 模拟器会定期检查每次 tick 中完成任务的虚拟机\n- 完成的 VM 意味着它经历了一个完整的生命周期，已准备好终止，它所占用的资源最终将再次可用\n- 然后，模拟器将释放已完成的 VM 的资源，并最终从 PM 中删除 VM\n\n###### \n\n### Quick Start\n\n- 准备两个 csv 文件 vm_table 和 cpu_readings_file\n\t\n\t- vm_table\n\t\t\n\t\t- **vm_id**:       int, 每个 vm 的id\n\t\t- **sub_id**:      int, subscription id（每个 vm 的订阅 id）\n\t\t- **deploy_id**:   int, 每个 vm 的部署 id\n\t\t- **timestamp**:   int, 每个 vm 的创建时间\n\t\t- **vm_deleted**:  int. 每个 vm 的删除时间\n\t\t- **vm_lifetime**: int, 每个 vm 的生存时间，Lifetime = deletion time - creation time (timestamp) + 1\n\t\t- **vm_category**: int, 目前有三种类型\n\t\t\t\n\t\t\t- Delay-Insensitive\n\t\t\t\n\t\t\t\t- 可能延迟的 VM 工作负荷，例如批处理任务或测试工作负荷\n\t\t\t\t- 可以将此类 VM 分配给可过度订阅的 PM \n\n\t\t\t- Interactive\n\n\t\t\t\t- 交互式 VM 工作负荷，需要用户及时响应\n\t\t\t\t- 此类 VM 只能分配给不可超额订阅的 PM \n\n\t\t\t- Unknown\n\t\t\t\t\n\t\t\t\t- 未知类型\n\t\t\t\t- 为避免过载，此类 VM 被视为交互式 VM，只能分配给不可超额订阅的 PM\n\t\n\t- cpu_readings_file \n\t\t\n\t\t- **timestamp**:   int, 与 vm_table 中的 timestamp 匹配\n\t\t- **vm_id**: int, 与 vm_table 中的 vm_id 匹配\n\t\t- **cpu_utilization**: float, VM CPU 的利用率，以百分比单位 （%）存储\n\n\n###### \n\n### 构建命令\n\n- 将 CSV 数据集构建为 MARO 模拟器可以使用的二进制文件\n\n\t```\n\t# maro data build --meta $PATH_TO_META_FILE --file $PATH_TO_CSV_FILE  --output $PATH_TO_OUTPUT_FILE\n\tmaro data build --meta ~/.maro/data/vm_scheduling/meta/vmtable.yml  --file ~/.maro/data/vm_scheduling/.build/azure.2019.10k/vmtable.bin --output $PWD/vmtable.bin\n\t```\n\t- --meta：必需，用于指定 meta file 的路径。默认情况下，meta file 位于\n\t\n\t\t```\n\t\t~/.maro/data/vm_scheduling/meta/\n\t\t```\n\t- --file：必需，用于指定源 CSV 数据文件的路径，如果需要多个源 CSV 数据文件，则可以在特定文件中列出源文件的所有完整路径，并使用 @ 符号指定这个特定文件\n\t- --output：必需，用于指定目标二进制文件的路径 \n\n- 生成二进制文件之后，在 topologies 目录下的 config.yml 中指定 VM_TABLE 和 CPU_READINGS 的直接路径\n\n###### \n\n### Environment Interface\n\n- #### DecisionPayload\n\t\n\t- 一旦环境需要代理的响应来促进模拟，它就会抛出一个带有 DecisionPayload 的 PendingDecision 事件\n\t- DecisionPayload 包含以下信息\n\t\t\n\t\t- **valid_pms (List[int])** ：被视为有效的 PM ID 列表（其 CPU 和内存资源足以满足传入的 VM 请求） \n\t\t- **vm_id (int)** ：传入的 VM Request（正在等待分配的 VM Request）的 vm_id ，\n\t\t- **vm_cpu_cores_requirement (int)** ：传入的 VM Request 的 CPU 内核数量\n\t\t- **vm_memory_requirement (int)** ：传入的 VM Request 请求的内存资源大小\n\t\t- **remaining_buffer_time（int）** ：当使用 remaining_buffer_time 时，VM Request 将被视为失败，可以在 config.yml 里面设置\n\n- #### Action\n\t\n\t- 从环境中获取 PendingDecisionAction 事件后，代理应使用 Action 进行响应，以下是有效的 Action\n\t\t\n\t\t- **None**：除了忽略此 VM Request 之外什么都不执行\n\t\t- **AllocateAction**：VM 的创建时间将固定在它收到这个 Request 的 tick 处，模拟器将更新目标 PM 的工作负载（CPU 核心数量，内存和能耗），这个 Action 包括:\n\t\t\t\n\t\t\t- **vm_id(int)**：等待分配资源的 VM 的 ID\n\t\t\t- **pm_id(int)**：计划将 VM 分配到的 PM 的 ID\n\t\t\n\t\t- **PostponeAction**：计算 remaining buffer time，这个 Action 包括：\n\t\t\t\n\t\t\t- **vm_id (int)** ：等待分配的 VM 的 ID\n\t\t\t- **postpone_step（int）**：分配要推迟的次数，单位是 DELAY_DURATION ，1 表示延迟 1 DELAY_DURATION ，可以在 config.yml 中设置\n\t\t\t- 如果时间仍然足够，模拟器将重新生成一个新的请求事件，新需求事件的 仅在剩余缓冲时间上与旧事件不同\n\t\t\t- 如果时间用完，模拟器会将其记录为失败的分配\n\t\t\t \n###### \n\n### Example\n\n```\nimport random\n\nfrom maro.simulator import Env\nfrom maro.simulator.scenarios.vm_scheduling import AllocateAction, DecisionPayload, PostponeAction\n\n# Initialize an Env for vm_scheduling scenario\n# 初始化环境\nenv = Env(\n  scenario=\"vm_scheduling\",     \n  topology=\"azure.2019.10k\",    \n  start_tick=0,                \n  durations=8638,              \n  snapshot_resolution=1\n)\n\n# 初始化变量，声明类型，\":\"用于声明类型\nmetrics: object = None\ndecision_event: DecisionPayload = None\nis_done: bool = False\naction: AllocateAction = None\n\n# Start the env with a None Action\n# 开始模拟\nmetrics, decision_event, is_done = env.step(None)\n\nwhile not is_done:\n    valid_pm_num: int = len(decision_event.valid_pms)\n\t# 作出决策\n    if valid_pm_num <= 0:\n        # No valid PM now, postpone.\n\t\t# 没有可用的 PM ，推迟分配\n        action: PostponeAction = PostponeAction(\n            vm_id=decision_event.vm_id,\n            postpone_step=1\n        )\n    else:\n        # Randomly choose an available PM.\n\t\t# 有可用的 PM ，随机选一个 PM 与 VM 绑定\n        random_idx = random.randint(0, valid_pm_num - 1)\n        pm_id = decision_event.valid_pms[random_idx]\n        action: AllocateAction = AllocateAction(\n            vm_id=decision_event.vm_id,\n            pm_id=pm_id\n        )\n\t\n\t# 采取行动\n    metrics, decision_event, is_done = env.step(action)\n\nprint(f\"[Random] Topology: azure.2019.10k. Total ticks: 8638. Start tick: 0\")\nprint(metrics)\n```\n","slug":"MARO-VM-调度","published":1,"updated":"2022-10-28T10:19:07.630Z","_id":"cl9qtda0m0000i9i53d0a2zl8","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><ul>\n<li>在云服务期间，用户请求具有一定数量资源的 <strong>虚拟机（VM）（Virtual Mechine）</strong>，例如中央处理器、内存等</li>\n<li>假设一个特定的时间，VM 请求的数量和到达模式是固定的，给定一个物理资源有限的 <strong>物理机（PM）（Physical Mechine）</strong> 集群</li>\n<li>不同的 VM 分配策略导致数据中心的成功完成量不同，运营成本也不同</li>\n<li>对于云提供商，一个好的 VM 分配策略可以最大限度地提高资源利用率，从而可以通过向用户提供更多的 VM 来增加利润</li>\n<li>对于云用户，良好的 VM 分配策略可以最大程度地缩短 VM 响应时间，并提供更好的使用体验</li>\n</ul>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"资源供需\"><a href=\"#资源供需\" class=\"headerlink\" title=\"资源供需\"></a>资源供需</h3><img src=\"/pictures/maro-vm-调度/2022.10.27.20.00.43.png\"/>\n\n<ul>\n<li><p>每个 <strong>PM</strong> 中的物理资源是中心资源，包括 <strong>物理内核</strong> 和 <strong>内存</strong></p>\n<ul>\n<li>VM 请求需要一定数量的 <strong>物理资源</strong> ，资源要求因不同的 VM 请求而异 </li>\n<li>只要指定的 PM 的剩余资源足够，<strong>模拟器</strong> 就会将 VM 分配到指定 PM ，VM 会在指定 PM 中创建 </li>\n<li>VM 的资源利用率动态变化，PM 的实时能耗将在 <strong>Runtime-Simulation（模拟器）</strong> 中被模拟出来</li>\n<li>VM 执行一段时间后完成其任务，<strong>模拟器</strong> 将释放分配给此 VM 的资源，并从 PM 中解除分配此 VM ，物理资源被释放，可以处理下一个 VM 请求</li>\n</ul>\n</li>\n</ul>\n<img src=\"/pictures/maro-vm-调度/2022.10.28.15.14.52.png\"/>\n\n\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-Request\"><a href=\"#VM-Request\" class=\"headerlink\" title=\"VM Request\"></a>VM Request</h3><ul>\n<li>MARO 和机器学习算法原理类似，需要 <strong>样本数据</strong> 训练出 <strong>模型（找出当前场景的规律）</strong>，再通过模型去 <strong>预测</strong> 怎样的行为更加正确符合实际</li>\n<li>VM scheduling 场景里面，<strong>样本数据</strong> 是 VM Request<strong>s</strong> ，样本数据从实际工作负荷中统一采样</li>\n<li>只要原始数据集足够大，采样率不太小，采样的 VM Requests<strong>（复数名词）</strong> 就可以被认为遵循与原始请求类似的分布</li>\n<li>一个 VM Request 包含 <strong>VM 信息</strong>（如 订阅 ID、部署 ID 和 VM 类别）、<strong>VM 的所需资源</strong>（包括所需的 CPU 核心数和内存）以及 <strong>剩余缓冲时间（remaining buffer time）</strong></li>\n</ul>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-类型\"><a href=\"#VM-类型\" class=\"headerlink\" title=\"VM 类型\"></a>VM 类型</h3><ul>\n<li><p>交互式</p>\n<ul>\n<li>交互式 VM 通常需要较低的响应时间，因此设置此类 VM 只能分配给不可超额订阅的 PM 服务器</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><p>延迟不敏感</p>\n<ul>\n<li>不区分延迟的 VM 通常用于批处理任务或开发工作负荷，可以将此类 VM 分配给可过度订阅的 PM 服务器</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-分配\"><a href=\"#VM-分配\" class=\"headerlink\" title=\"VM 分配\"></a>VM 分配</h3><ul>\n<li><p>根据 <strong>有效的 PM 列表</strong> ，<strong>模拟器记录的历史信息</strong> 以及 <strong>VM 的详细所需资源</strong> ，<strong>VM 调度器（决策代理）</strong> 将根据其分配策略做出决策</p>\n</li>\n<li><p>两种有意义的操作</p>\n<ul>\n<li>将 <strong>有效的 PM ID</strong> 传送到模拟器</li>\n<li>推迟如果 <strong>剩余缓冲区时间</strong> 足够，则可以稍后将处理的 VM Request</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Oversubscription-超额订阅\"><a href=\"#Oversubscription-超额订阅\" class=\"headerlink\" title=\"Oversubscription 超额订阅\"></a>Oversubscription 超额订阅</h3><ul>\n<li><p>考虑到各种服务级别，将物理机分为可超额订阅和非超额订阅的</p>\n</li>\n<li><p>所谓超额，就比如 10 个 VM 实际上只使用 7 个 PM （就是厂商为了省钱）</p>\n</li>\n<li><p>对于超额订阅，可以在 <strong>config.yml</strong> 中设置参数</p>\n</li>\n<li><p>在此场景，有两个资源可能被超额订阅，CPU 和 内存，因可以设置这两个的最大超额订阅率</p>\n<ul>\n<li><p><strong>MAX_CPU_OVERSUBSCRIPTION_RATE</strong> ，CPU 的超额订阅率，默认设置为 1.15 ，意味着每个 PM 最多可以分配其资源容量的 1.15 倍 </p>\n</li>\n<li><p><strong>MAX_MEM_OVERSUBSCRIPTION_RATE</strong> ，内存的超额订阅率，与 CPU 的类似</p>\n</li>\n</ul>\n</li>\n<li><p>为了保护 PM 免受过载的影响，需要考虑 CPU 利用率 ，MAX_UTILIZATION_RATE 被用作安全机制</p>\n<ul>\n<li><strong>MAX_UTILIZATION_RATE</strong> ，默认设置为 1，这意味着在筛选有效 PM 时，允许的最大物理 CPU 使用率为 100%</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Runtime-Simulation\"><a href=\"#Runtime-Simulation\" class=\"headerlink\" title=\"Runtime Simulation\"></a>Runtime Simulation</h3><ul>\n<li><h4 id=\"动态利用率\"><a href=\"#动态利用率\" class=\"headerlink\" title=\"动态利用率\"></a>动态利用率</h4><ul>\n<li>为了使模拟环境最接近真实情况，MARO 模拟每个 VM 的资源利用率（当前仅为 CPU 利用率）</li>\n<li><strong>模拟的</strong> VM CPU 利用率根据<strong>实际的</strong> VM 工作负载读数而变化</li>\n<li>MARO 还将根据每个 PM 中的<strong>实时</strong> VM 定期更新<strong>实时</strong>资源利用率</li>\n</ul>\n</li>\n<li><h4 id=\"实时能耗\"><a href=\"#实时能耗\" class=\"headerlink\" title=\"实时能耗\"></a>实时能耗</h4><ul>\n<li><p>不同的 VM 分配会导致 PM 集群的能耗不同，MARO 还根据 CPU 利用率模拟（计算）能耗</p>\n<ul>\n<li><p>能耗曲线</p>\n<ul>\n<li>这个非线性曲线反映了 CPU 利用率 与 能耗 的关系，用于模拟（计算）能耗</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n  <img src=\"/pictures/maro-vm-调度/vm.energy_curve.svg\"/></li>\n</ul>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Overload\"><a href=\"#Overload\" class=\"headerlink\" title=\"Overload\"></a>Overload</h3><ul>\n<li><p>由于 VM 的 CPU 使用率随时间而变化，因此在启用超额订阅时，VM 的 CPU 使用率之和可能会超过物理资源的容量，这种情况称为过载</p>\n<ul>\n<li><p>目前对于过载的情况，MARO 只支持<strong>静默（杀死）所有虚拟机</strong> 或 <strong>仅记录过载时间</strong>，在 config.yml 里面设置</p>\n<ul>\n<li><p><strong>KILL_ALL_VMS_IF_OVERLOAD</strong> </p>\n<ul>\n<li>如果启用此操作，则一旦发生重载，将解除分配位于重载 PM 的<strong>所有</strong> VM</li>\n<li>考虑到过载的影响，MARO 仍然会计算高利用率的能耗，静默行动对 PM 利用率的影响将反映在下一次 tick 中</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li>无论是否启用终止所有 VM，过载 PM 的数量和过载 VM 的数量都会被计算</li>\n<li>这两个指标是累积值，将被记录为环境指标</li>\n</ul>\n<h6 id=\"-9\"><a href=\"#-9\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-解除分配\"><a href=\"#VM-解除分配\" class=\"headerlink\" title=\"VM 解除分配\"></a>VM 解除分配</h3><ul>\n<li>MARO 模拟器会定期检查每次 tick 中完成任务的虚拟机</li>\n<li>完成的 VM 意味着它经历了一个完整的生命周期，已准备好终止，它所占用的资源最终将再次可用</li>\n<li>然后，模拟器将释放已完成的 VM 的资源，并最终从 PM 中删除 VM</li>\n</ul>\n<h6 id=\"-10\"><a href=\"#-10\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h3><ul>\n<li><p>准备两个 csv 文件 vm_table 和 cpu_readings_file</p>\n<ul>\n<li><p>vm_table</p>\n<ul>\n<li><p><strong>vm_id</strong>:       int, 每个 vm 的id</p>\n</li>\n<li><p><strong>sub_id</strong>:      int, subscription id（每个 vm 的订阅 id）</p>\n</li>\n<li><p><strong>deploy_id</strong>:   int, 每个 vm 的部署 id</p>\n</li>\n<li><p><strong>timestamp</strong>:   int, 每个 vm 的创建时间</p>\n</li>\n<li><p><strong>vm_deleted</strong>:  int. 每个 vm 的删除时间</p>\n</li>\n<li><p><strong>vm_lifetime</strong>: int, 每个 vm 的生存时间，Lifetime &#x3D; deletion time - creation time (timestamp) + 1</p>\n</li>\n<li><p><strong>vm_category</strong>: int, 目前有三种类型</p>\n<ul>\n<li><p>Delay-Insensitive</p>\n<ul>\n<li>可能延迟的 VM 工作负荷，例如批处理任务或测试工作负荷</li>\n<li>可以将此类 VM 分配给可过度订阅的 PM</li>\n</ul>\n</li>\n<li><p>Interactive</p>\n<ul>\n<li>交互式 VM 工作负荷，需要用户及时响应</li>\n<li>此类 VM 只能分配给不可超额订阅的 PM</li>\n</ul>\n</li>\n<li><p>Unknown</p>\n<ul>\n<li>未知类型</li>\n<li>为避免过载，此类 VM 被视为交互式 VM，只能分配给不可超额订阅的 PM</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>cpu_readings_file </p>\n<ul>\n<li><strong>timestamp</strong>:   int, 与 vm_table 中的 timestamp 匹配</li>\n<li><strong>vm_id</strong>: int, 与 vm_table 中的 vm_id 匹配</li>\n<li><strong>cpu_utilization</strong>: float, VM CPU 的利用率，以百分比单位 （%）存储</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-11\"><a href=\"#-11\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"构建命令\"><a href=\"#构建命令\" class=\"headerlink\" title=\"构建命令\"></a>构建命令</h3><ul>\n<li><p>将 CSV 数据集构建为 MARO 模拟器可以使用的二进制文件</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># maro data build --meta $PATH_TO_META_FILE --file $PATH_TO_CSV_FILE  --output $PATH_TO_OUTPUT_FILE</span><br><span class=\"line\">maro data build --meta ~/.maro/data/vm_scheduling/meta/vmtable.yml  --file ~/.maro/data/vm_scheduling/.build/azure.2019.10k/vmtable.bin --output $PWD/vmtable.bin</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>–meta：必需，用于指定 meta file 的路径。默认情况下，meta file 位于</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.maro/data/vm_scheduling/meta/</span><br></pre></td></tr></table></figure></li>\n<li><p>–file：必需，用于指定源 CSV 数据文件的路径，如果需要多个源 CSV 数据文件，则可以在特定文件中列出源文件的所有完整路径，并使用 @ 符号指定这个特定文件</p>\n</li>\n<li><p>–output：必需，用于指定目标二进制文件的路径</p>\n</li>\n</ul>\n</li>\n<li><p>生成二进制文件之后，在 topologies 目录下的 config.yml 中指定 VM_TABLE 和 CPU_READINGS 的直接路径</p>\n</li>\n</ul>\n<h6 id=\"-12\"><a href=\"#-12\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Environment-Interface\"><a href=\"#Environment-Interface\" class=\"headerlink\" title=\"Environment Interface\"></a>Environment Interface</h3><ul>\n<li><h4 id=\"DecisionPayload\"><a href=\"#DecisionPayload\" class=\"headerlink\" title=\"DecisionPayload\"></a>DecisionPayload</h4><ul>\n<li><p>一旦环境需要代理的响应来促进模拟，它就会抛出一个带有 DecisionPayload 的 PendingDecision 事件</p>\n</li>\n<li><p>DecisionPayload 包含以下信息</p>\n<ul>\n<li><strong>valid_pms (List[int])</strong> ：被视为有效的 PM ID 列表（其 CPU 和内存资源足以满足传入的 VM 请求） </li>\n<li><strong>vm_id (int)</strong> ：传入的 VM Request（正在等待分配的 VM Request）的 vm_id ，</li>\n<li><strong>vm_cpu_cores_requirement (int)</strong> ：传入的 VM Request 的 CPU 内核数量</li>\n<li><strong>vm_memory_requirement (int)</strong> ：传入的 VM Request 请求的内存资源大小</li>\n<li><strong>remaining_buffer_time（int）</strong> ：当使用 remaining_buffer_time 时，VM Request 将被视为失败，可以在 config.yml 里面设置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h4 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h4><ul>\n<li><p>从环境中获取 PendingDecisionAction 事件后，代理应使用 Action 进行响应，以下是有效的 Action</p>\n<ul>\n<li><p><strong>None</strong>：除了忽略此 VM Request 之外什么都不执行</p>\n</li>\n<li><p><strong>AllocateAction</strong>：VM 的创建时间将固定在它收到这个 Request 的 tick 处，模拟器将更新目标 PM 的工作负载（CPU 核心数量，内存和能耗），这个 Action 包括:</p>\n<ul>\n<li>**vm_id(int)**：等待分配资源的 VM 的 ID</li>\n<li>**pm_id(int)**：计划将 VM 分配到的 PM 的 ID</li>\n</ul>\n</li>\n<li><p><strong>PostponeAction</strong>：计算 remaining buffer time，这个 Action 包括：</p>\n<ul>\n<li><strong>vm_id (int)</strong> ：等待分配的 VM 的 ID</li>\n<li><strong>postpone_step（int）</strong>：分配要推迟的次数，单位是 DELAY_DURATION ，1 表示延迟 1 DELAY_DURATION ，可以在 config.yml 中设置</li>\n<li>如果时间仍然足够，模拟器将重新生成一个新的请求事件，新需求事件的 仅在剩余缓冲时间上与旧事件不同</li>\n<li>如果时间用完，模拟器会将其记录为失败的分配</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-13\"><a href=\"#-13\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">from maro.simulator import Env</span><br><span class=\"line\">from maro.simulator.scenarios.vm_scheduling import AllocateAction, DecisionPayload, PostponeAction</span><br><span class=\"line\"></span><br><span class=\"line\"># Initialize an Env for vm_scheduling scenario</span><br><span class=\"line\"># 初始化环境</span><br><span class=\"line\">env = Env(</span><br><span class=\"line\">  scenario=&quot;vm_scheduling&quot;,     </span><br><span class=\"line\">  topology=&quot;azure.2019.10k&quot;,    </span><br><span class=\"line\">  start_tick=0,                </span><br><span class=\"line\">  durations=8638,              </span><br><span class=\"line\">  snapshot_resolution=1</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化变量，声明类型，&quot;:&quot;用于声明类型</span><br><span class=\"line\">metrics: object = None</span><br><span class=\"line\">decision_event: DecisionPayload = None</span><br><span class=\"line\">is_done: bool = False</span><br><span class=\"line\">action: AllocateAction = None</span><br><span class=\"line\"></span><br><span class=\"line\"># Start the env with a None Action</span><br><span class=\"line\"># 开始模拟</span><br><span class=\"line\">metrics, decision_event, is_done = env.step(None)</span><br><span class=\"line\"></span><br><span class=\"line\">while not is_done:</span><br><span class=\"line\">    valid_pm_num: int = len(decision_event.valid_pms)</span><br><span class=\"line\">\t# 作出决策</span><br><span class=\"line\">    if valid_pm_num &lt;= 0:</span><br><span class=\"line\">        # No valid PM now, postpone.</span><br><span class=\"line\">\t\t# 没有可用的 PM ，推迟分配</span><br><span class=\"line\">        action: PostponeAction = PostponeAction(</span><br><span class=\"line\">            vm_id=decision_event.vm_id,</span><br><span class=\"line\">            postpone_step=1</span><br><span class=\"line\">        )</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        # Randomly choose an available PM.</span><br><span class=\"line\">\t\t# 有可用的 PM ，随机选一个 PM 与 VM 绑定</span><br><span class=\"line\">        random_idx = random.randint(0, valid_pm_num - 1)</span><br><span class=\"line\">        pm_id = decision_event.valid_pms[random_idx]</span><br><span class=\"line\">        action: AllocateAction = AllocateAction(</span><br><span class=\"line\">            vm_id=decision_event.vm_id,</span><br><span class=\"line\">            pm_id=pm_id</span><br><span class=\"line\">        )</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t# 采取行动</span><br><span class=\"line\">    metrics, decision_event, is_done = env.step(action)</span><br><span class=\"line\"></span><br><span class=\"line\">print(f&quot;[Random] Topology: azure.2019.10k. Total ticks: 8638. Start tick: 0&quot;)</span><br><span class=\"line\">print(metrics)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><ul>\n<li>在云服务期间，用户请求具有一定数量资源的 <strong>虚拟机（VM）（Virtual Mechine）</strong>，例如中央处理器、内存等</li>\n<li>假设一个特定的时间，VM 请求的数量和到达模式是固定的，给定一个物理资源有限的 <strong>物理机（PM）（Physical Mechine）</strong> 集群</li>\n<li>不同的 VM 分配策略导致数据中心的成功完成量不同，运营成本也不同</li>\n<li>对于云提供商，一个好的 VM 分配策略可以最大限度地提高资源利用率，从而可以通过向用户提供更多的 VM 来增加利润</li>\n<li>对于云用户，良好的 VM 分配策略可以最大程度地缩短 VM 响应时间，并提供更好的使用体验</li>\n</ul>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"资源供需\"><a href=\"#资源供需\" class=\"headerlink\" title=\"资源供需\"></a>资源供需</h3><img src=\"/pictures/maro-vm-调度/2022.10.27.20.00.43.png\"/>\n\n<ul>\n<li><p>每个 <strong>PM</strong> 中的物理资源是中心资源，包括 <strong>物理内核</strong> 和 <strong>内存</strong></p>\n<ul>\n<li>VM 请求需要一定数量的 <strong>物理资源</strong> ，资源要求因不同的 VM 请求而异 </li>\n<li>只要指定的 PM 的剩余资源足够，<strong>模拟器</strong> 就会将 VM 分配到指定 PM ，VM 会在指定 PM 中创建 </li>\n<li>VM 的资源利用率动态变化，PM 的实时能耗将在 <strong>Runtime-Simulation（模拟器）</strong> 中被模拟出来</li>\n<li>VM 执行一段时间后完成其任务，<strong>模拟器</strong> 将释放分配给此 VM 的资源，并从 PM 中解除分配此 VM ，物理资源被释放，可以处理下一个 VM 请求</li>\n</ul>\n</li>\n</ul>\n<img src=\"/pictures/maro-vm-调度/2022.10.28.15.14.52.png\"/>\n\n\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-Request\"><a href=\"#VM-Request\" class=\"headerlink\" title=\"VM Request\"></a>VM Request</h3><ul>\n<li>MARO 和机器学习算法原理类似，需要 <strong>样本数据</strong> 训练出 <strong>模型（找出当前场景的规律）</strong>，再通过模型去 <strong>预测</strong> 怎样的行为更加正确符合实际</li>\n<li>VM scheduling 场景里面，<strong>样本数据</strong> 是 VM Request<strong>s</strong> ，样本数据从实际工作负荷中统一采样</li>\n<li>只要原始数据集足够大，采样率不太小，采样的 VM Requests<strong>（复数名词）</strong> 就可以被认为遵循与原始请求类似的分布</li>\n<li>一个 VM Request 包含 <strong>VM 信息</strong>（如 订阅 ID、部署 ID 和 VM 类别）、<strong>VM 的所需资源</strong>（包括所需的 CPU 核心数和内存）以及 <strong>剩余缓冲时间（remaining buffer time）</strong></li>\n</ul>\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-类型\"><a href=\"#VM-类型\" class=\"headerlink\" title=\"VM 类型\"></a>VM 类型</h3><ul>\n<li><p>交互式</p>\n<ul>\n<li>交互式 VM 通常需要较低的响应时间，因此设置此类 VM 只能分配给不可超额订阅的 PM 服务器</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-3\"><a href=\"#-3\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li><p>延迟不敏感</p>\n<ul>\n<li>不区分延迟的 VM 通常用于批处理任务或开发工作负荷，可以将此类 VM 分配给可过度订阅的 PM 服务器</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-4\"><a href=\"#-4\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-分配\"><a href=\"#VM-分配\" class=\"headerlink\" title=\"VM 分配\"></a>VM 分配</h3><ul>\n<li><p>根据 <strong>有效的 PM 列表</strong> ，<strong>模拟器记录的历史信息</strong> 以及 <strong>VM 的详细所需资源</strong> ，<strong>VM 调度器（决策代理）</strong> 将根据其分配策略做出决策</p>\n</li>\n<li><p>两种有意义的操作</p>\n<ul>\n<li>将 <strong>有效的 PM ID</strong> 传送到模拟器</li>\n<li>推迟如果 <strong>剩余缓冲区时间</strong> 足够，则可以稍后将处理的 VM Request</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-5\"><a href=\"#-5\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Oversubscription-超额订阅\"><a href=\"#Oversubscription-超额订阅\" class=\"headerlink\" title=\"Oversubscription 超额订阅\"></a>Oversubscription 超额订阅</h3><ul>\n<li><p>考虑到各种服务级别，将物理机分为可超额订阅和非超额订阅的</p>\n</li>\n<li><p>所谓超额，就比如 10 个 VM 实际上只使用 7 个 PM （就是厂商为了省钱）</p>\n</li>\n<li><p>对于超额订阅，可以在 <strong>config.yml</strong> 中设置参数</p>\n</li>\n<li><p>在此场景，有两个资源可能被超额订阅，CPU 和 内存，因可以设置这两个的最大超额订阅率</p>\n<ul>\n<li><p><strong>MAX_CPU_OVERSUBSCRIPTION_RATE</strong> ，CPU 的超额订阅率，默认设置为 1.15 ，意味着每个 PM 最多可以分配其资源容量的 1.15 倍 </p>\n</li>\n<li><p><strong>MAX_MEM_OVERSUBSCRIPTION_RATE</strong> ，内存的超额订阅率，与 CPU 的类似</p>\n</li>\n</ul>\n</li>\n<li><p>为了保护 PM 免受过载的影响，需要考虑 CPU 利用率 ，MAX_UTILIZATION_RATE 被用作安全机制</p>\n<ul>\n<li><strong>MAX_UTILIZATION_RATE</strong> ，默认设置为 1，这意味着在筛选有效 PM 时，允许的最大物理 CPU 使用率为 100%</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-6\"><a href=\"#-6\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Runtime-Simulation\"><a href=\"#Runtime-Simulation\" class=\"headerlink\" title=\"Runtime Simulation\"></a>Runtime Simulation</h3><ul>\n<li><h4 id=\"动态利用率\"><a href=\"#动态利用率\" class=\"headerlink\" title=\"动态利用率\"></a>动态利用率</h4><ul>\n<li>为了使模拟环境最接近真实情况，MARO 模拟每个 VM 的资源利用率（当前仅为 CPU 利用率）</li>\n<li><strong>模拟的</strong> VM CPU 利用率根据<strong>实际的</strong> VM 工作负载读数而变化</li>\n<li>MARO 还将根据每个 PM 中的<strong>实时</strong> VM 定期更新<strong>实时</strong>资源利用率</li>\n</ul>\n</li>\n<li><h4 id=\"实时能耗\"><a href=\"#实时能耗\" class=\"headerlink\" title=\"实时能耗\"></a>实时能耗</h4><ul>\n<li><p>不同的 VM 分配会导致 PM 集群的能耗不同，MARO 还根据 CPU 利用率模拟（计算）能耗</p>\n<ul>\n<li><p>能耗曲线</p>\n<ul>\n<li>这个非线性曲线反映了 CPU 利用率 与 能耗 的关系，用于模拟（计算）能耗</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n  <img src=\"/pictures/maro-vm-调度/vm.energy_curve.svg\"/></li>\n</ul>\n<h6 id=\"-7\"><a href=\"#-7\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Overload\"><a href=\"#Overload\" class=\"headerlink\" title=\"Overload\"></a>Overload</h3><ul>\n<li><p>由于 VM 的 CPU 使用率随时间而变化，因此在启用超额订阅时，VM 的 CPU 使用率之和可能会超过物理资源的容量，这种情况称为过载</p>\n<ul>\n<li><p>目前对于过载的情况，MARO 只支持<strong>静默（杀死）所有虚拟机</strong> 或 <strong>仅记录过载时间</strong>，在 config.yml 里面设置</p>\n<ul>\n<li><p><strong>KILL_ALL_VMS_IF_OVERLOAD</strong> </p>\n<ul>\n<li>如果启用此操作，则一旦发生重载，将解除分配位于重载 PM 的<strong>所有</strong> VM</li>\n<li>考虑到过载的影响，MARO 仍然会计算高利用率的能耗，静默行动对 PM 利用率的影响将反映在下一次 tick 中</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-8\"><a href=\"#-8\" class=\"headerlink\" title=\"\"></a></h6><ul>\n<li>无论是否启用终止所有 VM，过载 PM 的数量和过载 VM 的数量都会被计算</li>\n<li>这两个指标是累积值，将被记录为环境指标</li>\n</ul>\n<h6 id=\"-9\"><a href=\"#-9\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"VM-解除分配\"><a href=\"#VM-解除分配\" class=\"headerlink\" title=\"VM 解除分配\"></a>VM 解除分配</h3><ul>\n<li>MARO 模拟器会定期检查每次 tick 中完成任务的虚拟机</li>\n<li>完成的 VM 意味着它经历了一个完整的生命周期，已准备好终止，它所占用的资源最终将再次可用</li>\n<li>然后，模拟器将释放已完成的 VM 的资源，并最终从 PM 中删除 VM</li>\n</ul>\n<h6 id=\"-10\"><a href=\"#-10\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h3><ul>\n<li><p>准备两个 csv 文件 vm_table 和 cpu_readings_file</p>\n<ul>\n<li><p>vm_table</p>\n<ul>\n<li><p><strong>vm_id</strong>:       int, 每个 vm 的id</p>\n</li>\n<li><p><strong>sub_id</strong>:      int, subscription id（每个 vm 的订阅 id）</p>\n</li>\n<li><p><strong>deploy_id</strong>:   int, 每个 vm 的部署 id</p>\n</li>\n<li><p><strong>timestamp</strong>:   int, 每个 vm 的创建时间</p>\n</li>\n<li><p><strong>vm_deleted</strong>:  int. 每个 vm 的删除时间</p>\n</li>\n<li><p><strong>vm_lifetime</strong>: int, 每个 vm 的生存时间，Lifetime &#x3D; deletion time - creation time (timestamp) + 1</p>\n</li>\n<li><p><strong>vm_category</strong>: int, 目前有三种类型</p>\n<ul>\n<li><p>Delay-Insensitive</p>\n<ul>\n<li>可能延迟的 VM 工作负荷，例如批处理任务或测试工作负荷</li>\n<li>可以将此类 VM 分配给可过度订阅的 PM</li>\n</ul>\n</li>\n<li><p>Interactive</p>\n<ul>\n<li>交互式 VM 工作负荷，需要用户及时响应</li>\n<li>此类 VM 只能分配给不可超额订阅的 PM</li>\n</ul>\n</li>\n<li><p>Unknown</p>\n<ul>\n<li>未知类型</li>\n<li>为避免过载，此类 VM 被视为交互式 VM，只能分配给不可超额订阅的 PM</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>cpu_readings_file </p>\n<ul>\n<li><strong>timestamp</strong>:   int, 与 vm_table 中的 timestamp 匹配</li>\n<li><strong>vm_id</strong>: int, 与 vm_table 中的 vm_id 匹配</li>\n<li><strong>cpu_utilization</strong>: float, VM CPU 的利用率，以百分比单位 （%）存储</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-11\"><a href=\"#-11\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"构建命令\"><a href=\"#构建命令\" class=\"headerlink\" title=\"构建命令\"></a>构建命令</h3><ul>\n<li><p>将 CSV 数据集构建为 MARO 模拟器可以使用的二进制文件</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># maro data build --meta $PATH_TO_META_FILE --file $PATH_TO_CSV_FILE  --output $PATH_TO_OUTPUT_FILE</span><br><span class=\"line\">maro data build --meta ~/.maro/data/vm_scheduling/meta/vmtable.yml  --file ~/.maro/data/vm_scheduling/.build/azure.2019.10k/vmtable.bin --output $PWD/vmtable.bin</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>–meta：必需，用于指定 meta file 的路径。默认情况下，meta file 位于</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.maro/data/vm_scheduling/meta/</span><br></pre></td></tr></table></figure></li>\n<li><p>–file：必需，用于指定源 CSV 数据文件的路径，如果需要多个源 CSV 数据文件，则可以在特定文件中列出源文件的所有完整路径，并使用 @ 符号指定这个特定文件</p>\n</li>\n<li><p>–output：必需，用于指定目标二进制文件的路径</p>\n</li>\n</ul>\n</li>\n<li><p>生成二进制文件之后，在 topologies 目录下的 config.yml 中指定 VM_TABLE 和 CPU_READINGS 的直接路径</p>\n</li>\n</ul>\n<h6 id=\"-12\"><a href=\"#-12\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Environment-Interface\"><a href=\"#Environment-Interface\" class=\"headerlink\" title=\"Environment Interface\"></a>Environment Interface</h3><ul>\n<li><h4 id=\"DecisionPayload\"><a href=\"#DecisionPayload\" class=\"headerlink\" title=\"DecisionPayload\"></a>DecisionPayload</h4><ul>\n<li><p>一旦环境需要代理的响应来促进模拟，它就会抛出一个带有 DecisionPayload 的 PendingDecision 事件</p>\n</li>\n<li><p>DecisionPayload 包含以下信息</p>\n<ul>\n<li><strong>valid_pms (List[int])</strong> ：被视为有效的 PM ID 列表（其 CPU 和内存资源足以满足传入的 VM 请求） </li>\n<li><strong>vm_id (int)</strong> ：传入的 VM Request（正在等待分配的 VM Request）的 vm_id ，</li>\n<li><strong>vm_cpu_cores_requirement (int)</strong> ：传入的 VM Request 的 CPU 内核数量</li>\n<li><strong>vm_memory_requirement (int)</strong> ：传入的 VM Request 请求的内存资源大小</li>\n<li><strong>remaining_buffer_time（int）</strong> ：当使用 remaining_buffer_time 时，VM Request 将被视为失败，可以在 config.yml 里面设置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h4 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h4><ul>\n<li><p>从环境中获取 PendingDecisionAction 事件后，代理应使用 Action 进行响应，以下是有效的 Action</p>\n<ul>\n<li><p><strong>None</strong>：除了忽略此 VM Request 之外什么都不执行</p>\n</li>\n<li><p><strong>AllocateAction</strong>：VM 的创建时间将固定在它收到这个 Request 的 tick 处，模拟器将更新目标 PM 的工作负载（CPU 核心数量，内存和能耗），这个 Action 包括:</p>\n<ul>\n<li>**vm_id(int)**：等待分配资源的 VM 的 ID</li>\n<li>**pm_id(int)**：计划将 VM 分配到的 PM 的 ID</li>\n</ul>\n</li>\n<li><p><strong>PostponeAction</strong>：计算 remaining buffer time，这个 Action 包括：</p>\n<ul>\n<li><strong>vm_id (int)</strong> ：等待分配的 VM 的 ID</li>\n<li><strong>postpone_step（int）</strong>：分配要推迟的次数，单位是 DELAY_DURATION ，1 表示延迟 1 DELAY_DURATION ，可以在 config.yml 中设置</li>\n<li>如果时间仍然足够，模拟器将重新生成一个新的请求事件，新需求事件的 仅在剩余缓冲时间上与旧事件不同</li>\n<li>如果时间用完，模拟器会将其记录为失败的分配</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"-13\"><a href=\"#-13\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br><span class=\"line\"></span><br><span class=\"line\">from maro.simulator import Env</span><br><span class=\"line\">from maro.simulator.scenarios.vm_scheduling import AllocateAction, DecisionPayload, PostponeAction</span><br><span class=\"line\"></span><br><span class=\"line\"># Initialize an Env for vm_scheduling scenario</span><br><span class=\"line\"># 初始化环境</span><br><span class=\"line\">env = Env(</span><br><span class=\"line\">  scenario=&quot;vm_scheduling&quot;,     </span><br><span class=\"line\">  topology=&quot;azure.2019.10k&quot;,    </span><br><span class=\"line\">  start_tick=0,                </span><br><span class=\"line\">  durations=8638,              </span><br><span class=\"line\">  snapshot_resolution=1</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"># 初始化变量，声明类型，&quot;:&quot;用于声明类型</span><br><span class=\"line\">metrics: object = None</span><br><span class=\"line\">decision_event: DecisionPayload = None</span><br><span class=\"line\">is_done: bool = False</span><br><span class=\"line\">action: AllocateAction = None</span><br><span class=\"line\"></span><br><span class=\"line\"># Start the env with a None Action</span><br><span class=\"line\"># 开始模拟</span><br><span class=\"line\">metrics, decision_event, is_done = env.step(None)</span><br><span class=\"line\"></span><br><span class=\"line\">while not is_done:</span><br><span class=\"line\">    valid_pm_num: int = len(decision_event.valid_pms)</span><br><span class=\"line\">\t# 作出决策</span><br><span class=\"line\">    if valid_pm_num &lt;= 0:</span><br><span class=\"line\">        # No valid PM now, postpone.</span><br><span class=\"line\">\t\t# 没有可用的 PM ，推迟分配</span><br><span class=\"line\">        action: PostponeAction = PostponeAction(</span><br><span class=\"line\">            vm_id=decision_event.vm_id,</span><br><span class=\"line\">            postpone_step=1</span><br><span class=\"line\">        )</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        # Randomly choose an available PM.</span><br><span class=\"line\">\t\t# 有可用的 PM ，随机选一个 PM 与 VM 绑定</span><br><span class=\"line\">        random_idx = random.randint(0, valid_pm_num - 1)</span><br><span class=\"line\">        pm_id = decision_event.valid_pms[random_idx]</span><br><span class=\"line\">        action: AllocateAction = AllocateAction(</span><br><span class=\"line\">            vm_id=decision_event.vm_id,</span><br><span class=\"line\">            pm_id=pm_id</span><br><span class=\"line\">        )</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t# 采取行动</span><br><span class=\"line\">    metrics, decision_event, is_done = env.step(action)</span><br><span class=\"line\"></span><br><span class=\"line\">print(f&quot;[Random] Topology: azure.2019.10k. Total ticks: 8638. Start tick: 0&quot;)</span><br><span class=\"line\">print(metrics)</span><br></pre></td></tr></table></figure>\n"},{"title":"VIM 配置","date":"2022-10-29T06:31:55.000Z","_content":"\n### VIM 配置说明\n\n1. 安装 neovim 可以直接从 github 下载 appimage\n\n2. 配置 neovim 首次启动使用 :checkhealth 查看配置的路径等信息\n\n3. coc.nvim 的 LSP 服务需要 npm （ node.js ）提供支持，npm 安装的时候可以从官方网站那里下载然后安装到指定 path，之后的 -g 安装 npm 包的时候包会安装在安装 npm 的目录下面\n\n4. 注意这个 coc-setting.json 这个在安装了 coc.nvim 之后可以 :CocConfig 来进行编辑，json 里面这一句话一定要加上，解决了初次 tab 选中的问题\n\n5. 配置文件 init.vim 位于 /home/asleep/.config/nvim 下，coc-settings.json 也是在这个路径下面\n\n6. vimplug 管理插件，这里有点特殊，这里我将其他插件安装在与 vimplug 的 plug.vim 同一个目录下面，即  /home/asleep/.local/share/nvim/site/autoload\n\n7. 安装各种插件之前，应该要了解各个插件的依赖\n\n8. 至于 vimplug 的安装，只需要把 github 上面的那个 plug.vim 文件弄下来放在上面说的那个 path 下面就可以调用 :PlugInstall，不用整个仓库弄下来\n\n9. 至于 coc 的插件，coc.nvim 是一个插件管理器，coc.nvim 管理的插件在 /home/asleep/.config/coc/extensions 下面\n\n10. 综上所述，如果要迁移 nvim 及其配置，只需要复制\n\n    ```\n    /home/asleep/.config/coc/extensions   “coc-extensions”\n    \n    /home/asleep/.config/nvim   “coc-settings.json”  “init.vim“\n    \n    /home/asleep/.local/share/nvim/site/autoload   “plug.vim” “vim-plug extensions”\n    ```\n\n11. 这三个路径下的文件就可以完成迁移 \n\n12. 每次修改 init.vim 之后，都要 :so % 即 :source init.vim 生效\n\n\n###### \n\n### coc-setting.json\n\n```\n{\n    \"suggest.noselect\": true,\n}\n```\n\n###### \n\n### init.vim 已启用的配置\n\n\n```\n\" -------------------------------------------------------------------------------------------------------------\n\" ---------------------------------------------common-start----------------------------------------------------\n\" -------------------------------------------------------------------------------------------------------------\n\nset number\nset mouse=c\nset tabstop=4\nset autoindent\nset backspace=indent,eol,start\nset hlsearch\nset clipboard+=unnamedplus\nset foldmethod=syntax\nset nofoldenable\n\" 自动同步\nset autoread\nset fillchars=eob:\\ \n\n\" Vim jump to the last position when reopening a file\nif has(\"autocmd\")\n  au BufReadPost * if line(\"'\\\"\") > 1 && line(\"'\\\"\") <= line(\"$\") | exe \"normal! g'\\\"\" | endif\nendif\n\n\nfunction! ESC_IMAP()\n    let l:frontChar = getline('.')[col('.') - 2]\n    if l:frontChar == \";\" \n        call feedkeys(\"\\<BS>\\<BS>\\<ESC>\", 'n')\n    else\n        call feedkeys(\"\\<BS>\\;\", 'n')\n    endif\nendfunction\ninoremap <expr> ; ESC_IMAP()\n\nset timeoutlen=200\n\nnnoremap ;; <ESC>\nvnoremap ;; <ESC>\nsnoremap ;; <ESC>\nxnoremap ;; <ESC>\ncnoremap ;; <ESC>\nonoremap ;; <ESC>\n\n\" exit windows\ntnoremap ;; <C-\\><C-n>\n\n\" switch windows\nnnoremap <TAB> <C-w>w\nnnoremap vv <C-v>\n\necho expand(\"%:p:h\")\n\ncnoreabbrev fd echo expand(\"%:p:h\")\ncnoreabbrev vst vs<ENTER>:term\ncnoreabbrev spt sp<ENTER>:term\n\n\n\" -------------------------------------------------------------------------------------------------------------\n\"-----------------------------------------------common-end----------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\"\n\"\n\"\n\"-------------------------------------------------------------------------------------------------------------\n\"--------------------------------------------vim-plug-start---------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\n\n\ncall plug#begin('/home/asleep/.local/share/nvim/site/autoload')\nPlug 'itchyny/lightline.vim'\nPlug 'joshdick/onedark.vim'\nPlug 'neoclide/coc.nvim', {'branch': 'release'}\nPlug 'jiangmiao/auto-pairs'\nPlug 'ms-jpq/chadtree', {'branch': 'chad', 'do': 'python3 -m chadtree deps'}\nPlug 'sheerun/vim-polyglot'\nPlug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }\nPlug 'tpope/vim-fugitive'\nPlug 'sbdchd/neoformat'\nPlug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }\ncall plug#end()\n\n\"有些插件需要安装 nerd fonts！\n\"nerd fonts 包括了 powerline fonts！\n\"建议安装 DejaVuSansMonoNerd！\n\n\"这个是 LeaderF 的设置\nlet g:Lf_WindowPosition = 'popup'\ncnoreabbrev ff LeaderfFile\n\n\ncnoreabbrev fm Neoformat\n\ncnoreabbrev mt MarkdownPreviewToggle\nlet g:mkdp_theme = \"light\"\n\n\"这个是 chadtree 的设置\n\"明确指定绑定的键之后，就不会使用默认的键\nlet g:chadtree_settings = {\n  \\ 'keymap.change_focus_up': [\"..\"],\n  \\ 'keymap.secondary': [\"<2-leftmouse>\"]\n\\}\n\nnnoremap <F2> :CHADopen<CR>\n\nlet g:onedark_terminal_italics=1\nautocmd ColorScheme * highlight Normal ctermbg=NONE guibg=NONE \ncolorscheme onedark\n\n\nlet g:lightline = {\n      \\'colorscheme' : 'onedark',\n      \\ 'separator': { 'left': '', 'right': '' },\n      \\ 'subseparator': { 'left': '', 'right': '' },\n      \\ 'component': {\n            \\ 'lineinfo': ' %3l / %L : %-2v',\n            \\ }, \n      \\ }\n\n\n\"-------------------------------------------------------------------------------------------------------------\n\"-----------------------------------------------vim-plug-end--------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\n\n\n\"-------------------------------------------------------------------------------------------------------------\n\"------------------------------------------------coc-start----------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\ninoremap <silent><expr> <TAB> coc#pum#visible() ? coc#pum#next(1) :\"\\<Tab>\" \n\nnnoremap gd <Plug>(coc-definition)\nnnoremap gt <Plug>(coc-type-definition)\nnnoremap gi <Plug>(coc-implementation)\nnnoremap gr <Plug>(coc-references)\n\n\" Use K to show documentation in preview window.\nfunction! ShowDocumentation()\n  if CocAction('hasProvider', 'hover')\n    call CocActionAsync('doHover')\n  else\n    call feedkeys('K', 'in')\n  endif\nendfunction\nnnoremap <silent> K :call ShowDocumentation()<CR>\n\n\" Highlight the symbol and its references when holding the cursor.\nautocmd CursorHold * silent call CocActionAsync('highlight')\n\n\" Symbol renaming.\nnnoremap <space>r <Plug>(coc-rename)\n\n\" Show all diagnostics.\nnnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>\n\n\" Manage extensions.\nnnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>\n\n\" Find symbol of current document.\nnnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>\n\n\n\"-------------------------------------------------------------------------------------------------------------\n\"-------------------------------------------------coc-end-----------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n```\n\n###### \n\n### init.vim 未启用的配置\n\n```\n\"\"-------------------------------------------------------------------------------------------------------------\n\"\"----------------------------------------------netrw_start----------------------------------------------------\n\"\"-------------------------------------------------------------------------------------------------------------\n\n\n\"\"\n\"\"let g:netrw_banner = 0\n\"\"let g:netrw_liststyle = 3\n\"\"let g:netrw_browse_split = 4\n\"\"let g:netrw_altv = 1\n\"\"let g:netrw_winsize = 15\n\"\"\n\"\"set autochdir\n\"\"\n\"\"\" Toggle Vexplore with <F2>\n\"\"function! ToggleVExplorer()\n\"\"    if exists(\"t:expl_buf_num\")\n\"\"        let expl_win_num = bufwinnr(t:expl_buf_num)\n\"\"        let cur_win_num = winnr()\n\"\"\n\"\"        if expl_win_num != -1\n\"\"            while expl_win_num != cur_win_num\n\"\"                exec \"wincmd w\"\n\"\"                let cur_win_num = winnr()\n\"\"            endwhile\n\"\"\n\"\"            close\n\"\"        endif\n\"\"\n\"\"        unlet t:expl_buf_num\n\"\"    else\n\"\"         Vexplore\n\"\"         let t:expl_buf_num = bufnr(\"%\")\n\"\"    endif\n\"\"endfunction\n\"\"\n\"\"map <F2> :call ToggleVExplorer()<CR>\n\"\"\n\n\n\n\"\" 状态栏无插件设置\n\"\"hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE\n\"\"set fillchars=vert:\\ \n\"\"\"\"set fillchars=vert:\\│\n\"\"set statusline=%*\\ %.50F\\               \"显示文件名和文件路径\n\"\"set statusline+=%=%y%m%r%h%w\\ %*        \"显示文件类型及文件状态\n\"\"set statusline+=%{&ff}\\[%{&fenc}]\\ %*   \"显示文件编码类型\n\"\"set statusline+=%l/%L,%c\\ %*            \"显示光标所在行和列\n\"\"set statusline+=%3p%%                   \"显示光标前文本所占总文本的比例\n\"\"\n\"\"\n\"\"hi Statusline ctermfg=NONE ctermbg=NONE cterm=bold \n\"\"hi StatuslineNC ctermfg=NONE ctermbg=NONE cterm=NONE\n\n\n\n\n\n\"\"-------------------------------------------------------------------------------------------------------------\n\"\"-----------------------------------------------netrw-end-----------------------------------------------------\n\"\"-------------------------------------------------------------------------------------------------------------\n```\n","source":"_posts/VIM-配置.md","raw":"---\ntitle: VIM 配置\ndate: 2022-10-29 14:31:55\ntags:\n\t- VIM\n---\n\n### VIM 配置说明\n\n1. 安装 neovim 可以直接从 github 下载 appimage\n\n2. 配置 neovim 首次启动使用 :checkhealth 查看配置的路径等信息\n\n3. coc.nvim 的 LSP 服务需要 npm （ node.js ）提供支持，npm 安装的时候可以从官方网站那里下载然后安装到指定 path，之后的 -g 安装 npm 包的时候包会安装在安装 npm 的目录下面\n\n4. 注意这个 coc-setting.json 这个在安装了 coc.nvim 之后可以 :CocConfig 来进行编辑，json 里面这一句话一定要加上，解决了初次 tab 选中的问题\n\n5. 配置文件 init.vim 位于 /home/asleep/.config/nvim 下，coc-settings.json 也是在这个路径下面\n\n6. vimplug 管理插件，这里有点特殊，这里我将其他插件安装在与 vimplug 的 plug.vim 同一个目录下面，即  /home/asleep/.local/share/nvim/site/autoload\n\n7. 安装各种插件之前，应该要了解各个插件的依赖\n\n8. 至于 vimplug 的安装，只需要把 github 上面的那个 plug.vim 文件弄下来放在上面说的那个 path 下面就可以调用 :PlugInstall，不用整个仓库弄下来\n\n9. 至于 coc 的插件，coc.nvim 是一个插件管理器，coc.nvim 管理的插件在 /home/asleep/.config/coc/extensions 下面\n\n10. 综上所述，如果要迁移 nvim 及其配置，只需要复制\n\n    ```\n    /home/asleep/.config/coc/extensions   “coc-extensions”\n    \n    /home/asleep/.config/nvim   “coc-settings.json”  “init.vim“\n    \n    /home/asleep/.local/share/nvim/site/autoload   “plug.vim” “vim-plug extensions”\n    ```\n\n11. 这三个路径下的文件就可以完成迁移 \n\n12. 每次修改 init.vim 之后，都要 :so % 即 :source init.vim 生效\n\n\n###### \n\n### coc-setting.json\n\n```\n{\n    \"suggest.noselect\": true,\n}\n```\n\n###### \n\n### init.vim 已启用的配置\n\n\n```\n\" -------------------------------------------------------------------------------------------------------------\n\" ---------------------------------------------common-start----------------------------------------------------\n\" -------------------------------------------------------------------------------------------------------------\n\nset number\nset mouse=c\nset tabstop=4\nset autoindent\nset backspace=indent,eol,start\nset hlsearch\nset clipboard+=unnamedplus\nset foldmethod=syntax\nset nofoldenable\n\" 自动同步\nset autoread\nset fillchars=eob:\\ \n\n\" Vim jump to the last position when reopening a file\nif has(\"autocmd\")\n  au BufReadPost * if line(\"'\\\"\") > 1 && line(\"'\\\"\") <= line(\"$\") | exe \"normal! g'\\\"\" | endif\nendif\n\n\nfunction! ESC_IMAP()\n    let l:frontChar = getline('.')[col('.') - 2]\n    if l:frontChar == \";\" \n        call feedkeys(\"\\<BS>\\<BS>\\<ESC>\", 'n')\n    else\n        call feedkeys(\"\\<BS>\\;\", 'n')\n    endif\nendfunction\ninoremap <expr> ; ESC_IMAP()\n\nset timeoutlen=200\n\nnnoremap ;; <ESC>\nvnoremap ;; <ESC>\nsnoremap ;; <ESC>\nxnoremap ;; <ESC>\ncnoremap ;; <ESC>\nonoremap ;; <ESC>\n\n\" exit windows\ntnoremap ;; <C-\\><C-n>\n\n\" switch windows\nnnoremap <TAB> <C-w>w\nnnoremap vv <C-v>\n\necho expand(\"%:p:h\")\n\ncnoreabbrev fd echo expand(\"%:p:h\")\ncnoreabbrev vst vs<ENTER>:term\ncnoreabbrev spt sp<ENTER>:term\n\n\n\" -------------------------------------------------------------------------------------------------------------\n\"-----------------------------------------------common-end----------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\"\n\"\n\"\n\"-------------------------------------------------------------------------------------------------------------\n\"--------------------------------------------vim-plug-start---------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\n\n\ncall plug#begin('/home/asleep/.local/share/nvim/site/autoload')\nPlug 'itchyny/lightline.vim'\nPlug 'joshdick/onedark.vim'\nPlug 'neoclide/coc.nvim', {'branch': 'release'}\nPlug 'jiangmiao/auto-pairs'\nPlug 'ms-jpq/chadtree', {'branch': 'chad', 'do': 'python3 -m chadtree deps'}\nPlug 'sheerun/vim-polyglot'\nPlug 'Yggdroot/LeaderF', { 'do': ':LeaderfInstallCExtension' }\nPlug 'tpope/vim-fugitive'\nPlug 'sbdchd/neoformat'\nPlug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }\ncall plug#end()\n\n\"有些插件需要安装 nerd fonts！\n\"nerd fonts 包括了 powerline fonts！\n\"建议安装 DejaVuSansMonoNerd！\n\n\"这个是 LeaderF 的设置\nlet g:Lf_WindowPosition = 'popup'\ncnoreabbrev ff LeaderfFile\n\n\ncnoreabbrev fm Neoformat\n\ncnoreabbrev mt MarkdownPreviewToggle\nlet g:mkdp_theme = \"light\"\n\n\"这个是 chadtree 的设置\n\"明确指定绑定的键之后，就不会使用默认的键\nlet g:chadtree_settings = {\n  \\ 'keymap.change_focus_up': [\"..\"],\n  \\ 'keymap.secondary': [\"<2-leftmouse>\"]\n\\}\n\nnnoremap <F2> :CHADopen<CR>\n\nlet g:onedark_terminal_italics=1\nautocmd ColorScheme * highlight Normal ctermbg=NONE guibg=NONE \ncolorscheme onedark\n\n\nlet g:lightline = {\n      \\'colorscheme' : 'onedark',\n      \\ 'separator': { 'left': '', 'right': '' },\n      \\ 'subseparator': { 'left': '', 'right': '' },\n      \\ 'component': {\n            \\ 'lineinfo': ' %3l / %L : %-2v',\n            \\ }, \n      \\ }\n\n\n\"-------------------------------------------------------------------------------------------------------------\n\"-----------------------------------------------vim-plug-end--------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\n\n\n\"-------------------------------------------------------------------------------------------------------------\n\"------------------------------------------------coc-start----------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n\ninoremap <silent><expr> <TAB> coc#pum#visible() ? coc#pum#next(1) :\"\\<Tab>\" \n\nnnoremap gd <Plug>(coc-definition)\nnnoremap gt <Plug>(coc-type-definition)\nnnoremap gi <Plug>(coc-implementation)\nnnoremap gr <Plug>(coc-references)\n\n\" Use K to show documentation in preview window.\nfunction! ShowDocumentation()\n  if CocAction('hasProvider', 'hover')\n    call CocActionAsync('doHover')\n  else\n    call feedkeys('K', 'in')\n  endif\nendfunction\nnnoremap <silent> K :call ShowDocumentation()<CR>\n\n\" Highlight the symbol and its references when holding the cursor.\nautocmd CursorHold * silent call CocActionAsync('highlight')\n\n\" Symbol renaming.\nnnoremap <space>r <Plug>(coc-rename)\n\n\" Show all diagnostics.\nnnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>\n\n\" Manage extensions.\nnnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>\n\n\" Find symbol of current document.\nnnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>\n\n\n\"-------------------------------------------------------------------------------------------------------------\n\"-------------------------------------------------coc-end-----------------------------------------------------\n\"-------------------------------------------------------------------------------------------------------------\n```\n\n###### \n\n### init.vim 未启用的配置\n\n```\n\"\"-------------------------------------------------------------------------------------------------------------\n\"\"----------------------------------------------netrw_start----------------------------------------------------\n\"\"-------------------------------------------------------------------------------------------------------------\n\n\n\"\"\n\"\"let g:netrw_banner = 0\n\"\"let g:netrw_liststyle = 3\n\"\"let g:netrw_browse_split = 4\n\"\"let g:netrw_altv = 1\n\"\"let g:netrw_winsize = 15\n\"\"\n\"\"set autochdir\n\"\"\n\"\"\" Toggle Vexplore with <F2>\n\"\"function! ToggleVExplorer()\n\"\"    if exists(\"t:expl_buf_num\")\n\"\"        let expl_win_num = bufwinnr(t:expl_buf_num)\n\"\"        let cur_win_num = winnr()\n\"\"\n\"\"        if expl_win_num != -1\n\"\"            while expl_win_num != cur_win_num\n\"\"                exec \"wincmd w\"\n\"\"                let cur_win_num = winnr()\n\"\"            endwhile\n\"\"\n\"\"            close\n\"\"        endif\n\"\"\n\"\"        unlet t:expl_buf_num\n\"\"    else\n\"\"         Vexplore\n\"\"         let t:expl_buf_num = bufnr(\"%\")\n\"\"    endif\n\"\"endfunction\n\"\"\n\"\"map <F2> :call ToggleVExplorer()<CR>\n\"\"\n\n\n\n\"\" 状态栏无插件设置\n\"\"hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE\n\"\"set fillchars=vert:\\ \n\"\"\"\"set fillchars=vert:\\│\n\"\"set statusline=%*\\ %.50F\\               \"显示文件名和文件路径\n\"\"set statusline+=%=%y%m%r%h%w\\ %*        \"显示文件类型及文件状态\n\"\"set statusline+=%{&ff}\\[%{&fenc}]\\ %*   \"显示文件编码类型\n\"\"set statusline+=%l/%L,%c\\ %*            \"显示光标所在行和列\n\"\"set statusline+=%3p%%                   \"显示光标前文本所占总文本的比例\n\"\"\n\"\"\n\"\"hi Statusline ctermfg=NONE ctermbg=NONE cterm=bold \n\"\"hi StatuslineNC ctermfg=NONE ctermbg=NONE cterm=NONE\n\n\n\n\n\n\"\"-------------------------------------------------------------------------------------------------------------\n\"\"-----------------------------------------------netrw-end-----------------------------------------------------\n\"\"-------------------------------------------------------------------------------------------------------------\n```\n","slug":"VIM-配置","published":1,"updated":"2022-10-29T07:19:56.352Z","_id":"cl9tjybog0000wxi51gamf4by","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"VIM-配置说明\"><a href=\"#VIM-配置说明\" class=\"headerlink\" title=\"VIM 配置说明\"></a>VIM 配置说明</h3><ol>\n<li><p>安装 neovim 可以直接从 github 下载 appimage</p>\n</li>\n<li><p>配置 neovim 首次启动使用 :checkhealth 查看配置的路径等信息</p>\n</li>\n<li><p>coc.nvim 的 LSP 服务需要 npm （ node.js ）提供支持，npm 安装的时候可以从官方网站那里下载然后安装到指定 path，之后的 -g 安装 npm 包的时候包会安装在安装 npm 的目录下面</p>\n</li>\n<li><p>注意这个 coc-setting.json 这个在安装了 coc.nvim 之后可以 :CocConfig 来进行编辑，json 里面这一句话一定要加上，解决了初次 tab 选中的问题</p>\n</li>\n<li><p>配置文件 init.vim 位于 &#x2F;home&#x2F;asleep&#x2F;.config&#x2F;nvim 下，coc-settings.json 也是在这个路径下面</p>\n</li>\n<li><p>vimplug 管理插件，这里有点特殊，这里我将其他插件安装在与 vimplug 的 plug.vim 同一个目录下面，即  &#x2F;home&#x2F;asleep&#x2F;.local&#x2F;share&#x2F;nvim&#x2F;site&#x2F;autoload</p>\n</li>\n<li><p>安装各种插件之前，应该要了解各个插件的依赖</p>\n</li>\n<li><p>至于 vimplug 的安装，只需要把 github 上面的那个 plug.vim 文件弄下来放在上面说的那个 path 下面就可以调用 :PlugInstall，不用整个仓库弄下来</p>\n</li>\n<li><p>至于 coc 的插件，coc.nvim 是一个插件管理器，coc.nvim 管理的插件在 &#x2F;home&#x2F;asleep&#x2F;.config&#x2F;coc&#x2F;extensions 下面</p>\n</li>\n<li><p>综上所述，如果要迁移 nvim 及其配置，只需要复制</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/asleep/.config/coc/extensions   “coc-extensions”</span><br><span class=\"line\"></span><br><span class=\"line\">/home/asleep/.config/nvim   “coc-settings.json”  “init.vim“</span><br><span class=\"line\"></span><br><span class=\"line\">/home/asleep/.local/share/nvim/site/autoload   “plug.vim” “vim-plug extensions”</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这三个路径下的文件就可以完成迁移 </p>\n</li>\n<li><p>每次修改 init.vim 之后，都要 :so % 即 :source init.vim 生效</p>\n</li>\n</ol>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"coc-setting-json\"><a href=\"#coc-setting-json\" class=\"headerlink\" title=\"coc-setting.json\"></a>coc-setting.json</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;suggest.noselect&quot;: true,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"init-vim-已启用的配置\"><a href=\"#init-vim-已启用的配置\" class=\"headerlink\" title=\"init.vim 已启用的配置\"></a>init.vim 已启用的配置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; -------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot; ---------------------------------------------common-start----------------------------------------------------</span><br><span class=\"line\">&quot; -------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">set number</span><br><span class=\"line\">set mouse=c</span><br><span class=\"line\">set tabstop=4</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\">set backspace=indent,eol,start</span><br><span class=\"line\">set hlsearch</span><br><span class=\"line\">set clipboard+=unnamedplus</span><br><span class=\"line\">set foldmethod=syntax</span><br><span class=\"line\">set nofoldenable</span><br><span class=\"line\">&quot; 自动同步</span><br><span class=\"line\">set autoread</span><br><span class=\"line\">set fillchars=eob:\\ </span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Vim jump to the last position when reopening a file</span><br><span class=\"line\">if has(&quot;autocmd&quot;)</span><br><span class=\"line\">  au BufReadPost * if line(&quot;&#x27;\\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;&#x27;\\&quot;&quot;) &lt;= line(&quot;$&quot;) | exe &quot;normal! g&#x27;\\&quot;&quot; | endif</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! ESC_IMAP()</span><br><span class=\"line\">    let l:frontChar = getline(&#x27;.&#x27;)[col(&#x27;.&#x27;) - 2]</span><br><span class=\"line\">    if l:frontChar == &quot;;&quot; </span><br><span class=\"line\">        call feedkeys(&quot;\\&lt;BS&gt;\\&lt;BS&gt;\\&lt;ESC&gt;&quot;, &#x27;n&#x27;)</span><br><span class=\"line\">    else</span><br><span class=\"line\">        call feedkeys(&quot;\\&lt;BS&gt;\\;&quot;, &#x27;n&#x27;)</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\">inoremap &lt;expr&gt; ; ESC_IMAP()</span><br><span class=\"line\"></span><br><span class=\"line\">set timeoutlen=200</span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">vnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">snoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">xnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">cnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">onoremap ;; &lt;ESC&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; exit windows</span><br><span class=\"line\">tnoremap ;; &lt;C-\\&gt;&lt;C-n&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; switch windows</span><br><span class=\"line\">nnoremap &lt;TAB&gt; &lt;C-w&gt;w</span><br><span class=\"line\">nnoremap vv &lt;C-v&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">echo expand(&quot;%:p:h&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">cnoreabbrev fd echo expand(&quot;%:p:h&quot;)</span><br><span class=\"line\">cnoreabbrev vst vs&lt;ENTER&gt;:term</span><br><span class=\"line\">cnoreabbrev spt sp&lt;ENTER&gt;:term</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; -------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;-----------------------------------------------common-end----------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;--------------------------------------------vim-plug-start---------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">call plug#begin(&#x27;/home/asleep/.local/share/nvim/site/autoload&#x27;)</span><br><span class=\"line\">Plug &#x27;itchyny/lightline.vim&#x27;</span><br><span class=\"line\">Plug &#x27;joshdick/onedark.vim&#x27;</span><br><span class=\"line\">Plug &#x27;neoclide/coc.nvim&#x27;, &#123;&#x27;branch&#x27;: &#x27;release&#x27;&#125;</span><br><span class=\"line\">Plug &#x27;jiangmiao/auto-pairs&#x27;</span><br><span class=\"line\">Plug &#x27;ms-jpq/chadtree&#x27;, &#123;&#x27;branch&#x27;: &#x27;chad&#x27;, &#x27;do&#x27;: &#x27;python3 -m chadtree deps&#x27;&#125;</span><br><span class=\"line\">Plug &#x27;sheerun/vim-polyglot&#x27;</span><br><span class=\"line\">Plug &#x27;Yggdroot/LeaderF&#x27;, &#123; &#x27;do&#x27;: &#x27;:LeaderfInstallCExtension&#x27; &#125;</span><br><span class=\"line\">Plug &#x27;tpope/vim-fugitive&#x27;</span><br><span class=\"line\">Plug &#x27;sbdchd/neoformat&#x27;</span><br><span class=\"line\">Plug &#x27;iamcco/markdown-preview.nvim&#x27;, &#123; &#x27;do&#x27;: &#x27;cd app &amp;&amp; yarn install&#x27; &#125;</span><br><span class=\"line\">call plug#end()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;有些插件需要安装 nerd fonts！</span><br><span class=\"line\">&quot;nerd fonts 包括了 powerline fonts！</span><br><span class=\"line\">&quot;建议安装 DejaVuSansMonoNerd！</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;这个是 LeaderF 的设置</span><br><span class=\"line\">let g:Lf_WindowPosition = &#x27;popup&#x27;</span><br><span class=\"line\">cnoreabbrev ff LeaderfFile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cnoreabbrev fm Neoformat</span><br><span class=\"line\"></span><br><span class=\"line\">cnoreabbrev mt MarkdownPreviewToggle</span><br><span class=\"line\">let g:mkdp_theme = &quot;light&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;这个是 chadtree 的设置</span><br><span class=\"line\">&quot;明确指定绑定的键之后，就不会使用默认的键</span><br><span class=\"line\">let g:chadtree_settings = &#123;</span><br><span class=\"line\">  \\ &#x27;keymap.change_focus_up&#x27;: [&quot;..&quot;],</span><br><span class=\"line\">  \\ &#x27;keymap.secondary&#x27;: [&quot;&lt;2-leftmouse&gt;&quot;]</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap &lt;F2&gt; :CHADopen&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:onedark_terminal_italics=1</span><br><span class=\"line\">autocmd ColorScheme * highlight Normal ctermbg=NONE guibg=NONE </span><br><span class=\"line\">colorscheme onedark</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">let g:lightline = &#123;</span><br><span class=\"line\">      \\&#x27;colorscheme&#x27; : &#x27;onedark&#x27;,</span><br><span class=\"line\">      \\ &#x27;separator&#x27;: &#123; &#x27;left&#x27;: &#x27;&#x27;, &#x27;right&#x27;: &#x27;&#x27; &#125;,</span><br><span class=\"line\">      \\ &#x27;subseparator&#x27;: &#123; &#x27;left&#x27;: &#x27;&#x27;, &#x27;right&#x27;: &#x27;&#x27; &#125;,</span><br><span class=\"line\">      \\ &#x27;component&#x27;: &#123;</span><br><span class=\"line\">            \\ &#x27;lineinfo&#x27;: &#x27; %3l / %L : %-2v&#x27;,</span><br><span class=\"line\">            \\ &#125;, </span><br><span class=\"line\">      \\ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;-----------------------------------------------vim-plug-end--------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;------------------------------------------------coc-start----------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;silent&gt;&lt;expr&gt; &lt;TAB&gt; coc#pum#visible() ? coc#pum#next(1) :&quot;\\&lt;Tab&gt;&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap gd &lt;Plug&gt;(coc-definition)</span><br><span class=\"line\">nnoremap gt &lt;Plug&gt;(coc-type-definition)</span><br><span class=\"line\">nnoremap gi &lt;Plug&gt;(coc-implementation)</span><br><span class=\"line\">nnoremap gr &lt;Plug&gt;(coc-references)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Use K to show documentation in preview window.</span><br><span class=\"line\">function! ShowDocumentation()</span><br><span class=\"line\">  if CocAction(&#x27;hasProvider&#x27;, &#x27;hover&#x27;)</span><br><span class=\"line\">    call CocActionAsync(&#x27;doHover&#x27;)</span><br><span class=\"line\">  else</span><br><span class=\"line\">    call feedkeys(&#x27;K&#x27;, &#x27;in&#x27;)</span><br><span class=\"line\">  endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\">nnoremap &lt;silent&gt; K :call ShowDocumentation()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Highlight the symbol and its references when holding the cursor.</span><br><span class=\"line\">autocmd CursorHold * silent call CocActionAsync(&#x27;highlight&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Symbol renaming.</span><br><span class=\"line\">nnoremap &lt;space&gt;r &lt;Plug&gt;(coc-rename)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Show all diagnostics.</span><br><span class=\"line\">nnoremap &lt;silent&gt;&lt;nowait&gt; &lt;space&gt;a  :&lt;C-u&gt;CocList diagnostics&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Manage extensions.</span><br><span class=\"line\">nnoremap &lt;silent&gt;&lt;nowait&gt; &lt;space&gt;e  :&lt;C-u&gt;CocList extensions&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Find symbol of current document.</span><br><span class=\"line\">nnoremap &lt;silent&gt;&lt;nowait&gt; &lt;space&gt;o  :&lt;C-u&gt;CocList outline&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------coc-end-----------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"init-vim-未启用的配置\"><a href=\"#init-vim-未启用的配置\" class=\"headerlink\" title=\"init.vim 未启用的配置\"></a>init.vim 未启用的配置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;&quot;----------------------------------------------netrw_start----------------------------------------------------</span><br><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;let g:netrw_banner = 0</span><br><span class=\"line\">&quot;&quot;let g:netrw_liststyle = 3</span><br><span class=\"line\">&quot;&quot;let g:netrw_browse_split = 4</span><br><span class=\"line\">&quot;&quot;let g:netrw_altv = 1</span><br><span class=\"line\">&quot;&quot;let g:netrw_winsize = 15</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;set autochdir</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;&quot; Toggle Vexplore with &lt;F2&gt;</span><br><span class=\"line\">&quot;&quot;function! ToggleVExplorer()</span><br><span class=\"line\">&quot;&quot;    if exists(&quot;t:expl_buf_num&quot;)</span><br><span class=\"line\">&quot;&quot;        let expl_win_num = bufwinnr(t:expl_buf_num)</span><br><span class=\"line\">&quot;&quot;        let cur_win_num = winnr()</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;        if expl_win_num != -1</span><br><span class=\"line\">&quot;&quot;            while expl_win_num != cur_win_num</span><br><span class=\"line\">&quot;&quot;                exec &quot;wincmd w&quot;</span><br><span class=\"line\">&quot;&quot;                let cur_win_num = winnr()</span><br><span class=\"line\">&quot;&quot;            endwhile</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;            close</span><br><span class=\"line\">&quot;&quot;        endif</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;        unlet t:expl_buf_num</span><br><span class=\"line\">&quot;&quot;    else</span><br><span class=\"line\">&quot;&quot;         Vexplore</span><br><span class=\"line\">&quot;&quot;         let t:expl_buf_num = bufnr(&quot;%&quot;)</span><br><span class=\"line\">&quot;&quot;    endif</span><br><span class=\"line\">&quot;&quot;endfunction</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;map &lt;F2&gt; :call ToggleVExplorer()&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot; 状态栏无插件设置</span><br><span class=\"line\">&quot;&quot;hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE</span><br><span class=\"line\">&quot;&quot;set fillchars=vert:\\ </span><br><span class=\"line\">&quot;&quot;&quot;&quot;set fillchars=vert:\\│</span><br><span class=\"line\">&quot;&quot;set statusline=%*\\ %.50F\\               &quot;显示文件名和文件路径</span><br><span class=\"line\">&quot;&quot;set statusline+=%=%y%m%r%h%w\\ %*        &quot;显示文件类型及文件状态</span><br><span class=\"line\">&quot;&quot;set statusline+=%&#123;&amp;ff&#125;\\[%&#123;&amp;fenc&#125;]\\ %*   &quot;显示文件编码类型</span><br><span class=\"line\">&quot;&quot;set statusline+=%l/%L,%c\\ %*            &quot;显示光标所在行和列</span><br><span class=\"line\">&quot;&quot;set statusline+=%3p%%                   &quot;显示光标前文本所占总文本的比例</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;hi Statusline ctermfg=NONE ctermbg=NONE cterm=bold </span><br><span class=\"line\">&quot;&quot;hi StatuslineNC ctermfg=NONE ctermbg=NONE cterm=NONE</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;&quot;-----------------------------------------------netrw-end-----------------------------------------------------</span><br><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"VIM-配置说明\"><a href=\"#VIM-配置说明\" class=\"headerlink\" title=\"VIM 配置说明\"></a>VIM 配置说明</h3><ol>\n<li><p>安装 neovim 可以直接从 github 下载 appimage</p>\n</li>\n<li><p>配置 neovim 首次启动使用 :checkhealth 查看配置的路径等信息</p>\n</li>\n<li><p>coc.nvim 的 LSP 服务需要 npm （ node.js ）提供支持，npm 安装的时候可以从官方网站那里下载然后安装到指定 path，之后的 -g 安装 npm 包的时候包会安装在安装 npm 的目录下面</p>\n</li>\n<li><p>注意这个 coc-setting.json 这个在安装了 coc.nvim 之后可以 :CocConfig 来进行编辑，json 里面这一句话一定要加上，解决了初次 tab 选中的问题</p>\n</li>\n<li><p>配置文件 init.vim 位于 &#x2F;home&#x2F;asleep&#x2F;.config&#x2F;nvim 下，coc-settings.json 也是在这个路径下面</p>\n</li>\n<li><p>vimplug 管理插件，这里有点特殊，这里我将其他插件安装在与 vimplug 的 plug.vim 同一个目录下面，即  &#x2F;home&#x2F;asleep&#x2F;.local&#x2F;share&#x2F;nvim&#x2F;site&#x2F;autoload</p>\n</li>\n<li><p>安装各种插件之前，应该要了解各个插件的依赖</p>\n</li>\n<li><p>至于 vimplug 的安装，只需要把 github 上面的那个 plug.vim 文件弄下来放在上面说的那个 path 下面就可以调用 :PlugInstall，不用整个仓库弄下来</p>\n</li>\n<li><p>至于 coc 的插件，coc.nvim 是一个插件管理器，coc.nvim 管理的插件在 &#x2F;home&#x2F;asleep&#x2F;.config&#x2F;coc&#x2F;extensions 下面</p>\n</li>\n<li><p>综上所述，如果要迁移 nvim 及其配置，只需要复制</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/asleep/.config/coc/extensions   “coc-extensions”</span><br><span class=\"line\"></span><br><span class=\"line\">/home/asleep/.config/nvim   “coc-settings.json”  “init.vim“</span><br><span class=\"line\"></span><br><span class=\"line\">/home/asleep/.local/share/nvim/site/autoload   “plug.vim” “vim-plug extensions”</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这三个路径下的文件就可以完成迁移 </p>\n</li>\n<li><p>每次修改 init.vim 之后，都要 :so % 即 :source init.vim 生效</p>\n</li>\n</ol>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"coc-setting-json\"><a href=\"#coc-setting-json\" class=\"headerlink\" title=\"coc-setting.json\"></a>coc-setting.json</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;suggest.noselect&quot;: true,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"-1\"><a href=\"#-1\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"init-vim-已启用的配置\"><a href=\"#init-vim-已启用的配置\" class=\"headerlink\" title=\"init.vim 已启用的配置\"></a>init.vim 已启用的配置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; -------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot; ---------------------------------------------common-start----------------------------------------------------</span><br><span class=\"line\">&quot; -------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">set number</span><br><span class=\"line\">set mouse=c</span><br><span class=\"line\">set tabstop=4</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\">set backspace=indent,eol,start</span><br><span class=\"line\">set hlsearch</span><br><span class=\"line\">set clipboard+=unnamedplus</span><br><span class=\"line\">set foldmethod=syntax</span><br><span class=\"line\">set nofoldenable</span><br><span class=\"line\">&quot; 自动同步</span><br><span class=\"line\">set autoread</span><br><span class=\"line\">set fillchars=eob:\\ </span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Vim jump to the last position when reopening a file</span><br><span class=\"line\">if has(&quot;autocmd&quot;)</span><br><span class=\"line\">  au BufReadPost * if line(&quot;&#x27;\\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;&#x27;\\&quot;&quot;) &lt;= line(&quot;$&quot;) | exe &quot;normal! g&#x27;\\&quot;&quot; | endif</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! ESC_IMAP()</span><br><span class=\"line\">    let l:frontChar = getline(&#x27;.&#x27;)[col(&#x27;.&#x27;) - 2]</span><br><span class=\"line\">    if l:frontChar == &quot;;&quot; </span><br><span class=\"line\">        call feedkeys(&quot;\\&lt;BS&gt;\\&lt;BS&gt;\\&lt;ESC&gt;&quot;, &#x27;n&#x27;)</span><br><span class=\"line\">    else</span><br><span class=\"line\">        call feedkeys(&quot;\\&lt;BS&gt;\\;&quot;, &#x27;n&#x27;)</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\">inoremap &lt;expr&gt; ; ESC_IMAP()</span><br><span class=\"line\"></span><br><span class=\"line\">set timeoutlen=200</span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">vnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">snoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">xnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">cnoremap ;; &lt;ESC&gt;</span><br><span class=\"line\">onoremap ;; &lt;ESC&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; exit windows</span><br><span class=\"line\">tnoremap ;; &lt;C-\\&gt;&lt;C-n&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; switch windows</span><br><span class=\"line\">nnoremap &lt;TAB&gt; &lt;C-w&gt;w</span><br><span class=\"line\">nnoremap vv &lt;C-v&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">echo expand(&quot;%:p:h&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">cnoreabbrev fd echo expand(&quot;%:p:h&quot;)</span><br><span class=\"line\">cnoreabbrev vst vs&lt;ENTER&gt;:term</span><br><span class=\"line\">cnoreabbrev spt sp&lt;ENTER&gt;:term</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; -------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;-----------------------------------------------common-end----------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;--------------------------------------------vim-plug-start---------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">call plug#begin(&#x27;/home/asleep/.local/share/nvim/site/autoload&#x27;)</span><br><span class=\"line\">Plug &#x27;itchyny/lightline.vim&#x27;</span><br><span class=\"line\">Plug &#x27;joshdick/onedark.vim&#x27;</span><br><span class=\"line\">Plug &#x27;neoclide/coc.nvim&#x27;, &#123;&#x27;branch&#x27;: &#x27;release&#x27;&#125;</span><br><span class=\"line\">Plug &#x27;jiangmiao/auto-pairs&#x27;</span><br><span class=\"line\">Plug &#x27;ms-jpq/chadtree&#x27;, &#123;&#x27;branch&#x27;: &#x27;chad&#x27;, &#x27;do&#x27;: &#x27;python3 -m chadtree deps&#x27;&#125;</span><br><span class=\"line\">Plug &#x27;sheerun/vim-polyglot&#x27;</span><br><span class=\"line\">Plug &#x27;Yggdroot/LeaderF&#x27;, &#123; &#x27;do&#x27;: &#x27;:LeaderfInstallCExtension&#x27; &#125;</span><br><span class=\"line\">Plug &#x27;tpope/vim-fugitive&#x27;</span><br><span class=\"line\">Plug &#x27;sbdchd/neoformat&#x27;</span><br><span class=\"line\">Plug &#x27;iamcco/markdown-preview.nvim&#x27;, &#123; &#x27;do&#x27;: &#x27;cd app &amp;&amp; yarn install&#x27; &#125;</span><br><span class=\"line\">call plug#end()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;有些插件需要安装 nerd fonts！</span><br><span class=\"line\">&quot;nerd fonts 包括了 powerline fonts！</span><br><span class=\"line\">&quot;建议安装 DejaVuSansMonoNerd！</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;这个是 LeaderF 的设置</span><br><span class=\"line\">let g:Lf_WindowPosition = &#x27;popup&#x27;</span><br><span class=\"line\">cnoreabbrev ff LeaderfFile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cnoreabbrev fm Neoformat</span><br><span class=\"line\"></span><br><span class=\"line\">cnoreabbrev mt MarkdownPreviewToggle</span><br><span class=\"line\">let g:mkdp_theme = &quot;light&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;这个是 chadtree 的设置</span><br><span class=\"line\">&quot;明确指定绑定的键之后，就不会使用默认的键</span><br><span class=\"line\">let g:chadtree_settings = &#123;</span><br><span class=\"line\">  \\ &#x27;keymap.change_focus_up&#x27;: [&quot;..&quot;],</span><br><span class=\"line\">  \\ &#x27;keymap.secondary&#x27;: [&quot;&lt;2-leftmouse&gt;&quot;]</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap &lt;F2&gt; :CHADopen&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:onedark_terminal_italics=1</span><br><span class=\"line\">autocmd ColorScheme * highlight Normal ctermbg=NONE guibg=NONE </span><br><span class=\"line\">colorscheme onedark</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">let g:lightline = &#123;</span><br><span class=\"line\">      \\&#x27;colorscheme&#x27; : &#x27;onedark&#x27;,</span><br><span class=\"line\">      \\ &#x27;separator&#x27;: &#123; &#x27;left&#x27;: &#x27;&#x27;, &#x27;right&#x27;: &#x27;&#x27; &#125;,</span><br><span class=\"line\">      \\ &#x27;subseparator&#x27;: &#123; &#x27;left&#x27;: &#x27;&#x27;, &#x27;right&#x27;: &#x27;&#x27; &#125;,</span><br><span class=\"line\">      \\ &#x27;component&#x27;: &#123;</span><br><span class=\"line\">            \\ &#x27;lineinfo&#x27;: &#x27; %3l / %L : %-2v&#x27;,</span><br><span class=\"line\">            \\ &#125;, </span><br><span class=\"line\">      \\ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;-----------------------------------------------vim-plug-end--------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;------------------------------------------------coc-start----------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;silent&gt;&lt;expr&gt; &lt;TAB&gt; coc#pum#visible() ? coc#pum#next(1) :&quot;\\&lt;Tab&gt;&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap gd &lt;Plug&gt;(coc-definition)</span><br><span class=\"line\">nnoremap gt &lt;Plug&gt;(coc-type-definition)</span><br><span class=\"line\">nnoremap gi &lt;Plug&gt;(coc-implementation)</span><br><span class=\"line\">nnoremap gr &lt;Plug&gt;(coc-references)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Use K to show documentation in preview window.</span><br><span class=\"line\">function! ShowDocumentation()</span><br><span class=\"line\">  if CocAction(&#x27;hasProvider&#x27;, &#x27;hover&#x27;)</span><br><span class=\"line\">    call CocActionAsync(&#x27;doHover&#x27;)</span><br><span class=\"line\">  else</span><br><span class=\"line\">    call feedkeys(&#x27;K&#x27;, &#x27;in&#x27;)</span><br><span class=\"line\">  endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\">nnoremap &lt;silent&gt; K :call ShowDocumentation()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Highlight the symbol and its references when holding the cursor.</span><br><span class=\"line\">autocmd CursorHold * silent call CocActionAsync(&#x27;highlight&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Symbol renaming.</span><br><span class=\"line\">nnoremap &lt;space&gt;r &lt;Plug&gt;(coc-rename)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Show all diagnostics.</span><br><span class=\"line\">nnoremap &lt;silent&gt;&lt;nowait&gt; &lt;space&gt;a  :&lt;C-u&gt;CocList diagnostics&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Manage extensions.</span><br><span class=\"line\">nnoremap &lt;silent&gt;&lt;nowait&gt; &lt;space&gt;e  :&lt;C-u&gt;CocList extensions&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Find symbol of current document.</span><br><span class=\"line\">nnoremap &lt;silent&gt;&lt;nowait&gt; &lt;space&gt;o  :&lt;C-u&gt;CocList outline&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------coc-end-----------------------------------------------------</span><br><span class=\"line\">&quot;-------------------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"-2\"><a href=\"#-2\" class=\"headerlink\" title=\"\"></a></h6><h3 id=\"init-vim-未启用的配置\"><a href=\"#init-vim-未启用的配置\" class=\"headerlink\" title=\"init.vim 未启用的配置\"></a>init.vim 未启用的配置</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;&quot;----------------------------------------------netrw_start----------------------------------------------------</span><br><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;let g:netrw_banner = 0</span><br><span class=\"line\">&quot;&quot;let g:netrw_liststyle = 3</span><br><span class=\"line\">&quot;&quot;let g:netrw_browse_split = 4</span><br><span class=\"line\">&quot;&quot;let g:netrw_altv = 1</span><br><span class=\"line\">&quot;&quot;let g:netrw_winsize = 15</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;set autochdir</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;&quot; Toggle Vexplore with &lt;F2&gt;</span><br><span class=\"line\">&quot;&quot;function! ToggleVExplorer()</span><br><span class=\"line\">&quot;&quot;    if exists(&quot;t:expl_buf_num&quot;)</span><br><span class=\"line\">&quot;&quot;        let expl_win_num = bufwinnr(t:expl_buf_num)</span><br><span class=\"line\">&quot;&quot;        let cur_win_num = winnr()</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;        if expl_win_num != -1</span><br><span class=\"line\">&quot;&quot;            while expl_win_num != cur_win_num</span><br><span class=\"line\">&quot;&quot;                exec &quot;wincmd w&quot;</span><br><span class=\"line\">&quot;&quot;                let cur_win_num = winnr()</span><br><span class=\"line\">&quot;&quot;            endwhile</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;            close</span><br><span class=\"line\">&quot;&quot;        endif</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;        unlet t:expl_buf_num</span><br><span class=\"line\">&quot;&quot;    else</span><br><span class=\"line\">&quot;&quot;         Vexplore</span><br><span class=\"line\">&quot;&quot;         let t:expl_buf_num = bufnr(&quot;%&quot;)</span><br><span class=\"line\">&quot;&quot;    endif</span><br><span class=\"line\">&quot;&quot;endfunction</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;map &lt;F2&gt; :call ToggleVExplorer()&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot; 状态栏无插件设置</span><br><span class=\"line\">&quot;&quot;hi VertSplit ctermfg=NONE ctermbg=NONE cterm=NONE</span><br><span class=\"line\">&quot;&quot;set fillchars=vert:\\ </span><br><span class=\"line\">&quot;&quot;&quot;&quot;set fillchars=vert:\\│</span><br><span class=\"line\">&quot;&quot;set statusline=%*\\ %.50F\\               &quot;显示文件名和文件路径</span><br><span class=\"line\">&quot;&quot;set statusline+=%=%y%m%r%h%w\\ %*        &quot;显示文件类型及文件状态</span><br><span class=\"line\">&quot;&quot;set statusline+=%&#123;&amp;ff&#125;\\[%&#123;&amp;fenc&#125;]\\ %*   &quot;显示文件编码类型</span><br><span class=\"line\">&quot;&quot;set statusline+=%l/%L,%c\\ %*            &quot;显示光标所在行和列</span><br><span class=\"line\">&quot;&quot;set statusline+=%3p%%                   &quot;显示光标前文本所占总文本的比例</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;</span><br><span class=\"line\">&quot;&quot;hi Statusline ctermfg=NONE ctermbg=NONE cterm=bold </span><br><span class=\"line\">&quot;&quot;hi StatuslineNC ctermfg=NONE ctermbg=NONE cterm=NONE</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">&quot;&quot;-----------------------------------------------netrw-end-----------------------------------------------------</span><br><span class=\"line\">&quot;&quot;-------------------------------------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>\n"},{"title":"Debian Fcitx 中文输入法","date":"2022-10-23T05:25:51.000Z","_content":"不是中文环境需要进行切换中文环境,可以通过以下命令切换:\n\n```bash\nsudo dpkg-reconfigure locales\n```\n\n至少选择zh_CN.UTF-8\n\n更新\n\n```bash\nsudo apt update \n```\n\n安装 fcitx\n\n```bash\nsudo apt install fcitx\n```\n\n安装 google-pinyin\n\n```bash\nsudo apt install fcitx-googlepinyin\n```\n\n重启\n\n命令行输入 im-config 选中fcitx\n","source":"_posts/debian-fcitx-中文输入法.md","raw":"---\ntitle: Debian Fcitx 中文输入法\ndate: 2022-10-23 13:25:51\ntags:\n\t- Debian\n\t- Fcitx\n\t- Linux\n---\n不是中文环境需要进行切换中文环境,可以通过以下命令切换:\n\n```bash\nsudo dpkg-reconfigure locales\n```\n\n至少选择zh_CN.UTF-8\n\n更新\n\n```bash\nsudo apt update \n```\n\n安装 fcitx\n\n```bash\nsudo apt install fcitx\n```\n\n安装 google-pinyin\n\n```bash\nsudo apt install fcitx-googlepinyin\n```\n\n重启\n\n命令行输入 im-config 选中fcitx\n","slug":"debian-fcitx-中文输入法","published":1,"updated":"2022-10-29T07:41:06.190Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0c00004oi5a6k796iq","content":"<p>不是中文环境需要进行切换中文环境,可以通过以下命令切换:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>\n\n<p>至少选择zh_CN.UTF-8</p>\n<p>更新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update </span><br></pre></td></tr></table></figure>\n\n<p>安装 fcitx</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install fcitx</span><br></pre></td></tr></table></figure>\n\n<p>安装 google-pinyin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install fcitx-googlepinyin</span><br></pre></td></tr></table></figure>\n\n<p>重启</p>\n<p>命令行输入 im-config 选中fcitx</p>\n","site":{"data":{}},"excerpt":"","more":"<p>不是中文环境需要进行切换中文环境,可以通过以下命令切换:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>\n\n<p>至少选择zh_CN.UTF-8</p>\n<p>更新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update </span><br></pre></td></tr></table></figure>\n\n<p>安装 fcitx</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install fcitx</span><br></pre></td></tr></table></figure>\n\n<p>安装 google-pinyin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install fcitx-googlepinyin</span><br></pre></td></tr></table></figure>\n\n<p>重启</p>\n<p>命令行输入 im-config 选中fcitx</p>\n"},{"title":"Debian Gnome 默认浏览器","date":"2022-10-23T05:25:51.000Z","_content":"可以参考里面的指引来设置默认浏览器\n```url\nhttps://wiki.debian.org/DefaultWebBrowser\n```\n","source":"_posts/debian-gnome-default-browser.md","raw":"---\ntitle: Debian Gnome 默认浏览器\ndate: 2022-10-23 13:25:51\ntags:\n\t- Debian\n\t- Gnome\n\t- Linux\n---\n可以参考里面的指引来设置默认浏览器\n```url\nhttps://wiki.debian.org/DefaultWebBrowser\n```\n","slug":"debian-gnome-default-browser","published":1,"updated":"2022-10-29T07:41:30.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0g00014oi538ad5b1w","content":"<p>可以参考里面的指引来设置默认浏览器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://wiki.debian.org/DefaultWebBrowser</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>可以参考里面的指引来设置默认浏览器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://wiki.debian.org/DefaultWebBrowser</span><br></pre></td></tr></table></figure>\n"},{"title":"Debian Bashrc","date":"2022-10-23T05:25:51.000Z","_content":"需要修改 bashrc 的时候，修改 /etc/bash.bashrc，而不是 ~/.bashrc 前者是全局的，下面这一句话就是 /etc/bash.bashrc 末尾的\n\n```bash\nsource /etc/profile.d/path.sh\n```\n\n（环境变量相关）\n","source":"_posts/debian-bashrc.md","raw":"---\ntitle: Debian Bashrc \ndate: 2022-10-23 13:25:51\ntags:\n\t- Debian\n\t- Linux \n\t- Bash\n---\n需要修改 bashrc 的时候，修改 /etc/bash.bashrc，而不是 ~/.bashrc 前者是全局的，下面这一句话就是 /etc/bash.bashrc 末尾的\n\n```bash\nsource /etc/profile.d/path.sh\n```\n\n（环境变量相关）\n","slug":"debian-bashrc","published":1,"updated":"2022-10-29T07:44:08.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0k00034oi52bdv4b5m","content":"<p>需要修改 bashrc 的时候，修改 &#x2F;etc&#x2F;bash.bashrc，而不是 ~&#x2F;.bashrc 前者是全局的，下面这一句话就是 &#x2F;etc&#x2F;bash.bashrc 末尾的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile.d/path.sh</span><br></pre></td></tr></table></figure>\n\n<p>（环境变量相关）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>需要修改 bashrc 的时候，修改 &#x2F;etc&#x2F;bash.bashrc，而不是 ~&#x2F;.bashrc 前者是全局的，下面这一句话就是 &#x2F;etc&#x2F;bash.bashrc 末尾的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile.d/path.sh</span><br></pre></td></tr></table></figure>\n\n<p>（环境变量相关）</p>\n"},{"title":"Debian Nvidia 驱动","date":"2022-10-23T05:25:51.000Z","_content":"最重要的一点，去 bios 那里关闭 secure boot 先！\n\n更新\n\n```bash\nsudo apt install nvidia-driver\n```\n\n重启\n\n```bash\nsudo reboot\n```\n\n验证是否安装成功\n\n```bash\nnvidia-smi\n```\n","source":"_posts/debian-nvidia.md","raw":"---\ntitle: Debian Nvidia 驱动\ndate: 2022-10-23 13:25:51\ntags:\n\t- Debian\n\t- Nvidia\n\t- Linux\n---\n最重要的一点，去 bios 那里关闭 secure boot 先！\n\n更新\n\n```bash\nsudo apt install nvidia-driver\n```\n\n重启\n\n```bash\nsudo reboot\n```\n\n验证是否安装成功\n\n```bash\nnvidia-smi\n```\n","slug":"debian-nvidia","published":1,"updated":"2022-10-29T07:41:51.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0l00044oi5fm4d6l8w","content":"<p>最重要的一点，去 bios 那里关闭 secure boot 先！</p>\n<p>更新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install nvidia-driver</span><br></pre></td></tr></table></figure>\n\n<p>重启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n\n<p>验证是否安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>最重要的一点，去 bios 那里关闭 secure boot 先！</p>\n<p>更新</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install nvidia-driver</span><br></pre></td></tr></table></figure>\n\n<p>重启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n\n<p>验证是否安装成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n"},{"title":"Bash Powerline Fonts 美化","date":"2022-10-23T05:25:51.000Z","_content":"```url\nhttps://github.com/b-ryan/powerline-shell#bash\n```\n\n留意 README.md 里面的内容，留意如何安装 powerline 字体\n","source":"_posts/linux-bash-powerline-arrow.md","raw":"---\ntitle: Bash Powerline Fonts 美化 \ndate: 2022-10-23 13:25:51\ntags:\n\t- Bash\n\t- Linux\n\t- Powerline\n---\n```url\nhttps://github.com/b-ryan/powerline-shell#bash\n```\n\n留意 README.md 里面的内容，留意如何安装 powerline 字体\n","slug":"linux-bash-powerline-arrow","published":1,"updated":"2022-10-29T07:43:51.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0l00054oi538m24npo","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/b-ryan/powerline-shell#bash</span><br></pre></td></tr></table></figure>\n\n<p>留意 README.md 里面的内容，留意如何安装 powerline 字体</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/b-ryan/powerline-shell#bash</span><br></pre></td></tr></table></figure>\n\n<p>留意 README.md 里面的内容，留意如何安装 powerline 字体</p>\n"},{"title":"Linux 环境变量配置错误处理","date":"2022-10-23T05:25:51.000Z","_content":"Linux 环境变量配置出错后，提示command not found\n\n处理方法：\n\n```bash\nexport PATH=$PATH:/usr/bin:/usr/sbin:/bin:/sbin\n```\n\n这样处理后，临时生效环境变量，然后修改配置错误的文件例如.bash_profile   /etc/profile .bashrc 等，修改后，执行source生效正确的环境变量\n\n```bash\nsource /etc/profile --根据实际情况修改后面的文件路径\n```\n","source":"_posts/linux-command-not-found-bash.md","raw":"---\ntitle: Linux 环境变量配置错误处理\ndate: 2022-10-23 13:25:51\ntags:\n\t- Bash\n\t- Linux\n---\nLinux 环境变量配置出错后，提示command not found\n\n处理方法：\n\n```bash\nexport PATH=$PATH:/usr/bin:/usr/sbin:/bin:/sbin\n```\n\n这样处理后，临时生效环境变量，然后修改配置错误的文件例如.bash_profile   /etc/profile .bashrc 等，修改后，执行source生效正确的环境变量\n\n```bash\nsource /etc/profile --根据实际情况修改后面的文件路径\n```\n","slug":"linux-command-not-found-bash","published":1,"updated":"2022-10-29T07:45:08.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0n00074oi5fbgbeuni","content":"<p>Linux 环境变量配置出错后，提示command not found</p>\n<p>处理方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/usr/bin:/usr/sbin:/bin:/sbin</span><br></pre></td></tr></table></figure>\n\n<p>这样处理后，临时生效环境变量，然后修改配置错误的文件例如.bash_profile   &#x2F;etc&#x2F;profile .bashrc 等，修改后，执行source生效正确的环境变量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile --根据实际情况修改后面的文件路径</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Linux 环境变量配置出错后，提示command not found</p>\n<p>处理方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/usr/bin:/usr/sbin:/bin:/sbin</span><br></pre></td></tr></table></figure>\n\n<p>这样处理后，临时生效环境变量，然后修改配置错误的文件例如.bash_profile   &#x2F;etc&#x2F;profile .bashrc 等，修改后，执行source生效正确的环境变量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile --根据实际情况修改后面的文件路径</span><br></pre></td></tr></table></figure>\n"},{"title":"Gnome Desktop File 参考","date":"2022-10-23T05:25:51.000Z","_content":"\neg:\n\n```bash\n[Desktop Entry]\nEncoding=UTF-8\nName=Tabby\nComment=Tabby\nExec=/home/asleep/softwares/tabby/tabby/tabby %U\nIcon=/home/asleep/softwares/tabby/tabby/tabby.svg\nTerminal=false\nStartupNotify=true\nType=Application\nCategories=Application;Development;\nStartupWMClass=tabby\n```\n\n需要改变的是 name，common，exec，icon，startupwmclass\n\n.desktop 文件位于 /usr/share/application/ 下面\n\nStartupWMClass\n\n```bash\nxprop | grep CLASS\n```\n","source":"_posts/linux-debian-gnome-desktop-launch.md","raw":"---\ntitle: Gnome Desktop File 参考 \ndate: 2022-10-23 13:25:51\ntags:\n\t- Gnome\n\t- Linux\n---\n\neg:\n\n```bash\n[Desktop Entry]\nEncoding=UTF-8\nName=Tabby\nComment=Tabby\nExec=/home/asleep/softwares/tabby/tabby/tabby %U\nIcon=/home/asleep/softwares/tabby/tabby/tabby.svg\nTerminal=false\nStartupNotify=true\nType=Application\nCategories=Application;Development;\nStartupWMClass=tabby\n```\n\n需要改变的是 name，common，exec，icon，startupwmclass\n\n.desktop 文件位于 /usr/share/application/ 下面\n\nStartupWMClass\n\n```bash\nxprop | grep CLASS\n```\n","slug":"linux-debian-gnome-desktop-launch","published":1,"updated":"2022-10-29T07:46:03.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0n00084oi5b5lg0k01","content":"<p>eg:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]</span><br><span class=\"line\">Encoding=UTF-8</span><br><span class=\"line\">Name=Tabby</span><br><span class=\"line\">Comment=Tabby</span><br><span class=\"line\">Exec=/home/asleep/softwares/tabby/tabby/tabby %U</span><br><span class=\"line\">Icon=/home/asleep/softwares/tabby/tabby/tabby.svg</span><br><span class=\"line\">Terminal=<span class=\"literal\">false</span></span><br><span class=\"line\">StartupNotify=<span class=\"literal\">true</span></span><br><span class=\"line\">Type=Application</span><br><span class=\"line\">Categories=Application;Development;</span><br><span class=\"line\">StartupWMClass=tabby</span><br></pre></td></tr></table></figure>\n\n<p>需要改变的是 name，common，exec，icon，startupwmclass</p>\n<p>.desktop 文件位于 &#x2F;usr&#x2F;share&#x2F;application&#x2F; 下面</p>\n<p>StartupWMClass</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xprop | grep CLASS</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>eg:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Desktop Entry]</span><br><span class=\"line\">Encoding=UTF-8</span><br><span class=\"line\">Name=Tabby</span><br><span class=\"line\">Comment=Tabby</span><br><span class=\"line\">Exec=/home/asleep/softwares/tabby/tabby/tabby %U</span><br><span class=\"line\">Icon=/home/asleep/softwares/tabby/tabby/tabby.svg</span><br><span class=\"line\">Terminal=<span class=\"literal\">false</span></span><br><span class=\"line\">StartupNotify=<span class=\"literal\">true</span></span><br><span class=\"line\">Type=Application</span><br><span class=\"line\">Categories=Application;Development;</span><br><span class=\"line\">StartupWMClass=tabby</span><br></pre></td></tr></table></figure>\n\n<p>需要改变的是 name，common，exec，icon，startupwmclass</p>\n<p>.desktop 文件位于 &#x2F;usr&#x2F;share&#x2F;application&#x2F; 下面</p>\n<p>StartupWMClass</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xprop | grep CLASS</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux VScode 字体","date":"2022-10-23T05:25:51.000Z","_content":"\n```url\nhttps://github.com/tonsky/FiraCode\n```\n","source":"_posts/linux-debian-vscode-fonts-firacode.md","raw":"---\ntitle: Linux VScode 字体\ndate: 2022-10-23 13:25:51\ntags:\n\t- VScode\n\t- Linux\n---\n\n```url\nhttps://github.com/tonsky/FiraCode\n```\n","slug":"linux-debian-vscode-fonts-firacode","published":1,"updated":"2022-10-29T07:46:52.933Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0p000a4oi5err0ajnw","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/tonsky/FiraCode</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/tonsky/FiraCode</span><br></pre></td></tr></table></figure>\n"},{"title":"Nodejs 换源","date":"2022-10-23T05:25:51.000Z","_content":"\n由于 Node 的官方模块仓库网速太慢，模块仓库需要切换到阿里的源\n\n```bash\nnpm config set registry https://registry.npm.taobao.org/\n```\n\n执行下面的命令，确认是否切换成功\n\n```bash\nnpm config get registry\n```\n","source":"_posts/node 换源 阿里.md","raw":"---\ntitle: Nodejs 换源\ndate: 2022-10-23 13:25:51\ntags:\n\t- Nodejs\n---\n\n由于 Node 的官方模块仓库网速太慢，模块仓库需要切换到阿里的源\n\n```bash\nnpm config set registry https://registry.npm.taobao.org/\n```\n\n执行下面的命令，确认是否切换成功\n\n```bash\nnpm config get registry\n```\n","slug":"node 换源 阿里","published":1,"updated":"2022-10-29T07:47:28.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0p000b4oi5d4ayfxkb","content":"<p>由于 Node 的官方模块仓库网速太慢，模块仓库需要切换到阿里的源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>\n\n<p>执行下面的命令，确认是否切换成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config get registry</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>由于 Node 的官方模块仓库网速太慢，模块仓库需要切换到阿里的源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>\n\n<p>执行下面的命令，确认是否切换成功</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config get registry</span><br></pre></td></tr></table></figure>\n"},{"title":"Linux 环境变量配置","date":"2022-10-23T05:25:51.000Z","_content":"\n\n/etc/profile.d/path.sh\n\n```bash\nexport PATH=$PATH:/home/asleep/softwares/conda/conda/bin\nexport PATH=$PATH:/home/asleep/softwares/qrcp/qrcp\nexport PATH=$PATH:/home/asleep/softwares/nodejs/nodejs/bin\nexport PATH=$PATH:/home/asleep/softwares/baidunetdisk/baidunetdisk/opt/baidunetdisk\nexport PATH=$PATH:/home/asleep/softwares/adb/adb\nexport PATH=$PATH:/home/asleep/softwares/wine/wine\nexport PATH=$PATH:/home/asleep/softwares/neovim/neovim\nexport PATH=$PATH:/home/asleep/softwares/go/go_path/bin\nexport PATH=$PATH:/home/asleep/softwares/autossh/autossh\n\nexport GOROOT='/home/asleep/softwares/go/go_base/go'\nexport GOPATH='/home/asleep/softwares/go/go_path'\nexport GOCACHE='/home/asleep/softwares/go/go_cache'\nexport GOENV='/home/asleep/softwares/go/go_env'\n# export GOMOD='/home/asleep/softwares/go/go_mod'\nexport GO111MODULE='auto'\n# export GOWORK='/home/asleep/softwares/go/go_work'\nexport GOPROXY='https://goproxy.cn/,direct'\nexport PATH=$PATH:/home/asleep/softwares/go/go_base/go/bin\n\n# alias vim='vim.tiny'\n# alias sudo='sudo '\n```\n\n这里只能存 path 和 alias，其他的能在 /etc/bash.bashrc 里面解决就在那里解决，原则！\n","source":"_posts/path.sh gopath alias.md","raw":"---\ntitle: Linux 环境变量配置\ndate: 2022-10-23 13:25:51\ntags:\n\t- Bash\n\t- Linux\n---\n\n\n/etc/profile.d/path.sh\n\n```bash\nexport PATH=$PATH:/home/asleep/softwares/conda/conda/bin\nexport PATH=$PATH:/home/asleep/softwares/qrcp/qrcp\nexport PATH=$PATH:/home/asleep/softwares/nodejs/nodejs/bin\nexport PATH=$PATH:/home/asleep/softwares/baidunetdisk/baidunetdisk/opt/baidunetdisk\nexport PATH=$PATH:/home/asleep/softwares/adb/adb\nexport PATH=$PATH:/home/asleep/softwares/wine/wine\nexport PATH=$PATH:/home/asleep/softwares/neovim/neovim\nexport PATH=$PATH:/home/asleep/softwares/go/go_path/bin\nexport PATH=$PATH:/home/asleep/softwares/autossh/autossh\n\nexport GOROOT='/home/asleep/softwares/go/go_base/go'\nexport GOPATH='/home/asleep/softwares/go/go_path'\nexport GOCACHE='/home/asleep/softwares/go/go_cache'\nexport GOENV='/home/asleep/softwares/go/go_env'\n# export GOMOD='/home/asleep/softwares/go/go_mod'\nexport GO111MODULE='auto'\n# export GOWORK='/home/asleep/softwares/go/go_work'\nexport GOPROXY='https://goproxy.cn/,direct'\nexport PATH=$PATH:/home/asleep/softwares/go/go_base/go/bin\n\n# alias vim='vim.tiny'\n# alias sudo='sudo '\n```\n\n这里只能存 path 和 alias，其他的能在 /etc/bash.bashrc 里面解决就在那里解决，原则！\n","slug":"path.sh gopath alias","published":1,"updated":"2022-10-29T07:48:27.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl9tmhl0r000d4oi58bzn73fk","content":"<p>&#x2F;etc&#x2F;profile.d&#x2F;path.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/conda/conda/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/qrcp/qrcp</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/nodejs/nodejs/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/baidunetdisk/baidunetdisk/opt/baidunetdisk</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/adb/adb</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/wine/wine</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/neovim/neovim</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/go/go_path/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/autossh/autossh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOROOT=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_base/go&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPATH=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_path&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOCACHE=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_cache&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOENV=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_env&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># export GOMOD=&#x27;/home/asleep/softwares/go/go_mod&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GO111MODULE=<span class=\"string\">&#x27;auto&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># export GOWORK=&#x27;/home/asleep/softwares/go/go_work&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=<span class=\"string\">&#x27;https://goproxy.cn/,direct&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/go/go_base/go/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># alias vim=&#x27;vim.tiny&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># alias sudo=&#x27;sudo &#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里只能存 path 和 alias，其他的能在 &#x2F;etc&#x2F;bash.bashrc 里面解决就在那里解决，原则！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>&#x2F;etc&#x2F;profile.d&#x2F;path.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/conda/conda/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/qrcp/qrcp</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/nodejs/nodejs/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/baidunetdisk/baidunetdisk/opt/baidunetdisk</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/adb/adb</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/wine/wine</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/neovim/neovim</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/go/go_path/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/autossh/autossh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOROOT=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_base/go&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPATH=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_path&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOCACHE=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_cache&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOENV=<span class=\"string\">&#x27;/home/asleep/softwares/go/go_env&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># export GOMOD=&#x27;/home/asleep/softwares/go/go_mod&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GO111MODULE=<span class=\"string\">&#x27;auto&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># export GOWORK=&#x27;/home/asleep/softwares/go/go_work&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=<span class=\"string\">&#x27;https://goproxy.cn/,direct&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/home/asleep/softwares/go/go_base/go/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># alias vim=&#x27;vim.tiny&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># alias sudo=&#x27;sudo &#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里只能存 path 和 alias，其他的能在 &#x2F;etc&#x2F;bash.bashrc 里面解决就在那里解决，原则！</p>\n"},{"title":"VIM 批量查找替换","date":"2022-10-23T05:25:51.000Z","_content":"\n\n```\n# 当前行进行替换\n:s/XXX/YYY/g\n# XXX是需要替换的字符串,YYY是替换后的字符串\n\n\n# 全局替换\n:% s/XXX/YYY/g\n\n\n# 对指定部分进行替换用V进入visual模式,再进行\n:s/XXX/YYY/g\n\n\n# 或指定行范围 替换\n:100,102s/XXX/YYY/g\n\n# 模糊查找不区分大小写，在要查找的内容后面加上 \\c 就行\n:/xxx\\c\n:s/XXX\\c/YYY/g\n```\n","source":"_posts/vim-nvim-replace-批量查找替换.md","raw":"---\ntitle: VIM 批量查找替换\ndate: 2022-10-23 13:25:51\ntags:\n\t- VIM\n---\n\n\n```\n# 当前行进行替换\n:s/XXX/YYY/g\n# XXX是需要替换的字符串,YYY是替换后的字符串\n\n\n# 全局替换\n:% s/XXX/YYY/g\n\n\n# 对指定部分进行替换用V进入visual模式,再进行\n:s/XXX/YYY/g\n\n\n# 或指定行范围 替换\n:100,102s/XXX/YYY/g\n\n# 模糊查找不区分大小写，在要查找的内容后面加上 \\c 就行\n:/xxx\\c\n:s/XXX\\c/YYY/g\n```\n","slug":"vim-nvim-replace-批量查找替换","published":1,"updated":"2022-10-30T03:07:21.148Z","_id":"cl9tmhl0z001j4oi54c0ja94l","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 当前行进行替换</span><br><span class=\"line\">:s/XXX/YYY/g</span><br><span class=\"line\"># XXX是需要替换的字符串,YYY是替换后的字符串</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 全局替换</span><br><span class=\"line\">:% s/XXX/YYY/g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 对指定部分进行替换用V进入visual模式,再进行</span><br><span class=\"line\">:s/XXX/YYY/g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 或指定行范围 替换</span><br><span class=\"line\">:100,102s/XXX/YYY/g</span><br><span class=\"line\"></span><br><span class=\"line\"># 模糊查找不区分大小写，在要查找的内容后面加上 \\c 就行</span><br><span class=\"line\">:/xxx\\c</span><br><span class=\"line\">:s/XXX\\c/YYY/g</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 当前行进行替换</span><br><span class=\"line\">:s/XXX/YYY/g</span><br><span class=\"line\"># XXX是需要替换的字符串,YYY是替换后的字符串</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 全局替换</span><br><span class=\"line\">:% s/XXX/YYY/g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 对指定部分进行替换用V进入visual模式,再进行</span><br><span class=\"line\">:s/XXX/YYY/g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 或指定行范围 替换</span><br><span class=\"line\">:100,102s/XXX/YYY/g</span><br><span class=\"line\"></span><br><span class=\"line\"># 模糊查找不区分大小写，在要查找的内容后面加上 \\c 就行</span><br><span class=\"line\">:/xxx\\c</span><br><span class=\"line\">:s/XXX\\c/YYY/g</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl9m5zzxa0007xni57bro9fzn","category_id":"cl9m5zzx80004xni5hevk4mc3","_id":"cl9m5zzxc000cxni5199jbobl"},{"post_id":"cl9m5zzx40002xni5grqa00lo","category_id":"cl9m5zzx80004xni5hevk4mc3","_id":"cl9m5zzxd000exni5dm3mfwhl"}],"PostTag":[{"post_id":"cl9m5zzxa0007xni57bro9fzn","tag_id":"cl9m5zzx90005xni5ftur8hxk","_id":"cl9m5zzxc000axni504c55ccq"},{"post_id":"cl9m5zzx40002xni5grqa00lo","tag_id":"cl9m5zzx90005xni5ftur8hxk","_id":"cl9m5zzxc000bxni5cb6idi6x"},{"post_id":"cl9m5zzx60003xni57f1i3inc","tag_id":"cl9m5zzx90005xni5ftur8hxk","_id":"cl9m5zzxd000gxni5ea7hb9w5"},{"post_id":"cl9m5zzx60003xni57f1i3inc","tag_id":"cl9m5zzxc000dxni58yxifhkf","_id":"cl9m5zzxd000hxni54ztue7wp"},{"post_id":"cl9p7vzom00006bi5gknmejmd","tag_id":"cl9m5zzx90005xni5ftur8hxk","_id":"cl9p7vzov00016bi5fv7o2sq8"},{"post_id":"cl9pakkk300006qi53cq52tm9","tag_id":"cl9pakkk800016qi5262qepch","_id":"cl9pakkka00026qi5ffnkav8h"},{"post_id":"cl9pbbk8x000036i570ym3cm8","tag_id":"cl9p0qi300000oti5dv7v0p7h","_id":"cl9pbbk91000136i5614819cb"},{"post_id":"cl9qtda0m0000i9i53d0a2zl8","tag_id":"cl9p0qi300000oti5dv7v0p7h","_id":"cl9qtda0s0001i9i5ak57ggw4"},{"post_id":"cl9tjybog0000wxi51gamf4by","tag_id":"cl9tjyboo0001wxi55cvsan9l","_id":"cl9tjybor0002wxi5hzzz1txf"},{"post_id":"cl9tmhl0c00004oi5a6k796iq","tag_id":"cl9tmhl0h00024oi55ev25mel","_id":"cl9tmhl0s000e4oi5ds6sf51a"},{"post_id":"cl9tmhl0c00004oi5a6k796iq","tag_id":"cl9tmhl0m00064oi595cl5cf6","_id":"cl9tmhl0s000f4oi5dq638okg"},{"post_id":"cl9tmhl0c00004oi5a6k796iq","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0s000h4oi5dh51fftk"},{"post_id":"cl9tmhl0g00014oi538ad5b1w","tag_id":"cl9tmhl0h00024oi55ev25mel","_id":"cl9tmhl0t000k4oi58a1y41c6"},{"post_id":"cl9tmhl0g00014oi538ad5b1w","tag_id":"cl9tmhl0s000g4oi56j51bfi5","_id":"cl9tmhl0t000l4oi5cij9d7eh"},{"post_id":"cl9tmhl0g00014oi538ad5b1w","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0t000n4oi5gu0zbdu9"},{"post_id":"cl9tmhl0k00034oi52bdv4b5m","tag_id":"cl9tmhl0h00024oi55ev25mel","_id":"cl9tmhl0u000q4oi58kwgg9zo"},{"post_id":"cl9tmhl0k00034oi52bdv4b5m","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0u000r4oi58b7d9y7r"},{"post_id":"cl9tmhl0k00034oi52bdv4b5m","tag_id":"cl9tmhl0t000o4oi58jet7dpf","_id":"cl9tmhl0u000t4oi5da8adfcy"},{"post_id":"cl9tmhl0l00044oi5fm4d6l8w","tag_id":"cl9tmhl0h00024oi55ev25mel","_id":"cl9tmhl0v000v4oi55h5kcvgp"},{"post_id":"cl9tmhl0l00044oi5fm4d6l8w","tag_id":"cl9tmhl0u000p4oi550beeak4","_id":"cl9tmhl0v000w4oi53tmx674i"},{"post_id":"cl9tmhl0l00044oi5fm4d6l8w","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0v000y4oi54cn0cy9z"},{"post_id":"cl9tmhl0l00054oi538m24npo","tag_id":"cl9tmhl0t000o4oi58jet7dpf","_id":"cl9tmhl0w00114oi5gjmk8w8e"},{"post_id":"cl9tmhl0l00054oi538m24npo","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0w00124oi5d7khglau"},{"post_id":"cl9tmhl0l00054oi538m24npo","tag_id":"cl9tmhl0v000z4oi5ea3jcehe","_id":"cl9tmhl0w00144oi52i1lfstl"},{"post_id":"cl9tmhl0n00074oi5fbgbeuni","tag_id":"cl9tmhl0t000o4oi58jet7dpf","_id":"cl9tmhl0x00164oi5edm2ffd7"},{"post_id":"cl9tmhl0n00074oi5fbgbeuni","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0x00174oi5bvn3bsno"},{"post_id":"cl9tmhl0n00084oi5b5lg0k01","tag_id":"cl9tmhl0s000g4oi56j51bfi5","_id":"cl9tmhl0x001a4oi55z5h8deg"},{"post_id":"cl9tmhl0n00084oi5b5lg0k01","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0x001b4oi51lc84d9g"},{"post_id":"cl9tmhl0p000a4oi5err0ajnw","tag_id":"cl9tmhl0x00194oi5534f45ki","_id":"cl9tmhl0y001d4oi57hvfhbkj"},{"post_id":"cl9tmhl0p000a4oi5err0ajnw","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0y001e4oi5gynw1hcz"},{"post_id":"cl9tmhl0p000b4oi5d4ayfxkb","tag_id":"cl9tmhl0x001c4oi54o947o2e","_id":"cl9tmhl0y001g4oi528t65sr1"},{"post_id":"cl9tmhl0r000d4oi58bzn73fk","tag_id":"cl9tmhl0t000o4oi58jet7dpf","_id":"cl9tmhl0y001h4oi518m04fnx"},{"post_id":"cl9tmhl0r000d4oi58bzn73fk","tag_id":"cl9tmhl0o00094oi581jteksy","_id":"cl9tmhl0y001i4oi5dofoa04m"},{"post_id":"cl9tmhl0z001j4oi54c0ja94l","tag_id":"cl9tjyboo0001wxi55cvsan9l","_id":"cl9tmhl0z001k4oi5a0on9ujj"}],"Tag":[{"name":"Hexo","_id":"cl9m5zzx90005xni5ftur8hxk"},{"name":"Github","_id":"cl9m5zzxc000dxni58yxifhkf"},{"name":"MARO","_id":"cl9p0qi300000oti5dv7v0p7h"},{"name":"工作面试","_id":"cl9pakkk800016qi5262qepch"},{"name":"VIM","_id":"cl9tjyboo0001wxi55cvsan9l"},{"name":"Debian","_id":"cl9tmhl0h00024oi55ev25mel"},{"name":"Fcitx","_id":"cl9tmhl0m00064oi595cl5cf6"},{"name":"Linux","_id":"cl9tmhl0o00094oi581jteksy"},{"name":"Gnome","_id":"cl9tmhl0s000g4oi56j51bfi5"},{"name":"Bash","_id":"cl9tmhl0t000o4oi58jet7dpf"},{"name":"Nvidia","_id":"cl9tmhl0u000p4oi550beeak4"},{"name":"Powerline","_id":"cl9tmhl0v000z4oi5ea3jcehe"},{"name":"VScode","_id":"cl9tmhl0x00194oi5534f45ki"},{"name":"Nodejs","_id":"cl9tmhl0x001c4oi54o947o2e"}]}}